{
	"id": "7befa1ce6811a2352d990080a718673e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"DualERC1155ERC20Converter.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.22;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\";\n\n/// @notice Minimal interface for an ERC20 token that supports minting, transferFrom, and burning.\ninterface IERC20MintableBurnable {\n    function mint(address to, uint256 amount) external;\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n    function burn(uint256 amount) external;\n}\n\n/// @notice Minimal interface for an ERC1155 token that supports minting.\ninterface IERC1155Minter {\n    function mint(address to, uint256 id, uint256 amount, bytes memory data) external;\n}\n\n/// @title DualERC1155ERC20Converter\n/// @notice This contract supports two conversion directions:\n///         1. Forward conversion (ERC1155 -> ERC20): when the contract receives ERC1155 tokens,\n///            it mints ERC20 tokens (1:1 ratio) to the sender if the pair is allowed.\n///         2. Reverse conversion (ERC20 -> ERC1155): a user can convert ERC20 tokens into ERC1155 tokens\n///            by calling a function. The contract transfers and burns the ERC20 tokens and then\n///            calls mint on an allowed ERC1155 contract.\n///         Allowed ERC1155 token pairs (contract address and token ID) are configured separately\n///         for forward and reverse conversions. The ERC20 token is set via an admin function.\ncontract DualERC1155ERC20Converter is Ownable, ERC1155Holder {\n    /// @notice The ERC20 token used in conversion.\n    IERC20MintableBurnable public erc20Token;\n\n    // --- Allowed Mappings ---\n    /// @notice Allowed ERC1155 contract/token pairs for forward conversion (ERC1155 -> ERC20).\n    /// When an ERC1155 token is sent to this contract, the sender receives ERC20 tokens if\n    /// allowedERC1155Forward[erc1155Contract][tokenId] is true.\n    mapping(address => mapping(uint256 => bool)) public allowedERC1155Forward;\n\n    /// @notice Allowed ERC1155 contract/token pairs for reverse conversion (ERC20 -> ERC1155).\n    /// When converting ERC20 tokens, the specified ERC1155 contract/token pair must be allowed.\n    mapping(address => mapping(uint256 => bool)) public allowedERC1155Reverse;\n\n    /// @notice Structure that records details of a conversion.\n    struct ConversionRecord {\n        uint256 erc1155TokenId; // The ERC1155 token ID that was received.\n        uint256 erc1155Amount;  // The amount of ERC1155 tokens received.\n        uint256 erc20Amount;    // The amount of ERC20 tokens minted.\n        uint256 timestamp;      // The time the conversion occurred.\n    }\n\n    /// @notice Mapping from a sender address to an array of conversion records.\n    mapping(address => ConversionRecord[]) public conversionRecordsBySender;\n    /// @notice Global array of all conversion records.\n    ConversionRecord[] public conversionHistory;\n\n    // --- History Structures for Reverse Conversion ---\n    struct ConversionRecordERC20ToERC1155 {\n        address user;\n        address erc1155Contract;\n        uint256 tokenId;\n        uint256 amount;\n        uint256 timestamp;\n    }\n    \n    /// @notice Global array of reverse conversion records.\n    ConversionRecordERC20ToERC1155[] public erc20ToErc1155History;\n    \n    /// @notice Mapping from a user address to an array of their reverse conversion records.\n    mapping(address => ConversionRecordERC20ToERC1155[]) public conversionRecordsERC20ToERC1155ByUser;\n    \n\n    /// @notice Emitted when a conversion is performed.\n    event ConversionPerformed(\n        address indexed sender,\n        uint256 indexed erc1155TokenId,\n        uint256 erc1155Amount,\n        uint256 erc20Amount,\n        uint256 timestamp\n    );\n    // --- Events ---\n    event ERC20TokenUpdated(address indexed previousERC20, address indexed newERC20);\n    event AllowedERC1155ForwardAdded(address indexed erc1155Contract, uint256 indexed tokenId);\n    event AllowedERC1155ForwardRemoved(address indexed erc1155Contract, uint256 indexed tokenId);\n    event AllowedERC1155ReverseAdded(address indexed erc1155Contract, uint256 indexed tokenId);\n    event AllowedERC1155ReverseRemoved(address indexed erc1155Contract, uint256 indexed tokenId);\n    event ERC1155ToERC20Conversion(\n        address indexed sender,\n        address indexed erc1155Contract,\n        uint256 indexed tokenId,\n        uint256 amount,\n        uint256 timestamp\n    );\n    event ERC20ToERC1155Conversion(\n        address indexed user,\n        address indexed erc1155Contract,\n        uint256 indexed tokenId,\n        uint256 amount,\n        uint256 timestamp\n    );\n\n    /**\n     * @notice Constructor that passes msg.sender to Ownable.\n     */\n    constructor() Ownable(msg.sender) {}\n\n    // --- Admin Functions ---\n\n    /**\n     * @notice Sets (or updates) the ERC20 token contract address.\n     * @param _erc20Token The address of the ERC20 token contract.\n     */\n    function setERC20Token(address _erc20Token) external onlyOwner {\n        require(_erc20Token != address(0) && _erc20Token.code.length > 0, \"Invalid ERC20 token address\");\n        address previous = address(erc20Token);\n        erc20Token = IERC20MintableBurnable(_erc20Token);\n        emit ERC20TokenUpdated(previous, _erc20Token);\n    }\n\n    /**\n     * @notice Adds an allowed ERC1155 contract/token pair for forward conversion.\n     * @param erc1155Contract The ERC1155 contract address.\n     * @param tokenId The ERC1155 token id.\n     */\n    function addAllowedERC1155Forward(address erc1155Contract, uint256 tokenId) external onlyOwner {\n        require(erc1155Contract != address(0) && erc1155Contract.code.length > 0, \"Invalid ERC1155 address\");\n        allowedERC1155Forward[erc1155Contract][tokenId] = true;\n        emit AllowedERC1155ForwardAdded(erc1155Contract, tokenId);\n    }\n\n    /**\n     * @notice Removes an allowed ERC1155 contract/token pair for forward conversion.\n     * @param erc1155Contract The ERC1155 contract address.\n     * @param tokenId The ERC1155 token id.\n     */\n    function removeAllowedERC1155Forward(address erc1155Contract, uint256 tokenId) external onlyOwner {\n        allowedERC1155Forward[erc1155Contract][tokenId] = false;\n        emit AllowedERC1155ForwardRemoved(erc1155Contract, tokenId);\n    }\n\n    /**\n     * @notice Adds an allowed ERC1155 contract/token pair for reverse conversion.\n     * @param erc1155Contract The ERC1155 contract address.\n     * @param tokenId The ERC1155 token id.\n     */\n    function addAllowedERC1155Reverse(address erc1155Contract, uint256 tokenId) external onlyOwner {\n        require(erc1155Contract != address(0) && erc1155Contract.code.length > 0, \"Invalid ERC1155 address\");\n        allowedERC1155Reverse[erc1155Contract][tokenId] = true;\n        emit AllowedERC1155ReverseAdded(erc1155Contract, tokenId);\n    }\n\n    /**\n     * @notice Removes an allowed ERC1155 contract/token pair for reverse conversion.\n     * @param erc1155Contract The ERC1155 contract address.\n     * @param tokenId The ERC1155 token id.\n     */\n    function removeAllowedERC1155Reverse(address erc1155Contract, uint256 tokenId) external onlyOwner {\n        allowedERC1155Reverse[erc1155Contract][tokenId] = false;\n        emit AllowedERC1155ReverseRemoved(erc1155Contract, tokenId);\n    }\n\n    // --- Forward Conversion (ERC1155 -> ERC20) ---\n    // When this contract receives ERC1155 tokens, it will mint ERC20 tokens to the sender.\n    // The conversion is triggered via the safeTransfer hooks.\n\n    /**\n     * @notice Called when a single ERC1155 token type is transferred to this contract.\n     * Requirements:\n     * - The caller (operator) must equal the token owner (`from`).\n     * - The ERC1155 contract (msg.sender) and token id must be allowed for forward conversion.\n     * @return bytes4 indicating acceptance.\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) public override returns (bytes4) {\n        require(operator == from, \"Only the token owner can trigger conversion\");\n        require(allowedERC1155Forward[msg.sender][id], \"ERC1155 token not allowed for conversion\");\n        require(address(erc20Token) != address(0), \"ERC20 token not set\");\n\n        _convertERC1155ToERC20(from, id, value);\n        return this.onERC1155Received.selector;\n    }\n\n        /**\n     * @notice Internal function that performs the conversion.\n     * It verifies that the total converted by the sender (for this token ID) does not exceed\n     * the sender's original balance. The sender's original balance is derived as the current balance\n     * in the ERC1155 token contract plus the transferred amount.\n     *\n     * @param sender The address of the original ERC1155 token holder.\n     * @param erc1155TokenId The ERC1155 token ID that was received.\n     * @param erc1155Amount The amount of ERC1155 tokens received.\n     */\n    function _convertERC1155ToERC20(\n        address sender,\n        uint256 erc1155TokenId,\n        uint256 erc1155Amount\n    ) internal {\n        // In this example, we use a 1:1 conversion ratio.\n        uint256 erc20Amount = erc1155Amount;\n        require(address(erc20Token) != address(0), \"ERC20 token not defined\");\n\n        // Mint the ERC20 tokens to the sender.\n        erc20Token.mint(sender, erc20Amount);\n\n        // Record the conversion.\n        ConversionRecord memory record = ConversionRecord({\n            erc1155TokenId: erc1155TokenId,\n            erc1155Amount: erc1155Amount,\n            erc20Amount: erc20Amount,\n            timestamp: block.timestamp\n        });\n        conversionHistory.push(record);\n        conversionRecordsBySender[sender].push(record);\n\n        emit ConversionPerformed(sender, erc1155TokenId, erc1155Amount, erc20Amount, block.timestamp);\n    }\n\n    /**\n     * @notice Called when multiple ERC1155 token types are transferred in a batch.\n     * Requirements:\n     * - The caller (operator) must equal the token owner (`from`).\n     * - Each ERC1155 contract (msg.sender) and token id must be allowed.\n     * @return bytes4 indicating acceptance.\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public override returns (bytes4) {\n        require(operator == from, \"Only the token owner can trigger conversion\");\n        require(ids.length == values.length, \"IDs and values length mismatch\");\n        require(address(erc20Token) != address(0), \"ERC20 token not set\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            require(allowedERC1155Forward[msg.sender][ids[i]], \"One or more ERC1155 tokens not allowed for conversion\");\n            erc20Token.mint(from, values[i]);\n            emit ERC1155ToERC20Conversion(from, msg.sender, ids[i], values[i], block.timestamp);\n        }\n        return this.onERC1155BatchReceived.selector;\n    }\n\n    // --- Reverse Conversion (ERC20 -> ERC1155) ---\n    // A user calls this function to convert their ERC20 tokens back into ERC1155 tokens.\n    // The user must have approved this contract to spend the required amount of ERC20 tokens.\n    /**\n     * @notice Converts ERC20 tokens into ERC1155 tokens.\n     * Transfers ERC20 tokens from the user, burns them, and then mints ERC1155 tokens on the specified contract.\n     * @param erc1155Contract The address of the ERC1155 contract on which to mint tokens.\n     * @param tokenId The ERC1155 token id to mint.\n     * @param amount The amount of ERC20 tokens to convert (and thus ERC1155 tokens to mint).\n     */\n    function convertToERC1155(address erc1155Contract, uint256 tokenId, uint256 amount) external {\n        require(allowedERC1155Reverse[erc1155Contract][tokenId], \"Conversion not allowed for this ERC1155 token\");\n        require(amount > 0, \"Amount must be greater than zero\");\n        require(address(erc20Token) != address(0), \"ERC20 token not set\");\n\n        // Transfer ERC20 tokens from the user to this contract.\n        bool success = erc20Token.transferFrom(msg.sender, address(this), amount);\n        require(success, \"ERC20 transfer failed\");\n\n        // Burn the ERC20 tokens.\n        erc20Token.burn(amount);\n\n        // Mint the ERC1155 tokens to the user.\n        IERC1155Minter(erc1155Contract).mint(msg.sender, tokenId, amount, \"\");\n\n        // Save history of the conversion.\n        ConversionRecordERC20ToERC1155 memory record = ConversionRecordERC20ToERC1155({\n            user: msg.sender,\n            erc1155Contract: erc1155Contract,\n            tokenId: tokenId,\n            amount: amount,\n            timestamp: block.timestamp\n        });\n        erc20ToErc1155History.push(record);\n        conversionRecordsERC20ToERC1155ByUser[msg.sender].push(record);    \n\n        emit ERC20ToERC1155Conversion(msg.sender, erc1155Contract, tokenId, amount, block.timestamp);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165, ERC165} from \"../../../utils/introspection/ERC165.sol\";\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\n\n/**\n * @dev Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC-1155 tokens.\n *\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n * stuck.\n */\nabstract contract ERC1155Holder is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ERC1155Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC-1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC-1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":\"ERC1155Holder\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xe103e95f854ef0cd1bba5f469175f67cd332f5c2561941f165e3dd65cee94d6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf8cc5d07cf8003255f9d766fe8188b9f6e33b6240e126a605f0d061566b23e\",\"dweb:/ipfs/Qmd7okDCSoUt1L4G9hmb5c4W8kWUnfpAa2jyBKUp4xKErd\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"DualERC1155ERC20Converter.sol": {
				"DualERC1155ERC20Converter": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "erc1155Contract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "AllowedERC1155ForwardAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "erc1155Contract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "AllowedERC1155ForwardRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "erc1155Contract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "AllowedERC1155ReverseAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "erc1155Contract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "AllowedERC1155ReverseRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "erc1155TokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "erc1155Amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "erc20Amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "ConversionPerformed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "erc1155Contract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "ERC1155ToERC20Conversion",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "erc1155Contract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "ERC20ToERC1155Conversion",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousERC20",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newERC20",
									"type": "address"
								}
							],
							"name": "ERC20TokenUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "erc1155Contract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "addAllowedERC1155Forward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "erc1155Contract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "addAllowedERC1155Reverse",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allowedERC1155Forward",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allowedERC1155Reverse",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "conversionHistory",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc1155TokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "erc1155Amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "erc20Amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "conversionRecordsBySender",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "erc1155TokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "erc1155Amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "erc20Amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "conversionRecordsERC20ToERC1155ByUser",
							"outputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "erc1155Contract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "erc1155Contract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "convertToERC1155",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "erc20ToErc1155History",
							"outputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "erc1155Contract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "erc20Token",
							"outputs": [
								{
									"internalType": "contract IERC20MintableBurnable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "erc1155Contract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "removeAllowedERC1155Forward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "erc1155Contract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "removeAllowedERC1155Reverse",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_erc20Token",
									"type": "address"
								}
							],
							"name": "setERC20Token",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"addAllowedERC1155Forward(address,uint256)": {
								"params": {
									"erc1155Contract": "The ERC1155 contract address.",
									"tokenId": "The ERC1155 token id."
								}
							},
							"addAllowedERC1155Reverse(address,uint256)": {
								"params": {
									"erc1155Contract": "The ERC1155 contract address.",
									"tokenId": "The ERC1155 token id."
								}
							},
							"convertToERC1155(address,uint256,uint256)": {
								"params": {
									"amount": "The amount of ERC20 tokens to convert (and thus ERC1155 tokens to mint).",
									"erc1155Contract": "The address of the ERC1155 contract on which to mint tokens.",
									"tokenId": "The ERC1155 token id to mint."
								}
							},
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"returns": {
									"_0": "bytes4 indicating acceptance."
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"returns": {
									"_0": "bytes4 indicating acceptance."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeAllowedERC1155Forward(address,uint256)": {
								"params": {
									"erc1155Contract": "The ERC1155 contract address.",
									"tokenId": "The ERC1155 token id."
								}
							},
							"removeAllowedERC1155Reverse(address,uint256)": {
								"params": {
									"erc1155Contract": "The ERC1155 contract address.",
									"tokenId": "The ERC1155 token id."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"setERC20Token(address)": {
								"params": {
									"_erc20Token": "The address of the ERC20 token contract."
								}
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "DualERC1155ERC20Converter",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"DualERC1155ERC20Converter.sol\":1442:12923  contract DualERC1155ERC20Converter is Ownable, ERC1155Holder {... */\n  mstore(0x40, 0x80)\n    /* \"DualERC1155ERC20Converter.sol\":4699:4735  constructor() Ownable(msg.sender) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"DualERC1155ERC20Converter.sol\":4721:4731  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_5\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"DualERC1155ERC20Converter.sol\":1442:12923  contract DualERC1155ERC20Converter is Ownable, ERC1155Holder {... */\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:133   */\ntag_13:\n    /* \"#utility.yul\":44:51   */\n  0x00\n    /* \"#utility.yul\":84:126   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":77:82   */\n  dup3\n    /* \"#utility.yul\":73:127   */\n  and\n    /* \"#utility.yul\":62:127   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:133   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":139:235   */\ntag_14:\n    /* \"#utility.yul\":176:183   */\n  0x00\n    /* \"#utility.yul\":205:229   */\n  tag_19\n    /* \"#utility.yul\":223:228   */\n  dup3\n    /* \"#utility.yul\":205:229   */\n  tag_13\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":194:229   */\n  swap1\n  pop\n    /* \"#utility.yul\":139:235   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":241:359   */\ntag_15:\n    /* \"#utility.yul\":328:352   */\n  tag_21\n    /* \"#utility.yul\":346:351   */\n  dup2\n    /* \"#utility.yul\":328:352   */\n  tag_14\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":323:326   */\n  dup3\n    /* \"#utility.yul\":316:353   */\n  mstore\n    /* \"#utility.yul\":241:359   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:587   */\ntag_7:\n    /* \"#utility.yul\":458:462   */\n  0x00\n    /* \"#utility.yul\":496:498   */\n  0x20\n    /* \"#utility.yul\":485:494   */\n  dup3\n    /* \"#utility.yul\":481:499   */\n  add\n    /* \"#utility.yul\":473:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":509:580   */\n  tag_23\n    /* \"#utility.yul\":577:578   */\n  0x00\n    /* \"#utility.yul\":566:575   */\n  dup4\n    /* \"#utility.yul\":562:579   */\n  add\n    /* \"#utility.yul\":553:559   */\n  dup5\n    /* \"#utility.yul\":509:580   */\n  tag_15\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":365:587   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"DualERC1155ERC20Converter.sol\":1442:12923  contract DualERC1155ERC20Converter is Ownable, ERC1155Holder {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"DualERC1155ERC20Converter.sol\":1442:12923  contract DualERC1155ERC20Converter is Ownable, ERC1155Holder {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x9c3c4345\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xdf84aae9\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xdf84aae9\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xea6a5b0e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xfce3fb2f\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x9c3c4345\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb1fd0a42\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xc953e56e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xde562487\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x58be702f\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x58be702f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x652ca87e\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8a13eea7\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0fcd1e84\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x15614d5d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x453a1e75\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":650:871  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DualERC1155ERC20Converter.sol\":2166:2239  mapping(address => mapping(uint256 => bool)) public allowedERC1155Reverse */\n    tag_4:\n      tag_31\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DualERC1155ERC20Converter.sol\":3202:3263  ConversionRecordERC20ToERC1155[] public erc20ToErc1155History */\n    tag_5:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DualERC1155ERC20Converter.sol\":2849:2892  ConversionRecord[] public conversionHistory */\n    tag_6:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DualERC1155ERC20Converter.sol\":1893:1966  mapping(address => mapping(uint256 => bool)) public allowedERC1155Forward */\n    tag_7:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DualERC1155ERC20Converter.sol\":6472:6815  function addAllowedERC1155Reverse(address erc1155Contract, uint256 tokenId) external onlyOwner {... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"DualERC1155ERC20Converter.sol\":1561:1601  IERC20MintableBurnable public erc20Token */\n    tag_10:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_60\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DualERC1155ERC20Converter.sol\":5469:5812  function addAllowedERC1155Forward(address erc1155Contract, uint256 tokenId) external onlyOwner {... */\n    tag_12:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      stop\n        /* \"DualERC1155ERC20Converter.sol\":3367:3464  mapping(address => ConversionRecordERC20ToERC1155[]) public conversionRecordsERC20ToERC1155ByUser */\n    tag_13:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DualERC1155ERC20Converter.sol\":10129:10961  function onERC1155BatchReceived(... */\n    tag_14:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"DualERC1155ERC20Converter.sol\":6024:6263  function removeAllowedERC1155Forward(address erc1155Contract, uint256 tokenId) external onlyOwner {... */\n    tag_15:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"DualERC1155ERC20Converter.sol\":4923:5260  function setERC20Token(address _erc20Token) external onlyOwner {... */\n    tag_16:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"DualERC1155ERC20Converter.sol\":11630:12921  function convertToERC1155(address erc1155Contract, uint256 tokenId, uint256 amount) external {... */\n    tag_17:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      stop\n        /* \"DualERC1155ERC20Converter.sol\":7027:7266  function removeAllowedERC1155Reverse(address erc1155Contract, uint256 tokenId) external onlyOwner {... */\n    tag_18:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      stop\n        /* \"DualERC1155ERC20Converter.sol\":7815:8361  function onERC1155Received(... */\n    tag_19:\n      tag_91\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_92\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_96\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_97\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_97:\n      tag_98\n      jump\t// in\n    tag_96:\n      stop\n        /* \"DualERC1155ERC20Converter.sol\":2716:2787  mapping(address => ConversionRecord[]) public conversionRecordsBySender */\n    tag_21:\n      tag_99\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_100\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_100:\n      tag_101\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_102\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":650:871  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":752:756  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":790:824  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":775:824  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":775:786  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":775:824  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":775:864  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_104\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":828:864  super.supportsInterface(interfaceId) */\n      tag_105\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":852:863  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":828:851  super.supportsInterface */\n      tag_106\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":828:864  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":775:864  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":768:864  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":650:871  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"DualERC1155ERC20Converter.sol\":2166:2239  mapping(address => mapping(uint256 => bool)) public allowedERC1155Reverse */\n    tag_34:\n      mstore(0x20, 0x03)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"DualERC1155ERC20Converter.sol\":3202:3263  ConversionRecordERC20ToERC1155[] public erc20ToErc1155History */\n    tag_39:\n      0x06\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"DualERC1155ERC20Converter.sol\":2849:2892  ConversionRecord[] public conversionHistory */\n    tag_44:\n      0x05\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"DualERC1155ERC20Converter.sol\":1893:1966  mapping(address => mapping(uint256 => bool)) public allowedERC1155Forward */\n    tag_49:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"DualERC1155ERC20Converter.sol\":6472:6815  function addAllowedERC1155Reverse(address erc1155Contract, uint256 tokenId) external onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_112\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_112:\n        /* \"DualERC1155ERC20Converter.sol\":6612:6613  0 */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":6585:6614  erc1155Contract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":6585:6600  erc1155Contract */\n      dup3\n        /* \"DualERC1155ERC20Converter.sol\":6585:6614  erc1155Contract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"DualERC1155ERC20Converter.sol\":6585:6649  erc1155Contract != address(0) && erc1155Contract.code.length > 0 */\n      dup1\n      iszero\n      tag_115\n      jumpi\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":6648:6649  0 */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":6618:6633  erc1155Contract */\n      dup3\n        /* \"DualERC1155ERC20Converter.sol\":6618:6645  erc1155Contract.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"DualERC1155ERC20Converter.sol\":6618:6649  erc1155Contract.code.length > 0 */\n      gt\n        /* \"DualERC1155ERC20Converter.sol\":6585:6649  erc1155Contract != address(0) && erc1155Contract.code.length > 0 */\n    tag_115:\n        /* \"DualERC1155ERC20Converter.sol\":6577:6677  require(erc1155Contract != address(0) && erc1155Contract.code.length > 0, \"Invalid ERC1155 address\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_116:\n        /* \"DualERC1155ERC20Converter.sol\":6737:6741  true */\n      0x01\n        /* \"DualERC1155ERC20Converter.sol\":6687:6708  allowedERC1155Reverse */\n      0x03\n        /* \"DualERC1155ERC20Converter.sol\":6687:6725  allowedERC1155Reverse[erc1155Contract] */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":6709:6724  erc1155Contract */\n      dup5\n        /* \"DualERC1155ERC20Converter.sol\":6687:6725  allowedERC1155Reverse[erc1155Contract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DualERC1155ERC20Converter.sol\":6687:6734  allowedERC1155Reverse[erc1155Contract][tokenId] */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":6726:6733  tokenId */\n      dup4\n        /* \"DualERC1155ERC20Converter.sol\":6687:6734  allowedERC1155Reverse[erc1155Contract][tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":6687:6741  allowedERC1155Reverse[erc1155Contract][tokenId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":6800:6807  tokenId */\n      dup1\n        /* \"DualERC1155ERC20Converter.sol\":6783:6798  erc1155Contract */\n      dup3\n        /* \"DualERC1155ERC20Converter.sol\":6756:6808  AllowedERC1155ReverseAdded(erc1155Contract, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7a7a4e4c606c134c123ed1f1b82ad01ac98f1262f47e4768a5f0f588da717e8f\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DualERC1155ERC20Converter.sol\":6472:6815  function addAllowedERC1155Reverse(address erc1155Contract, uint256 tokenId) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_120\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_122\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"DualERC1155ERC20Converter.sol\":1561:1601  IERC20MintableBurnable public erc20Token */\n    tag_57:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"DualERC1155ERC20Converter.sol\":5469:5812  function addAllowedERC1155Forward(address erc1155Contract, uint256 tokenId) external onlyOwner {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_126\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_126:\n        /* \"DualERC1155ERC20Converter.sol\":5609:5610  0 */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":5582:5611  erc1155Contract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":5582:5597  erc1155Contract */\n      dup3\n        /* \"DualERC1155ERC20Converter.sol\":5582:5611  erc1155Contract != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"DualERC1155ERC20Converter.sol\":5582:5646  erc1155Contract != address(0) && erc1155Contract.code.length > 0 */\n      dup1\n      iszero\n      tag_128\n      jumpi\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":5645:5646  0 */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":5615:5630  erc1155Contract */\n      dup3\n        /* \"DualERC1155ERC20Converter.sol\":5615:5642  erc1155Contract.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"DualERC1155ERC20Converter.sol\":5615:5646  erc1155Contract.code.length > 0 */\n      gt\n        /* \"DualERC1155ERC20Converter.sol\":5582:5646  erc1155Contract != address(0) && erc1155Contract.code.length > 0 */\n    tag_128:\n        /* \"DualERC1155ERC20Converter.sol\":5574:5674  require(erc1155Contract != address(0) && erc1155Contract.code.length > 0, \"Invalid ERC1155 address\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_118\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"DualERC1155ERC20Converter.sol\":5734:5738  true */\n      0x01\n        /* \"DualERC1155ERC20Converter.sol\":5684:5705  allowedERC1155Forward */\n      0x02\n        /* \"DualERC1155ERC20Converter.sol\":5684:5722  allowedERC1155Forward[erc1155Contract] */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":5706:5721  erc1155Contract */\n      dup5\n        /* \"DualERC1155ERC20Converter.sol\":5684:5722  allowedERC1155Forward[erc1155Contract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DualERC1155ERC20Converter.sol\":5684:5731  allowedERC1155Forward[erc1155Contract][tokenId] */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":5723:5730  tokenId */\n      dup4\n        /* \"DualERC1155ERC20Converter.sol\":5684:5731  allowedERC1155Forward[erc1155Contract][tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":5684:5738  allowedERC1155Forward[erc1155Contract][tokenId] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":5797:5804  tokenId */\n      dup1\n        /* \"DualERC1155ERC20Converter.sol\":5780:5795  erc1155Contract */\n      dup3\n        /* \"DualERC1155ERC20Converter.sol\":5753:5805  AllowedERC1155ForwardAdded(erc1155Contract, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x25a602cd77d0dcd2d9a9271c81530ca6b2befdc1b20ff547cdb34bd1093804b3\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DualERC1155ERC20Converter.sol\":5469:5812  function addAllowedERC1155Forward(address erc1155Contract, uint256 tokenId) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DualERC1155ERC20Converter.sol\":3367:3464  mapping(address => ConversionRecordERC20ToERC1155[]) public conversionRecordsERC20ToERC1155ByUser */\n    tag_69:\n      mstore(0x20, 0x07)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"DualERC1155ERC20Converter.sol\":10129:10961  function onERC1155BatchReceived(... */\n    tag_74:\n        /* \"DualERC1155ERC20Converter.sol\":10330:10336  bytes4 */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":10368:10372  from */\n      dup5\n        /* \"DualERC1155ERC20Converter.sol\":10356:10372  operator == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":10356:10364  operator */\n      dup7\n        /* \"DualERC1155ERC20Converter.sol\":10356:10372  operator == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"DualERC1155ERC20Converter.sol\":10348:10420  require(operator == from, \"Only the token owner can trigger conversion\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"DualERC1155ERC20Converter.sol\":10452:10458  values */\n      dup3\n        /* \"DualERC1155ERC20Converter.sol\":10452:10465  values.length */\n      mload\n        /* \"DualERC1155ERC20Converter.sol\":10438:10441  ids */\n      dup5\n        /* \"DualERC1155ERC20Converter.sol\":10438:10448  ids.length */\n      mload\n        /* \"DualERC1155ERC20Converter.sol\":10438:10465  ids.length == values.length */\n      eq\n        /* \"DualERC1155ERC20Converter.sol\":10430:10500  require(ids.length == values.length, \"IDs and values length mismatch\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"DualERC1155ERC20Converter.sol\":10549:10550  0 */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":10518:10551  address(erc20Token) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":10526:10536  erc20Token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":10518:10551  address(erc20Token) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"DualERC1155ERC20Converter.sol\":10510:10575  require(address(erc20Token) != address(0), \"ERC20 token not set\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"DualERC1155ERC20Converter.sol\":10591:10600  uint256 i */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":10586:10902  for (uint256 i = 0; i < ids.length; i++) {... */\n    tag_143:\n        /* \"DualERC1155ERC20Converter.sol\":10610:10613  ids */\n      dup5\n        /* \"DualERC1155ERC20Converter.sol\":10610:10620  ids.length */\n      mload\n        /* \"DualERC1155ERC20Converter.sol\":10606:10607  i */\n      dup2\n        /* \"DualERC1155ERC20Converter.sol\":10606:10620  i < ids.length */\n      lt\n        /* \"DualERC1155ERC20Converter.sol\":10586:10902  for (uint256 i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_144\n      jumpi\n        /* \"DualERC1155ERC20Converter.sol\":10649:10670  allowedERC1155Forward */\n      0x02\n        /* \"DualERC1155ERC20Converter.sol\":10649:10682  allowedERC1155Forward[msg.sender] */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":10671:10681  msg.sender */\n      caller\n        /* \"DualERC1155ERC20Converter.sol\":10649:10682  allowedERC1155Forward[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DualERC1155ERC20Converter.sol\":10649:10690  allowedERC1155Forward[msg.sender][ids[i]] */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":10683:10686  ids */\n      dup7\n        /* \"DualERC1155ERC20Converter.sol\":10687:10688  i */\n      dup4\n        /* \"DualERC1155ERC20Converter.sol\":10683:10689  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_146\n      jumpi\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n    tag_146:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DualERC1155ERC20Converter.sol\":10649:10690  allowedERC1155Forward[msg.sender][ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":10641:10748  require(allowedERC1155Forward[msg.sender][ids[i]], \"One or more ERC1155 tokens not allowed for conversion\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"DualERC1155ERC20Converter.sol\":10762:10772  erc20Token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":10762:10777  erc20Token.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"DualERC1155ERC20Converter.sol\":10778:10782  from */\n      dup8\n        /* \"DualERC1155ERC20Converter.sol\":10784:10790  values */\n      dup7\n        /* \"DualERC1155ERC20Converter.sol\":10791:10792  i */\n      dup5\n        /* \"DualERC1155ERC20Converter.sol\":10784:10793  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_152\n      jumpi\n      tag_153\n      tag_148\n      jump\t// in\n    tag_153:\n    tag_152:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DualERC1155ERC20Converter.sol\":10762:10794  erc20Token.mint(from, values[i]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap3\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_156\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_156:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_158\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_158:\n      pop\n      pop\n      pop\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":10856:10859  ids */\n      dup5\n        /* \"DualERC1155ERC20Converter.sol\":10860:10861  i */\n      dup2\n        /* \"DualERC1155ERC20Converter.sol\":10856:10862  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_159\n      jumpi\n      tag_160\n      tag_148\n      jump\t// in\n    tag_160:\n    tag_159:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DualERC1155ERC20Converter.sol\":10844:10854  msg.sender */\n      caller\n        /* \"DualERC1155ERC20Converter.sol\":10813:10891  ERC1155ToERC20Conversion(from, msg.sender, ids[i], values[i], block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":10838:10842  from */\n      dup8\n        /* \"DualERC1155ERC20Converter.sol\":10813:10891  ERC1155ToERC20Conversion(from, msg.sender, ids[i], values[i], block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40ba10935627ab450dd36afe32f52afa35f94d71a0c577e5b5b655d05ff6d0ef\n        /* \"DualERC1155ERC20Converter.sol\":10864:10870  values */\n      dup8\n        /* \"DualERC1155ERC20Converter.sol\":10871:10872  i */\n      dup6\n        /* \"DualERC1155ERC20Converter.sol\":10864:10873  values[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_161\n      jumpi\n      tag_162\n      tag_148\n      jump\t// in\n    tag_162:\n    tag_161:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"DualERC1155ERC20Converter.sol\":10875:10890  block.timestamp */\n      timestamp\n        /* \"DualERC1155ERC20Converter.sol\":10813:10891  ERC1155ToERC20Conversion(from, msg.sender, ids[i], values[i], block.timestamp) */\n      mload(0x40)\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"DualERC1155ERC20Converter.sol\":10622:10625  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":10586:10902  for (uint256 i = 0; i < ids.length; i++) {... */\n      jump(tag_143)\n    tag_144:\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":10918:10954  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"DualERC1155ERC20Converter.sol\":10911:10954  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":10129:10961  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DualERC1155ERC20Converter.sol\":6024:6263  function removeAllowedERC1155Forward(address erc1155Contract, uint256 tokenId) external onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_166\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_166:\n        /* \"DualERC1155ERC20Converter.sol\":6182:6187  false */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":6132:6153  allowedERC1155Forward */\n      0x02\n        /* \"DualERC1155ERC20Converter.sol\":6132:6170  allowedERC1155Forward[erc1155Contract] */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":6154:6169  erc1155Contract */\n      dup5\n        /* \"DualERC1155ERC20Converter.sol\":6132:6170  allowedERC1155Forward[erc1155Contract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DualERC1155ERC20Converter.sol\":6132:6179  allowedERC1155Forward[erc1155Contract][tokenId] */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":6171:6178  tokenId */\n      dup4\n        /* \"DualERC1155ERC20Converter.sol\":6132:6179  allowedERC1155Forward[erc1155Contract][tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":6132:6187  allowedERC1155Forward[erc1155Contract][tokenId] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":6248:6255  tokenId */\n      dup1\n        /* \"DualERC1155ERC20Converter.sol\":6231:6246  erc1155Contract */\n      dup3\n        /* \"DualERC1155ERC20Converter.sol\":6202:6256  AllowedERC1155ForwardRemoved(erc1155Contract, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7cdf80461ab5065b7b1c6ae92ce85d5d3fd752930ff8c76a2c5f0288648e5b23\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DualERC1155ERC20Converter.sol\":6024:6263  function removeAllowedERC1155Forward(address erc1155Contract, uint256 tokenId) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DualERC1155ERC20Converter.sol\":4923:5260  function setERC20Token(address _erc20Token) external onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_169\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_169:\n        /* \"DualERC1155ERC20Converter.sol\":5027:5028  0 */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":5004:5029  _erc20Token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":5004:5015  _erc20Token */\n      dup2\n        /* \"DualERC1155ERC20Converter.sol\":5004:5029  _erc20Token != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"DualERC1155ERC20Converter.sol\":5004:5060  _erc20Token != address(0) && _erc20Token.code.length > 0 */\n      dup1\n      iszero\n      tag_171\n      jumpi\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":5059:5060  0 */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":5033:5044  _erc20Token */\n      dup2\n        /* \"DualERC1155ERC20Converter.sol\":5033:5056  _erc20Token.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"DualERC1155ERC20Converter.sol\":5033:5060  _erc20Token.code.length > 0 */\n      gt\n        /* \"DualERC1155ERC20Converter.sol\":5004:5060  _erc20Token != address(0) && _erc20Token.code.length > 0 */\n    tag_171:\n        /* \"DualERC1155ERC20Converter.sol\":4996:5092  require(_erc20Token != address(0) && _erc20Token.code.length > 0, \"Invalid ERC20 token address\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"DualERC1155ERC20Converter.sol\":5102:5118  address previous */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":5129:5139  erc20Token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":5102:5140  address previous = address(erc20Token) */\n      swap1\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":5186:5197  _erc20Token */\n      dup2\n        /* \"DualERC1155ERC20Converter.sol\":5150:5160  erc20Token */\n      0x01\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":5150:5198  erc20Token = IERC20MintableBurnable(_erc20Token) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":5241:5252  _erc20Token */\n      dup2\n        /* \"DualERC1155ERC20Converter.sol\":5213:5253  ERC20TokenUpdated(previous, _erc20Token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":5231:5239  previous */\n      dup2\n        /* \"DualERC1155ERC20Converter.sol\":5213:5253  ERC20TokenUpdated(previous, _erc20Token) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3225966cbaae2904ba12a4821319a2efec8fe5313e9e3376037823b52ab32cf1\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DualERC1155ERC20Converter.sol\":4986:5260  {... */\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":4923:5260  function setERC20Token(address _erc20Token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"DualERC1155ERC20Converter.sol\":11630:12921  function convertToERC1155(address erc1155Contract, uint256 tokenId, uint256 amount) external {... */\n    tag_87:\n        /* \"DualERC1155ERC20Converter.sol\":11741:11762  allowedERC1155Reverse */\n      0x03\n        /* \"DualERC1155ERC20Converter.sol\":11741:11779  allowedERC1155Reverse[erc1155Contract] */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":11763:11778  erc1155Contract */\n      dup5\n        /* \"DualERC1155ERC20Converter.sol\":11741:11779  allowedERC1155Reverse[erc1155Contract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DualERC1155ERC20Converter.sol\":11741:11788  allowedERC1155Reverse[erc1155Contract][tokenId] */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":11780:11787  tokenId */\n      dup4\n        /* \"DualERC1155ERC20Converter.sol\":11741:11788  allowedERC1155Reverse[erc1155Contract][tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":11733:11838  require(allowedERC1155Reverse[erc1155Contract][tokenId], \"Conversion not allowed for this ERC1155 token\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"DualERC1155ERC20Converter.sol\":11865:11866  0 */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":11856:11862  amount */\n      dup2\n        /* \"DualERC1155ERC20Converter.sol\":11856:11866  amount > 0 */\n      gt\n        /* \"DualERC1155ERC20Converter.sol\":11848:11903  require(amount > 0, \"Amount must be greater than zero\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_180\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_179:\n        /* \"DualERC1155ERC20Converter.sol\":11952:11953  0 */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":11921:11954  address(erc20Token) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":11929:11939  erc20Token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":11921:11954  address(erc20Token) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"DualERC1155ERC20Converter.sol\":11913:11978  require(address(erc20Token) != address(0), \"ERC20 token not set\") */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_142\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"DualERC1155ERC20Converter.sol\":12054:12066  bool success */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":12069:12079  erc20Token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":12069:12092  erc20Token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"DualERC1155ERC20Converter.sol\":12093:12103  msg.sender */\n      caller\n        /* \"DualERC1155ERC20Converter.sol\":12113:12117  this */\n      address\n        /* \"DualERC1155ERC20Converter.sol\":12120:12126  amount */\n      dup6\n        /* \"DualERC1155ERC20Converter.sol\":12069:12127  erc20Token.transferFrom(msg.sender, address(this), amount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_187:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"DualERC1155ERC20Converter.sol\":12054:12127  bool success = erc20Token.transferFrom(msg.sender, address(this), amount) */\n      swap1\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":12145:12152  success */\n      dup1\n        /* \"DualERC1155ERC20Converter.sol\":12137:12178  require(success, \"ERC20 transfer failed\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"DualERC1155ERC20Converter.sol\":12223:12233  erc20Token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":12223:12238  erc20Token.burn */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x42966c68\n        /* \"DualERC1155ERC20Converter.sol\":12239:12245  amount */\n      dup4\n        /* \"DualERC1155ERC20Converter.sol\":12223:12246  erc20Token.burn(amount) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_197\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_197:\n      pop\n      pop\n      pop\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":12320:12335  erc1155Contract */\n      dup4\n        /* \"DualERC1155ERC20Converter.sol\":12305:12341  IERC1155Minter(erc1155Contract).mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x731133e9\n        /* \"DualERC1155ERC20Converter.sol\":12342:12352  msg.sender */\n      caller\n        /* \"DualERC1155ERC20Converter.sol\":12354:12361  tokenId */\n      dup6\n        /* \"DualERC1155ERC20Converter.sol\":12363:12369  amount */\n      dup6\n        /* \"DualERC1155ERC20Converter.sol\":12305:12374  IERC1155Minter(erc1155Contract).mint(msg.sender, tokenId, amount, \"\") */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_200\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_200:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_202\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_202:\n      pop\n      pop\n      pop\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":12428:12472  ConversionRecordERC20ToERC1155 memory record */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":12475:12691  ConversionRecordERC20ToERC1155({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"DualERC1155ERC20Converter.sol\":12526:12536  msg.sender */\n      caller\n        /* \"DualERC1155ERC20Converter.sol\":12475:12691  ConversionRecordERC20ToERC1155({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DualERC1155ERC20Converter.sol\":12567:12582  erc1155Contract */\n      dup7\n        /* \"DualERC1155ERC20Converter.sol\":12475:12691  ConversionRecordERC20ToERC1155({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DualERC1155ERC20Converter.sol\":12605:12612  tokenId */\n      dup6\n        /* \"DualERC1155ERC20Converter.sol\":12475:12691  ConversionRecordERC20ToERC1155({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DualERC1155ERC20Converter.sol\":12634:12640  amount */\n      dup5\n        /* \"DualERC1155ERC20Converter.sol\":12475:12691  ConversionRecordERC20ToERC1155({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DualERC1155ERC20Converter.sol\":12665:12680  block.timestamp */\n      timestamp\n        /* \"DualERC1155ERC20Converter.sol\":12475:12691  ConversionRecordERC20ToERC1155({... */\n      dup2\n      mstore\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":12428:12691  ConversionRecordERC20ToERC1155 memory record = ConversionRecordERC20ToERC1155({... */\n      swap1\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":12701:12722  erc20ToErc1155History */\n      0x06\n        /* \"DualERC1155ERC20Converter.sol\":12728:12734  record */\n      dup2\n        /* \"DualERC1155ERC20Converter.sol\":12701:12735  erc20ToErc1155History.push(record) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      pop\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":12745:12782  conversionRecordsERC20ToERC1155ByUser */\n      0x07\n        /* \"DualERC1155ERC20Converter.sol\":12745:12794  conversionRecordsERC20ToERC1155ByUser[msg.sender] */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":12783:12793  msg.sender */\n      caller\n        /* \"DualERC1155ERC20Converter.sol\":12745:12794  conversionRecordsERC20ToERC1155ByUser[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DualERC1155ERC20Converter.sol\":12800:12806  record */\n      dup2\n        /* \"DualERC1155ERC20Converter.sol\":12745:12807  conversionRecordsERC20ToERC1155ByUser[msg.sender].push(record) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      pop\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":12881:12888  tokenId */\n      dup4\n        /* \"DualERC1155ERC20Converter.sol\":12864:12879  erc1155Contract */\n      dup6\n        /* \"DualERC1155ERC20Converter.sol\":12827:12914  ERC20ToERC1155Conversion(msg.sender, erc1155Contract, tokenId, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":12852:12862  msg.sender */\n      caller\n        /* \"DualERC1155ERC20Converter.sol\":12827:12914  ERC20ToERC1155Conversion(msg.sender, erc1155Contract, tokenId, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1ca57d76d7b91ecc6a90677f1b8eb7d995f934eda6364134e6021dbba757241e\n        /* \"DualERC1155ERC20Converter.sol\":12890:12896  amount */\n      dup7\n        /* \"DualERC1155ERC20Converter.sol\":12898:12913  block.timestamp */\n      timestamp\n        /* \"DualERC1155ERC20Converter.sol\":12827:12914  ERC20ToERC1155Conversion(msg.sender, erc1155Contract, tokenId, amount, block.timestamp) */\n      mload(0x40)\n      tag_205\n      swap3\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"DualERC1155ERC20Converter.sol\":11723:12921  {... */\n      pop\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":11630:12921  function convertToERC1155(address erc1155Contract, uint256 tokenId, uint256 amount) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"DualERC1155ERC20Converter.sol\":7027:7266  function removeAllowedERC1155Reverse(address erc1155Contract, uint256 tokenId) external onlyOwner {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_207:\n        /* \"DualERC1155ERC20Converter.sol\":7185:7190  false */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":7135:7156  allowedERC1155Reverse */\n      0x03\n        /* \"DualERC1155ERC20Converter.sol\":7135:7173  allowedERC1155Reverse[erc1155Contract] */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":7157:7172  erc1155Contract */\n      dup5\n        /* \"DualERC1155ERC20Converter.sol\":7135:7173  allowedERC1155Reverse[erc1155Contract] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DualERC1155ERC20Converter.sol\":7135:7182  allowedERC1155Reverse[erc1155Contract][tokenId] */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":7174:7181  tokenId */\n      dup4\n        /* \"DualERC1155ERC20Converter.sol\":7135:7182  allowedERC1155Reverse[erc1155Contract][tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":7135:7190  allowedERC1155Reverse[erc1155Contract][tokenId] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":7251:7258  tokenId */\n      dup1\n        /* \"DualERC1155ERC20Converter.sol\":7234:7249  erc1155Contract */\n      dup3\n        /* \"DualERC1155ERC20Converter.sol\":7205:7259  AllowedERC1155ReverseRemoved(erc1155Contract, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdf3a4de361f566c7b82e2670c9f25deb777b8a9c5c03e949b07f8932f7cbed3e\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DualERC1155ERC20Converter.sol\":7027:7266  function removeAllowedERC1155Reverse(address erc1155Contract, uint256 tokenId) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"DualERC1155ERC20Converter.sol\":7815:8361  function onERC1155Received(... */\n    tag_94:\n        /* \"DualERC1155ERC20Converter.sol\":7991:7997  bytes4 */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":8029:8033  from */\n      dup5\n        /* \"DualERC1155ERC20Converter.sol\":8017:8033  operator == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":8017:8025  operator */\n      dup7\n        /* \"DualERC1155ERC20Converter.sol\":8017:8033  operator == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"DualERC1155ERC20Converter.sol\":8009:8081  require(operator == from, \"Only the token owner can trigger conversion\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_136\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"DualERC1155ERC20Converter.sol\":8099:8120  allowedERC1155Forward */\n      0x02\n        /* \"DualERC1155ERC20Converter.sol\":8099:8132  allowedERC1155Forward[msg.sender] */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":8121:8131  msg.sender */\n      caller\n        /* \"DualERC1155ERC20Converter.sol\":8099:8132  allowedERC1155Forward[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DualERC1155ERC20Converter.sol\":8099:8136  allowedERC1155Forward[msg.sender][id] */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":8133:8135  id */\n      dup6\n        /* \"DualERC1155ERC20Converter.sol\":8099:8136  allowedERC1155Forward[msg.sender][id] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":8091:8181  require(allowedERC1155Forward[msg.sender][id], \"ERC1155 token not allowed for conversion\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap1\n      tag_214\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"DualERC1155ERC20Converter.sol\":8230:8231  0 */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":8199:8232  address(erc20Token) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":8207:8217  erc20Token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":8199:8232  address(erc20Token) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"DualERC1155ERC20Converter.sol\":8191:8256  require(address(erc20Token) != address(0), \"ERC20 token not set\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_142\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"DualERC1155ERC20Converter.sol\":8267:8306  _convertERC1155ToERC20(from, id, value) */\n      tag_217\n        /* \"DualERC1155ERC20Converter.sol\":8290:8294  from */\n      dup6\n        /* \"DualERC1155ERC20Converter.sol\":8296:8298  id */\n      dup6\n        /* \"DualERC1155ERC20Converter.sol\":8300:8305  value */\n      dup6\n        /* \"DualERC1155ERC20Converter.sol\":8267:8289  _convertERC1155ToERC20 */\n      tag_218\n        /* \"DualERC1155ERC20Converter.sol\":8267:8306  _convertERC1155ToERC20(from, id, value) */\n      jump\t// in\n    tag_217:\n        /* \"DualERC1155ERC20Converter.sol\":8323:8354  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"DualERC1155ERC20Converter.sol\":8316:8354  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":7815:8361  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_220\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_220:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_224\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_123\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"DualERC1155ERC20Converter.sol\":2716:2787  mapping(address => ConversionRecord[]) public conversionRecordsBySender */\n    tag_101:\n      mstore(0x20, 0x04)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_225\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_225:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":839:843  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":877:902  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:873  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":862:902  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":855:902  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":763:909  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_231\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_61\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_232\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_233\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_230\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_234\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_234:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"DualERC1155ERC20Converter.sol\":8926:9815  function _convertERC1155ToERC20(... */\n    tag_218:\n        /* \"DualERC1155ERC20Converter.sol\":9129:9148  uint256 erc20Amount */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":9151:9164  erc1155Amount */\n      dup2\n        /* \"DualERC1155ERC20Converter.sol\":9129:9164  uint256 erc20Amount = erc1155Amount */\n      swap1\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":9213:9214  0 */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":9182:9215  address(erc20Token) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":9190:9200  erc20Token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":9182:9215  address(erc20Token) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"DualERC1155ERC20Converter.sol\":9174:9243  require(address(erc20Token) != address(0), \"ERC20 token not defined\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"DualERC1155ERC20Converter.sol\":9302:9312  erc20Token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"DualERC1155ERC20Converter.sol\":9302:9317  erc20Token.mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"DualERC1155ERC20Converter.sol\":9318:9324  sender */\n      dup6\n        /* \"DualERC1155ERC20Converter.sol\":9326:9337  erc20Amount */\n      dup4\n        /* \"DualERC1155ERC20Converter.sol\":9302:9338  erc20Token.mint(sender, erc20Amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap3\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_240:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_241\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_241:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_243\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_243:\n      pop\n      pop\n      pop\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":9383:9413  ConversionRecord memory record */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":9416:9608  ConversionRecord({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"DualERC1155ERC20Converter.sol\":9463:9477  erc1155TokenId */\n      dup6\n        /* \"DualERC1155ERC20Converter.sol\":9416:9608  ConversionRecord({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DualERC1155ERC20Converter.sol\":9506:9519  erc1155Amount */\n      dup5\n        /* \"DualERC1155ERC20Converter.sol\":9416:9608  ConversionRecord({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DualERC1155ERC20Converter.sol\":9546:9557  erc20Amount */\n      dup4\n        /* \"DualERC1155ERC20Converter.sol\":9416:9608  ConversionRecord({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"DualERC1155ERC20Converter.sol\":9582:9597  block.timestamp */\n      timestamp\n        /* \"DualERC1155ERC20Converter.sol\":9416:9608  ConversionRecord({... */\n      dup2\n      mstore\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":9383:9608  ConversionRecord memory record = ConversionRecord({... */\n      swap1\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":9618:9635  conversionHistory */\n      0x05\n        /* \"DualERC1155ERC20Converter.sol\":9641:9647  record */\n      dup2\n        /* \"DualERC1155ERC20Converter.sol\":9618:9648  conversionHistory.push(record) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      pop\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":9658:9683  conversionRecordsBySender */\n      0x04\n        /* \"DualERC1155ERC20Converter.sol\":9658:9691  conversionRecordsBySender[sender] */\n      0x00\n        /* \"DualERC1155ERC20Converter.sol\":9684:9690  sender */\n      dup7\n        /* \"DualERC1155ERC20Converter.sol\":9658:9691  conversionRecordsBySender[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"DualERC1155ERC20Converter.sol\":9697:9703  record */\n      dup2\n        /* \"DualERC1155ERC20Converter.sol\":9658:9704  conversionRecordsBySender[sender].push(record) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      pop\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":9748:9762  erc1155TokenId */\n      dup4\n        /* \"DualERC1155ERC20Converter.sol\":9740:9746  sender */\n      dup6\n        /* \"DualERC1155ERC20Converter.sol\":9720:9808  ConversionPerformed(sender, erc1155TokenId, erc1155Amount, erc20Amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8207f4cc66476fc751f9fa47f50e7bdf31b03fad34f997e73ef4a8c554992647\n        /* \"DualERC1155ERC20Converter.sol\":9764:9777  erc1155Amount */\n      dup6\n        /* \"DualERC1155ERC20Converter.sol\":9779:9790  erc20Amount */\n      dup6\n        /* \"DualERC1155ERC20Converter.sol\":9792:9807  block.timestamp */\n      timestamp\n        /* \"DualERC1155ERC20Converter.sol\":9720:9808  ConversionPerformed(sender, erc1155TokenId, erc1155Amount, erc20Amount, block.timestamp) */\n      mload(0x40)\n      tag_246\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"DualERC1155ERC20Converter.sol\":9060:9815  {... */\n      pop\n      pop\n        /* \"DualERC1155ERC20Converter.sol\":8926:9815  function _convertERC1155ToERC20(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_249:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_250:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_251:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_252:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_253:\n        /* \"#utility.yul\":561:584   */\n      tag_320\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_252\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_321\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_321:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_254:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_323\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_253\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_27:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_326\n      tag_250\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":833:952   */\n    tag_325:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_327\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_254\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_255:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_256:\n        /* \"#utility.yul\":1268:1289   */\n      tag_330\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_255\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_30:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_332\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_256\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1644   */\n    tag_257:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1595:1637   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1588:1593   */\n      dup3\n        /* \"#utility.yul\":1584:1638   */\n      and\n        /* \"#utility.yul\":1573:1638   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1650:1746   */\n    tag_258:\n        /* \"#utility.yul\":1687:1694   */\n      0x00\n        /* \"#utility.yul\":1716:1740   */\n      tag_335\n        /* \"#utility.yul\":1734:1739   */\n      dup3\n        /* \"#utility.yul\":1716:1740   */\n      tag_257\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1705:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1650:1746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1752:1874   */\n    tag_259:\n        /* \"#utility.yul\":1825:1849   */\n      tag_337\n        /* \"#utility.yul\":1843:1848   */\n      dup2\n        /* \"#utility.yul\":1825:1849   */\n      tag_258\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":1818:1823   */\n      dup2\n        /* \"#utility.yul\":1815:1850   */\n      eq\n        /* \"#utility.yul\":1805:1868   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":1864:1865   */\n      0x00\n        /* \"#utility.yul\":1861:1862   */\n      dup1\n        /* \"#utility.yul\":1854:1866   */\n      revert\n        /* \"#utility.yul\":1805:1868   */\n    tag_338:\n        /* \"#utility.yul\":1752:1874   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1880:2019   */\n    tag_260:\n        /* \"#utility.yul\":1926:1931   */\n      0x00\n        /* \"#utility.yul\":1964:1970   */\n      dup2\n        /* \"#utility.yul\":1951:1971   */\n      calldataload\n        /* \"#utility.yul\":1942:1971   */\n      swap1\n      pop\n        /* \"#utility.yul\":1980:2013   */\n      tag_340\n        /* \"#utility.yul\":2007:2012   */\n      dup2\n        /* \"#utility.yul\":1980:2013   */\n      tag_259\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1880:2019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2025:2102   */\n    tag_261:\n        /* \"#utility.yul\":2062:2069   */\n      0x00\n        /* \"#utility.yul\":2091:2096   */\n      dup2\n        /* \"#utility.yul\":2080:2096   */\n      swap1\n      pop\n        /* \"#utility.yul\":2025:2102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2108:2230   */\n    tag_262:\n        /* \"#utility.yul\":2181:2205   */\n      tag_343\n        /* \"#utility.yul\":2199:2204   */\n      dup2\n        /* \"#utility.yul\":2181:2205   */\n      tag_261\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":2174:2179   */\n      dup2\n        /* \"#utility.yul\":2171:2206   */\n      eq\n        /* \"#utility.yul\":2161:2224   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":2220:2221   */\n      0x00\n        /* \"#utility.yul\":2217:2218   */\n      dup1\n        /* \"#utility.yul\":2210:2222   */\n      revert\n        /* \"#utility.yul\":2161:2224   */\n    tag_344:\n        /* \"#utility.yul\":2108:2230   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2236:2375   */\n    tag_263:\n        /* \"#utility.yul\":2282:2287   */\n      0x00\n        /* \"#utility.yul\":2320:2326   */\n      dup2\n        /* \"#utility.yul\":2307:2327   */\n      calldataload\n        /* \"#utility.yul\":2298:2327   */\n      swap1\n      pop\n        /* \"#utility.yul\":2336:2369   */\n      tag_346\n        /* \"#utility.yul\":2363:2368   */\n      dup2\n        /* \"#utility.yul\":2336:2369   */\n      tag_262\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":2236:2375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2381:2855   */\n    tag_33:\n        /* \"#utility.yul\":2449:2455   */\n      0x00\n        /* \"#utility.yul\":2457:2463   */\n      dup1\n        /* \"#utility.yul\":2506:2508   */\n      0x40\n        /* \"#utility.yul\":2494:2503   */\n      dup4\n        /* \"#utility.yul\":2485:2492   */\n      dup6\n        /* \"#utility.yul\":2481:2504   */\n      sub\n        /* \"#utility.yul\":2477:2509   */\n      slt\n        /* \"#utility.yul\":2474:2593   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":2512:2591   */\n      tag_349\n      tag_250\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2474:2593   */\n    tag_348:\n        /* \"#utility.yul\":2632:2633   */\n      0x00\n        /* \"#utility.yul\":2657:2710   */\n      tag_350\n        /* \"#utility.yul\":2702:2709   */\n      dup6\n        /* \"#utility.yul\":2693:2699   */\n      dup3\n        /* \"#utility.yul\":2682:2691   */\n      dup7\n        /* \"#utility.yul\":2678:2700   */\n      add\n        /* \"#utility.yul\":2657:2710   */\n      tag_260\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2647:2710   */\n      swap3\n      pop\n        /* \"#utility.yul\":2603:2720   */\n      pop\n        /* \"#utility.yul\":2759:2761   */\n      0x20\n        /* \"#utility.yul\":2785:2838   */\n      tag_351\n        /* \"#utility.yul\":2830:2837   */\n      dup6\n        /* \"#utility.yul\":2821:2827   */\n      dup3\n        /* \"#utility.yul\":2810:2819   */\n      dup7\n        /* \"#utility.yul\":2806:2828   */\n      add\n        /* \"#utility.yul\":2785:2838   */\n      tag_263\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2775:2838   */\n      swap2\n      pop\n        /* \"#utility.yul\":2730:2848   */\n      pop\n        /* \"#utility.yul\":2381:2855   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2861:3190   */\n    tag_38:\n        /* \"#utility.yul\":2920:2926   */\n      0x00\n        /* \"#utility.yul\":2969:2971   */\n      0x20\n        /* \"#utility.yul\":2957:2966   */\n      dup3\n        /* \"#utility.yul\":2948:2955   */\n      dup5\n        /* \"#utility.yul\":2944:2967   */\n      sub\n        /* \"#utility.yul\":2940:2972   */\n      slt\n        /* \"#utility.yul\":2937:3056   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":2975:3054   */\n      tag_354\n      tag_250\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":2937:3056   */\n    tag_353:\n        /* \"#utility.yul\":3095:3096   */\n      0x00\n        /* \"#utility.yul\":3120:3173   */\n      tag_355\n        /* \"#utility.yul\":3165:3172   */\n      dup5\n        /* \"#utility.yul\":3156:3162   */\n      dup3\n        /* \"#utility.yul\":3145:3154   */\n      dup6\n        /* \"#utility.yul\":3141:3163   */\n      add\n        /* \"#utility.yul\":3120:3173   */\n      tag_263\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":3110:3173   */\n      swap2\n      pop\n        /* \"#utility.yul\":3066:3183   */\n      pop\n        /* \"#utility.yul\":2861:3190   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3196:3314   */\n    tag_264:\n        /* \"#utility.yul\":3283:3307   */\n      tag_357\n        /* \"#utility.yul\":3301:3306   */\n      dup2\n        /* \"#utility.yul\":3283:3307   */\n      tag_258\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":3278:3281   */\n      dup3\n        /* \"#utility.yul\":3271:3308   */\n      mstore\n        /* \"#utility.yul\":3196:3314   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3320:3438   */\n    tag_265:\n        /* \"#utility.yul\":3407:3431   */\n      tag_359\n        /* \"#utility.yul\":3425:3430   */\n      dup2\n        /* \"#utility.yul\":3407:3431   */\n      tag_261\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":3402:3405   */\n      dup3\n        /* \"#utility.yul\":3395:3432   */\n      mstore\n        /* \"#utility.yul\":3320:3438   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:4108   */\n    tag_41:\n        /* \"#utility.yul\":3649:3653   */\n      0x00\n        /* \"#utility.yul\":3687:3690   */\n      0xa0\n        /* \"#utility.yul\":3676:3685   */\n      dup3\n        /* \"#utility.yul\":3672:3691   */\n      add\n        /* \"#utility.yul\":3664:3691   */\n      swap1\n      pop\n        /* \"#utility.yul\":3701:3772   */\n      tag_361\n        /* \"#utility.yul\":3769:3770   */\n      0x00\n        /* \"#utility.yul\":3758:3767   */\n      dup4\n        /* \"#utility.yul\":3754:3771   */\n      add\n        /* \"#utility.yul\":3745:3751   */\n      dup9\n        /* \"#utility.yul\":3701:3772   */\n      tag_264\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":3782:3854   */\n      tag_362\n        /* \"#utility.yul\":3850:3852   */\n      0x20\n        /* \"#utility.yul\":3839:3848   */\n      dup4\n        /* \"#utility.yul\":3835:3853   */\n      add\n        /* \"#utility.yul\":3826:3832   */\n      dup8\n        /* \"#utility.yul\":3782:3854   */\n      tag_264\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3864:3936   */\n      tag_363\n        /* \"#utility.yul\":3932:3934   */\n      0x40\n        /* \"#utility.yul\":3921:3930   */\n      dup4\n        /* \"#utility.yul\":3917:3935   */\n      add\n        /* \"#utility.yul\":3908:3914   */\n      dup7\n        /* \"#utility.yul\":3864:3936   */\n      tag_265\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3946:4018   */\n      tag_364\n        /* \"#utility.yul\":4014:4016   */\n      0x60\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4017   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup6\n        /* \"#utility.yul\":3946:4018   */\n      tag_265\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":4028:4101   */\n      tag_365\n        /* \"#utility.yul\":4096:4099   */\n      0x80\n        /* \"#utility.yul\":4085:4094   */\n      dup4\n        /* \"#utility.yul\":4081:4100   */\n      add\n        /* \"#utility.yul\":4072:4078   */\n      dup5\n        /* \"#utility.yul\":4028:4101   */\n      tag_265\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":3444:4108   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4114:4667   */\n    tag_46:\n        /* \"#utility.yul\":4291:4295   */\n      0x00\n        /* \"#utility.yul\":4329:4332   */\n      0x80\n        /* \"#utility.yul\":4318:4327   */\n      dup3\n        /* \"#utility.yul\":4314:4333   */\n      add\n        /* \"#utility.yul\":4306:4333   */\n      swap1\n      pop\n        /* \"#utility.yul\":4343:4414   */\n      tag_367\n        /* \"#utility.yul\":4411:4412   */\n      0x00\n        /* \"#utility.yul\":4400:4409   */\n      dup4\n        /* \"#utility.yul\":4396:4413   */\n      add\n        /* \"#utility.yul\":4387:4393   */\n      dup8\n        /* \"#utility.yul\":4343:4414   */\n      tag_265\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":4424:4496   */\n      tag_368\n        /* \"#utility.yul\":4492:4494   */\n      0x20\n        /* \"#utility.yul\":4481:4490   */\n      dup4\n        /* \"#utility.yul\":4477:4495   */\n      add\n        /* \"#utility.yul\":4468:4474   */\n      dup7\n        /* \"#utility.yul\":4424:4496   */\n      tag_265\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":4506:4578   */\n      tag_369\n        /* \"#utility.yul\":4574:4576   */\n      0x40\n        /* \"#utility.yul\":4563:4572   */\n      dup4\n        /* \"#utility.yul\":4559:4577   */\n      add\n        /* \"#utility.yul\":4550:4556   */\n      dup6\n        /* \"#utility.yul\":4506:4578   */\n      tag_265\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":4588:4660   */\n      tag_370\n        /* \"#utility.yul\":4656:4658   */\n      0x60\n        /* \"#utility.yul\":4645:4654   */\n      dup4\n        /* \"#utility.yul\":4641:4659   */\n      add\n        /* \"#utility.yul\":4632:4638   */\n      dup5\n        /* \"#utility.yul\":4588:4660   */\n      tag_265\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":4114:4667   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4673:4733   */\n    tag_266:\n        /* \"#utility.yul\":4701:4704   */\n      0x00\n        /* \"#utility.yul\":4722:4727   */\n      dup2\n        /* \"#utility.yul\":4715:4727   */\n      swap1\n      pop\n        /* \"#utility.yul\":4673:4733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4739:4881   */\n    tag_267:\n        /* \"#utility.yul\":4789:4798   */\n      0x00\n        /* \"#utility.yul\":4822:4875   */\n      tag_373\n        /* \"#utility.yul\":4840:4874   */\n      tag_374\n        /* \"#utility.yul\":4849:4873   */\n      tag_375\n        /* \"#utility.yul\":4867:4872   */\n      dup5\n        /* \"#utility.yul\":4849:4873   */\n      tag_257\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4840:4874   */\n      tag_266\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4822:4875   */\n      tag_257\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":4809:4875   */\n      swap1\n      pop\n        /* \"#utility.yul\":4739:4881   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4887:5013   */\n    tag_268:\n        /* \"#utility.yul\":4937:4946   */\n      0x00\n        /* \"#utility.yul\":4970:5007   */\n      tag_377\n        /* \"#utility.yul\":5001:5006   */\n      dup3\n        /* \"#utility.yul\":4970:5007   */\n      tag_267\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":4957:5007   */\n      swap1\n      pop\n        /* \"#utility.yul\":4887:5013   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5019:5175   */\n    tag_269:\n        /* \"#utility.yul\":5099:5108   */\n      0x00\n        /* \"#utility.yul\":5132:5169   */\n      tag_379\n        /* \"#utility.yul\":5163:5168   */\n      dup3\n        /* \"#utility.yul\":5132:5169   */\n      tag_268\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":5119:5169   */\n      swap1\n      pop\n        /* \"#utility.yul\":5019:5175   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5181:5372   */\n    tag_270:\n        /* \"#utility.yul\":5298:5365   */\n      tag_381\n        /* \"#utility.yul\":5359:5364   */\n      dup2\n        /* \"#utility.yul\":5298:5365   */\n      tag_269\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":5293:5296   */\n      dup3\n        /* \"#utility.yul\":5286:5366   */\n      mstore\n        /* \"#utility.yul\":5181:5372   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5378:5660   */\n    tag_59:\n        /* \"#utility.yul\":5501:5505   */\n      0x00\n        /* \"#utility.yul\":5539:5541   */\n      0x20\n        /* \"#utility.yul\":5528:5537   */\n      dup3\n        /* \"#utility.yul\":5524:5542   */\n      add\n        /* \"#utility.yul\":5516:5542   */\n      swap1\n      pop\n        /* \"#utility.yul\":5552:5653   */\n      tag_383\n        /* \"#utility.yul\":5650:5651   */\n      0x00\n        /* \"#utility.yul\":5639:5648   */\n      dup4\n        /* \"#utility.yul\":5635:5652   */\n      add\n        /* \"#utility.yul\":5626:5632   */\n      dup5\n        /* \"#utility.yul\":5552:5653   */\n      tag_270\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5378:5660   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5666:5888   */\n    tag_63:\n        /* \"#utility.yul\":5759:5763   */\n      0x00\n        /* \"#utility.yul\":5797:5799   */\n      0x20\n        /* \"#utility.yul\":5786:5795   */\n      dup3\n        /* \"#utility.yul\":5782:5800   */\n      add\n        /* \"#utility.yul\":5774:5800   */\n      swap1\n      pop\n        /* \"#utility.yul\":5810:5881   */\n      tag_385\n        /* \"#utility.yul\":5878:5879   */\n      0x00\n        /* \"#utility.yul\":5867:5876   */\n      dup4\n        /* \"#utility.yul\":5863:5880   */\n      add\n        /* \"#utility.yul\":5854:5860   */\n      dup5\n        /* \"#utility.yul\":5810:5881   */\n      tag_264\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":5666:5888   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5894:6011   */\n    tag_271:\n        /* \"#utility.yul\":6003:6004   */\n      0x00\n        /* \"#utility.yul\":6000:6001   */\n      dup1\n        /* \"#utility.yul\":5993:6005   */\n      revert\n        /* \"#utility.yul\":6017:6119   */\n    tag_272:\n        /* \"#utility.yul\":6058:6064   */\n      0x00\n        /* \"#utility.yul\":6109:6111   */\n      0x1f\n        /* \"#utility.yul\":6105:6112   */\n      not\n        /* \"#utility.yul\":6100:6102   */\n      0x1f\n        /* \"#utility.yul\":6093:6098   */\n      dup4\n        /* \"#utility.yul\":6089:6103   */\n      add\n        /* \"#utility.yul\":6085:6113   */\n      and\n        /* \"#utility.yul\":6075:6113   */\n      swap1\n      pop\n        /* \"#utility.yul\":6017:6119   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6125:6305   */\n    tag_273:\n        /* \"#utility.yul\":6173:6250   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6170:6171   */\n      0x00\n        /* \"#utility.yul\":6163:6251   */\n      mstore\n        /* \"#utility.yul\":6270:6274   */\n      0x41\n        /* \"#utility.yul\":6267:6268   */\n      0x04\n        /* \"#utility.yul\":6260:6275   */\n      mstore\n        /* \"#utility.yul\":6294:6298   */\n      0x24\n        /* \"#utility.yul\":6291:6292   */\n      0x00\n        /* \"#utility.yul\":6284:6299   */\n      revert\n        /* \"#utility.yul\":6311:6592   */\n    tag_274:\n        /* \"#utility.yul\":6394:6421   */\n      tag_390\n        /* \"#utility.yul\":6416:6420   */\n      dup3\n        /* \"#utility.yul\":6394:6421   */\n      tag_272\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":6386:6392   */\n      dup2\n        /* \"#utility.yul\":6382:6422   */\n      add\n        /* \"#utility.yul\":6524:6530   */\n      dup2\n        /* \"#utility.yul\":6512:6522   */\n      dup2\n        /* \"#utility.yul\":6509:6531   */\n      lt\n        /* \"#utility.yul\":6488:6506   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6476:6486   */\n      dup3\n        /* \"#utility.yul\":6473:6507   */\n      gt\n        /* \"#utility.yul\":6470:6532   */\n      or\n        /* \"#utility.yul\":6467:6555   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":6535:6553   */\n      tag_392\n      tag_273\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":6467:6555   */\n    tag_391:\n        /* \"#utility.yul\":6575:6585   */\n      dup1\n        /* \"#utility.yul\":6571:6573   */\n      0x40\n        /* \"#utility.yul\":6564:6586   */\n      mstore\n        /* \"#utility.yul\":6354:6592   */\n      pop\n        /* \"#utility.yul\":6311:6592   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6598:6727   */\n    tag_275:\n        /* \"#utility.yul\":6632:6638   */\n      0x00\n        /* \"#utility.yul\":6659:6679   */\n      tag_394\n      tag_249\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":6649:6679   */\n      swap1\n      pop\n        /* \"#utility.yul\":6688:6721   */\n      tag_395\n        /* \"#utility.yul\":6716:6720   */\n      dup3\n        /* \"#utility.yul\":6708:6714   */\n      dup3\n        /* \"#utility.yul\":6688:6721   */\n      tag_274\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":6598:6727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6733:7044   */\n    tag_276:\n        /* \"#utility.yul\":6810:6814   */\n      0x00\n        /* \"#utility.yul\":6900:6918   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6892:6898   */\n      dup3\n        /* \"#utility.yul\":6889:6919   */\n      gt\n        /* \"#utility.yul\":6886:6942   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":6922:6940   */\n      tag_398\n      tag_273\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":6886:6942   */\n    tag_397:\n        /* \"#utility.yul\":6972:6976   */\n      0x20\n        /* \"#utility.yul\":6964:6970   */\n      dup3\n        /* \"#utility.yul\":6960:6977   */\n      mul\n        /* \"#utility.yul\":6952:6977   */\n      swap1\n      pop\n        /* \"#utility.yul\":7032:7036   */\n      0x20\n        /* \"#utility.yul\":7026:7030   */\n      dup2\n        /* \"#utility.yul\":7022:7037   */\n      add\n        /* \"#utility.yul\":7014:7037   */\n      swap1\n      pop\n        /* \"#utility.yul\":6733:7044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7050:7167   */\n    tag_277:\n        /* \"#utility.yul\":7159:7160   */\n      0x00\n        /* \"#utility.yul\":7156:7157   */\n      dup1\n        /* \"#utility.yul\":7149:7161   */\n      revert\n        /* \"#utility.yul\":7190:7900   */\n    tag_278:\n        /* \"#utility.yul\":7286:7291   */\n      0x00\n        /* \"#utility.yul\":7311:7392   */\n      tag_401\n        /* \"#utility.yul\":7327:7391   */\n      tag_402\n        /* \"#utility.yul\":7384:7390   */\n      dup5\n        /* \"#utility.yul\":7327:7391   */\n      tag_276\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":7311:7392   */\n      tag_275\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7302:7392   */\n      swap1\n      pop\n        /* \"#utility.yul\":7412:7417   */\n      dup1\n        /* \"#utility.yul\":7441:7447   */\n      dup4\n        /* \"#utility.yul\":7434:7439   */\n      dup3\n        /* \"#utility.yul\":7427:7448   */\n      mstore\n        /* \"#utility.yul\":7475:7479   */\n      0x20\n        /* \"#utility.yul\":7468:7473   */\n      dup3\n        /* \"#utility.yul\":7464:7480   */\n      add\n        /* \"#utility.yul\":7457:7480   */\n      swap1\n      pop\n        /* \"#utility.yul\":7528:7532   */\n      0x20\n        /* \"#utility.yul\":7520:7526   */\n      dup5\n        /* \"#utility.yul\":7516:7533   */\n      mul\n        /* \"#utility.yul\":7508:7514   */\n      dup4\n        /* \"#utility.yul\":7504:7534   */\n      add\n        /* \"#utility.yul\":7557:7560   */\n      dup6\n        /* \"#utility.yul\":7549:7555   */\n      dup2\n        /* \"#utility.yul\":7546:7561   */\n      gt\n        /* \"#utility.yul\":7543:7665   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":7576:7655   */\n      tag_404\n      tag_277\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":7543:7665   */\n    tag_403:\n        /* \"#utility.yul\":7691:7697   */\n      dup4\n        /* \"#utility.yul\":7674:7894   */\n    tag_405:\n        /* \"#utility.yul\":7708:7714   */\n      dup2\n        /* \"#utility.yul\":7703:7706   */\n      dup2\n        /* \"#utility.yul\":7700:7715   */\n      lt\n        /* \"#utility.yul\":7674:7894   */\n      iszero\n      tag_407\n      jumpi\n        /* \"#utility.yul\":7783:7786   */\n      dup1\n        /* \"#utility.yul\":7812:7849   */\n      tag_408\n        /* \"#utility.yul\":7845:7848   */\n      dup9\n        /* \"#utility.yul\":7833:7843   */\n      dup3\n        /* \"#utility.yul\":7812:7849   */\n      tag_263\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":7807:7810   */\n      dup5\n        /* \"#utility.yul\":7800:7850   */\n      mstore\n        /* \"#utility.yul\":7879:7883   */\n      0x20\n        /* \"#utility.yul\":7874:7877   */\n      dup5\n        /* \"#utility.yul\":7870:7884   */\n      add\n        /* \"#utility.yul\":7863:7884   */\n      swap4\n      pop\n        /* \"#utility.yul\":7750:7894   */\n      pop\n        /* \"#utility.yul\":7734:7738   */\n      0x20\n        /* \"#utility.yul\":7729:7732   */\n      dup2\n        /* \"#utility.yul\":7725:7739   */\n      add\n        /* \"#utility.yul\":7718:7739   */\n      swap1\n      pop\n        /* \"#utility.yul\":7674:7894   */\n      jump(tag_405)\n    tag_407:\n        /* \"#utility.yul\":7678:7699   */\n      pop\n        /* \"#utility.yul\":7292:7900   */\n      pop\n      pop\n        /* \"#utility.yul\":7190:7900   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7923:8293   */\n    tag_279:\n        /* \"#utility.yul\":7994:7999   */\n      0x00\n        /* \"#utility.yul\":8043:8046   */\n      dup3\n        /* \"#utility.yul\":8036:8040   */\n      0x1f\n        /* \"#utility.yul\":8028:8034   */\n      dup4\n        /* \"#utility.yul\":8024:8041   */\n      add\n        /* \"#utility.yul\":8020:8047   */\n      slt\n        /* \"#utility.yul\":8010:8132   */\n      tag_410\n      jumpi\n        /* \"#utility.yul\":8051:8130   */\n      tag_411\n      tag_271\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8010:8132   */\n    tag_410:\n        /* \"#utility.yul\":8168:8174   */\n      dup2\n        /* \"#utility.yul\":8155:8175   */\n      calldataload\n        /* \"#utility.yul\":8193:8287   */\n      tag_412\n        /* \"#utility.yul\":8283:8286   */\n      dup5\n        /* \"#utility.yul\":8275:8281   */\n      dup3\n        /* \"#utility.yul\":8268:8272   */\n      0x20\n        /* \"#utility.yul\":8260:8266   */\n      dup7\n        /* \"#utility.yul\":8256:8273   */\n      add\n        /* \"#utility.yul\":8193:8287   */\n      tag_278\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":8184:8287   */\n      swap2\n      pop\n        /* \"#utility.yul\":8000:8293   */\n      pop\n        /* \"#utility.yul\":7923:8293   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8299:8416   */\n    tag_280:\n        /* \"#utility.yul\":8408:8409   */\n      0x00\n        /* \"#utility.yul\":8405:8406   */\n      dup1\n        /* \"#utility.yul\":8398:8410   */\n      revert\n        /* \"#utility.yul\":8422:8729   */\n    tag_281:\n        /* \"#utility.yul\":8483:8487   */\n      0x00\n        /* \"#utility.yul\":8573:8591   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8565:8571   */\n      dup3\n        /* \"#utility.yul\":8562:8592   */\n      gt\n        /* \"#utility.yul\":8559:8615   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":8595:8613   */\n      tag_416\n      tag_273\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":8559:8615   */\n    tag_415:\n        /* \"#utility.yul\":8633:8662   */\n      tag_417\n        /* \"#utility.yul\":8655:8661   */\n      dup3\n        /* \"#utility.yul\":8633:8662   */\n      tag_272\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":8625:8662   */\n      swap1\n      pop\n        /* \"#utility.yul\":8717:8721   */\n      0x20\n        /* \"#utility.yul\":8711:8715   */\n      dup2\n        /* \"#utility.yul\":8707:8722   */\n      add\n        /* \"#utility.yul\":8699:8722   */\n      swap1\n      pop\n        /* \"#utility.yul\":8422:8729   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8735:8883   */\n    tag_282:\n        /* \"#utility.yul\":8833:8839   */\n      dup3\n        /* \"#utility.yul\":8828:8831   */\n      dup2\n        /* \"#utility.yul\":8823:8826   */\n      dup4\n        /* \"#utility.yul\":8810:8840   */\n      calldatacopy\n        /* \"#utility.yul\":8874:8875   */\n      0x00\n        /* \"#utility.yul\":8865:8871   */\n      dup4\n        /* \"#utility.yul\":8860:8863   */\n      dup4\n        /* \"#utility.yul\":8856:8872   */\n      add\n        /* \"#utility.yul\":8849:8876   */\n      mstore\n        /* \"#utility.yul\":8735:8883   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8889:9312   */\n    tag_283:\n        /* \"#utility.yul\":8966:8971   */\n      0x00\n        /* \"#utility.yul\":8991:9056   */\n      tag_420\n        /* \"#utility.yul\":9007:9055   */\n      tag_421\n        /* \"#utility.yul\":9048:9054   */\n      dup5\n        /* \"#utility.yul\":9007:9055   */\n      tag_281\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":8991:9056   */\n      tag_275\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":8982:9056   */\n      swap1\n      pop\n        /* \"#utility.yul\":9079:9085   */\n      dup3\n        /* \"#utility.yul\":9072:9077   */\n      dup2\n        /* \"#utility.yul\":9065:9086   */\n      mstore\n        /* \"#utility.yul\":9117:9121   */\n      0x20\n        /* \"#utility.yul\":9110:9115   */\n      dup2\n        /* \"#utility.yul\":9106:9122   */\n      add\n        /* \"#utility.yul\":9155:9158   */\n      dup5\n        /* \"#utility.yul\":9146:9152   */\n      dup5\n        /* \"#utility.yul\":9141:9144   */\n      dup5\n        /* \"#utility.yul\":9137:9153   */\n      add\n        /* \"#utility.yul\":9134:9159   */\n      gt\n        /* \"#utility.yul\":9131:9243   */\n      iszero\n      tag_422\n      jumpi\n        /* \"#utility.yul\":9162:9241   */\n      tag_423\n      tag_280\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":9131:9243   */\n    tag_422:\n        /* \"#utility.yul\":9252:9306   */\n      tag_424\n        /* \"#utility.yul\":9299:9305   */\n      dup5\n        /* \"#utility.yul\":9294:9297   */\n      dup3\n        /* \"#utility.yul\":9289:9292   */\n      dup6\n        /* \"#utility.yul\":9252:9306   */\n      tag_282\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":8972:9312   */\n      pop\n        /* \"#utility.yul\":8889:9312   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9331:9669   */\n    tag_284:\n        /* \"#utility.yul\":9386:9391   */\n      0x00\n        /* \"#utility.yul\":9435:9438   */\n      dup3\n        /* \"#utility.yul\":9428:9432   */\n      0x1f\n        /* \"#utility.yul\":9420:9426   */\n      dup4\n        /* \"#utility.yul\":9416:9433   */\n      add\n        /* \"#utility.yul\":9412:9439   */\n      slt\n        /* \"#utility.yul\":9402:9524   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":9443:9522   */\n      tag_427\n      tag_271\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9402:9524   */\n    tag_426:\n        /* \"#utility.yul\":9560:9566   */\n      dup2\n        /* \"#utility.yul\":9547:9567   */\n      calldataload\n        /* \"#utility.yul\":9585:9663   */\n      tag_428\n        /* \"#utility.yul\":9659:9662   */\n      dup5\n        /* \"#utility.yul\":9651:9657   */\n      dup3\n        /* \"#utility.yul\":9644:9648   */\n      0x20\n        /* \"#utility.yul\":9636:9642   */\n      dup7\n        /* \"#utility.yul\":9632:9649   */\n      add\n        /* \"#utility.yul\":9585:9663   */\n      tag_283\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":9576:9663   */\n      swap2\n      pop\n        /* \"#utility.yul\":9392:9669   */\n      pop\n        /* \"#utility.yul\":9331:9669   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9675:11184   */\n    tag_73:\n        /* \"#utility.yul\":9829:9835   */\n      0x00\n        /* \"#utility.yul\":9837:9843   */\n      dup1\n        /* \"#utility.yul\":9845:9851   */\n      0x00\n        /* \"#utility.yul\":9853:9859   */\n      dup1\n        /* \"#utility.yul\":9861:9867   */\n      0x00\n        /* \"#utility.yul\":9910:9913   */\n      0xa0\n        /* \"#utility.yul\":9898:9907   */\n      dup7\n        /* \"#utility.yul\":9889:9896   */\n      dup9\n        /* \"#utility.yul\":9885:9908   */\n      sub\n        /* \"#utility.yul\":9881:9914   */\n      slt\n        /* \"#utility.yul\":9878:9998   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":9917:9996   */\n      tag_431\n      tag_250\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":9878:9998   */\n    tag_430:\n        /* \"#utility.yul\":10037:10038   */\n      0x00\n        /* \"#utility.yul\":10062:10115   */\n      tag_432\n        /* \"#utility.yul\":10107:10114   */\n      dup9\n        /* \"#utility.yul\":10098:10104   */\n      dup3\n        /* \"#utility.yul\":10087:10096   */\n      dup10\n        /* \"#utility.yul\":10083:10105   */\n      add\n        /* \"#utility.yul\":10062:10115   */\n      tag_260\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":10052:10115   */\n      swap6\n      pop\n        /* \"#utility.yul\":10008:10125   */\n      pop\n        /* \"#utility.yul\":10164:10166   */\n      0x20\n        /* \"#utility.yul\":10190:10243   */\n      tag_433\n        /* \"#utility.yul\":10235:10242   */\n      dup9\n        /* \"#utility.yul\":10226:10232   */\n      dup3\n        /* \"#utility.yul\":10215:10224   */\n      dup10\n        /* \"#utility.yul\":10211:10233   */\n      add\n        /* \"#utility.yul\":10190:10243   */\n      tag_260\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":10180:10243   */\n      swap5\n      pop\n        /* \"#utility.yul\":10135:10253   */\n      pop\n        /* \"#utility.yul\":10320:10322   */\n      0x40\n        /* \"#utility.yul\":10309:10318   */\n      dup7\n        /* \"#utility.yul\":10305:10323   */\n      add\n        /* \"#utility.yul\":10292:10324   */\n      calldataload\n        /* \"#utility.yul\":10351:10369   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10343:10349   */\n      dup2\n        /* \"#utility.yul\":10340:10370   */\n      gt\n        /* \"#utility.yul\":10337:10454   */\n      iszero\n      tag_434\n      jumpi\n        /* \"#utility.yul\":10373:10452   */\n      tag_435\n      tag_251\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10337:10454   */\n    tag_434:\n        /* \"#utility.yul\":10478:10556   */\n      tag_436\n        /* \"#utility.yul\":10548:10555   */\n      dup9\n        /* \"#utility.yul\":10539:10545   */\n      dup3\n        /* \"#utility.yul\":10528:10537   */\n      dup10\n        /* \"#utility.yul\":10524:10546   */\n      add\n        /* \"#utility.yul\":10478:10556   */\n      tag_279\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":10468:10556   */\n      swap4\n      pop\n        /* \"#utility.yul\":10263:10566   */\n      pop\n        /* \"#utility.yul\":10633:10635   */\n      0x60\n        /* \"#utility.yul\":10622:10631   */\n      dup7\n        /* \"#utility.yul\":10618:10636   */\n      add\n        /* \"#utility.yul\":10605:10637   */\n      calldataload\n        /* \"#utility.yul\":10664:10682   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10656:10662   */\n      dup2\n        /* \"#utility.yul\":10653:10683   */\n      gt\n        /* \"#utility.yul\":10650:10767   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":10686:10765   */\n      tag_438\n      tag_251\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":10650:10767   */\n    tag_437:\n        /* \"#utility.yul\":10791:10869   */\n      tag_439\n        /* \"#utility.yul\":10861:10868   */\n      dup9\n        /* \"#utility.yul\":10852:10858   */\n      dup3\n        /* \"#utility.yul\":10841:10850   */\n      dup10\n        /* \"#utility.yul\":10837:10859   */\n      add\n        /* \"#utility.yul\":10791:10869   */\n      tag_279\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":10781:10869   */\n      swap3\n      pop\n        /* \"#utility.yul\":10576:10879   */\n      pop\n        /* \"#utility.yul\":10946:10949   */\n      0x80\n        /* \"#utility.yul\":10935:10944   */\n      dup7\n        /* \"#utility.yul\":10931:10950   */\n      add\n        /* \"#utility.yul\":10918:10951   */\n      calldataload\n        /* \"#utility.yul\":10978:10996   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10970:10976   */\n      dup2\n        /* \"#utility.yul\":10967:10997   */\n      gt\n        /* \"#utility.yul\":10964:11081   */\n      iszero\n      tag_440\n      jumpi\n        /* \"#utility.yul\":11000:11079   */\n      tag_441\n      tag_251\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":10964:11081   */\n    tag_440:\n        /* \"#utility.yul\":11105:11167   */\n      tag_442\n        /* \"#utility.yul\":11159:11166   */\n      dup9\n        /* \"#utility.yul\":11150:11156   */\n      dup3\n        /* \"#utility.yul\":11139:11148   */\n      dup10\n        /* \"#utility.yul\":11135:11157   */\n      add\n        /* \"#utility.yul\":11105:11167   */\n      tag_284\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":11095:11167   */\n      swap2\n      pop\n        /* \"#utility.yul\":10889:11177   */\n      pop\n        /* \"#utility.yul\":9675:11184   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11190:11305   */\n    tag_285:\n        /* \"#utility.yul\":11275:11298   */\n      tag_444\n        /* \"#utility.yul\":11292:11297   */\n      dup2\n        /* \"#utility.yul\":11275:11298   */\n      tag_252\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11270:11273   */\n      dup3\n        /* \"#utility.yul\":11263:11299   */\n      mstore\n        /* \"#utility.yul\":11190:11305   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11311:11529   */\n    tag_76:\n        /* \"#utility.yul\":11402:11406   */\n      0x00\n        /* \"#utility.yul\":11440:11442   */\n      0x20\n        /* \"#utility.yul\":11429:11438   */\n      dup3\n        /* \"#utility.yul\":11425:11443   */\n      add\n        /* \"#utility.yul\":11417:11443   */\n      swap1\n      pop\n        /* \"#utility.yul\":11453:11522   */\n      tag_446\n        /* \"#utility.yul\":11519:11520   */\n      0x00\n        /* \"#utility.yul\":11508:11517   */\n      dup4\n        /* \"#utility.yul\":11504:11521   */\n      add\n        /* \"#utility.yul\":11495:11501   */\n      dup5\n        /* \"#utility.yul\":11453:11522   */\n      tag_285\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11311:11529   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11535:11864   */\n    tag_82:\n        /* \"#utility.yul\":11594:11600   */\n      0x00\n        /* \"#utility.yul\":11643:11645   */\n      0x20\n        /* \"#utility.yul\":11631:11640   */\n      dup3\n        /* \"#utility.yul\":11622:11629   */\n      dup5\n        /* \"#utility.yul\":11618:11641   */\n      sub\n        /* \"#utility.yul\":11614:11646   */\n      slt\n        /* \"#utility.yul\":11611:11730   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":11649:11728   */\n      tag_449\n      tag_250\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":11611:11730   */\n    tag_448:\n        /* \"#utility.yul\":11769:11770   */\n      0x00\n        /* \"#utility.yul\":11794:11847   */\n      tag_450\n        /* \"#utility.yul\":11839:11846   */\n      dup5\n        /* \"#utility.yul\":11830:11836   */\n      dup3\n        /* \"#utility.yul\":11819:11828   */\n      dup6\n        /* \"#utility.yul\":11815:11837   */\n      add\n        /* \"#utility.yul\":11794:11847   */\n      tag_260\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11784:11847   */\n      swap2\n      pop\n        /* \"#utility.yul\":11740:11857   */\n      pop\n        /* \"#utility.yul\":11535:11864   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11870:12489   */\n    tag_86:\n        /* \"#utility.yul\":11947:11953   */\n      0x00\n        /* \"#utility.yul\":11955:11961   */\n      dup1\n        /* \"#utility.yul\":11963:11969   */\n      0x00\n        /* \"#utility.yul\":12012:12014   */\n      0x60\n        /* \"#utility.yul\":12000:12009   */\n      dup5\n        /* \"#utility.yul\":11991:11998   */\n      dup7\n        /* \"#utility.yul\":11987:12010   */\n      sub\n        /* \"#utility.yul\":11983:12015   */\n      slt\n        /* \"#utility.yul\":11980:12099   */\n      iszero\n      tag_452\n      jumpi\n        /* \"#utility.yul\":12018:12097   */\n      tag_453\n      tag_250\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":11980:12099   */\n    tag_452:\n        /* \"#utility.yul\":12138:12139   */\n      0x00\n        /* \"#utility.yul\":12163:12216   */\n      tag_454\n        /* \"#utility.yul\":12208:12215   */\n      dup7\n        /* \"#utility.yul\":12199:12205   */\n      dup3\n        /* \"#utility.yul\":12188:12197   */\n      dup8\n        /* \"#utility.yul\":12184:12206   */\n      add\n        /* \"#utility.yul\":12163:12216   */\n      tag_260\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12153:12216   */\n      swap4\n      pop\n        /* \"#utility.yul\":12109:12226   */\n      pop\n        /* \"#utility.yul\":12265:12267   */\n      0x20\n        /* \"#utility.yul\":12291:12344   */\n      tag_455\n        /* \"#utility.yul\":12336:12343   */\n      dup7\n        /* \"#utility.yul\":12327:12333   */\n      dup3\n        /* \"#utility.yul\":12316:12325   */\n      dup8\n        /* \"#utility.yul\":12312:12334   */\n      add\n        /* \"#utility.yul\":12291:12344   */\n      tag_263\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":12281:12344   */\n      swap3\n      pop\n        /* \"#utility.yul\":12236:12354   */\n      pop\n        /* \"#utility.yul\":12393:12395   */\n      0x40\n        /* \"#utility.yul\":12419:12472   */\n      tag_456\n        /* \"#utility.yul\":12464:12471   */\n      dup7\n        /* \"#utility.yul\":12455:12461   */\n      dup3\n        /* \"#utility.yul\":12444:12453   */\n      dup8\n        /* \"#utility.yul\":12440:12462   */\n      add\n        /* \"#utility.yul\":12419:12472   */\n      tag_263\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12409:12472   */\n      swap2\n      pop\n        /* \"#utility.yul\":12364:12482   */\n      pop\n        /* \"#utility.yul\":11870:12489   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":12495:13584   */\n    tag_93:\n        /* \"#utility.yul\":12599:12605   */\n      0x00\n        /* \"#utility.yul\":12607:12613   */\n      dup1\n        /* \"#utility.yul\":12615:12621   */\n      0x00\n        /* \"#utility.yul\":12623:12629   */\n      dup1\n        /* \"#utility.yul\":12631:12637   */\n      0x00\n        /* \"#utility.yul\":12680:12683   */\n      0xa0\n        /* \"#utility.yul\":12668:12677   */\n      dup7\n        /* \"#utility.yul\":12659:12666   */\n      dup9\n        /* \"#utility.yul\":12655:12678   */\n      sub\n        /* \"#utility.yul\":12651:12684   */\n      slt\n        /* \"#utility.yul\":12648:12768   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":12687:12766   */\n      tag_459\n      tag_250\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":12648:12768   */\n    tag_458:\n        /* \"#utility.yul\":12807:12808   */\n      0x00\n        /* \"#utility.yul\":12832:12885   */\n      tag_460\n        /* \"#utility.yul\":12877:12884   */\n      dup9\n        /* \"#utility.yul\":12868:12874   */\n      dup3\n        /* \"#utility.yul\":12857:12866   */\n      dup10\n        /* \"#utility.yul\":12853:12875   */\n      add\n        /* \"#utility.yul\":12832:12885   */\n      tag_260\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":12822:12885   */\n      swap6\n      pop\n        /* \"#utility.yul\":12778:12895   */\n      pop\n        /* \"#utility.yul\":12934:12936   */\n      0x20\n        /* \"#utility.yul\":12960:13013   */\n      tag_461\n        /* \"#utility.yul\":13005:13012   */\n      dup9\n        /* \"#utility.yul\":12996:13002   */\n      dup3\n        /* \"#utility.yul\":12985:12994   */\n      dup10\n        /* \"#utility.yul\":12981:13003   */\n      add\n        /* \"#utility.yul\":12960:13013   */\n      tag_260\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":12950:13013   */\n      swap5\n      pop\n        /* \"#utility.yul\":12905:13023   */\n      pop\n        /* \"#utility.yul\":13062:13064   */\n      0x40\n        /* \"#utility.yul\":13088:13141   */\n      tag_462\n        /* \"#utility.yul\":13133:13140   */\n      dup9\n        /* \"#utility.yul\":13124:13130   */\n      dup3\n        /* \"#utility.yul\":13113:13122   */\n      dup10\n        /* \"#utility.yul\":13109:13131   */\n      add\n        /* \"#utility.yul\":13088:13141   */\n      tag_263\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":13078:13141   */\n      swap4\n      pop\n        /* \"#utility.yul\":13033:13151   */\n      pop\n        /* \"#utility.yul\":13190:13192   */\n      0x60\n        /* \"#utility.yul\":13216:13269   */\n      tag_463\n        /* \"#utility.yul\":13261:13268   */\n      dup9\n        /* \"#utility.yul\":13252:13258   */\n      dup3\n        /* \"#utility.yul\":13241:13250   */\n      dup10\n        /* \"#utility.yul\":13237:13259   */\n      add\n        /* \"#utility.yul\":13216:13269   */\n      tag_263\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":13206:13269   */\n      swap3\n      pop\n        /* \"#utility.yul\":13161:13279   */\n      pop\n        /* \"#utility.yul\":13346:13349   */\n      0x80\n        /* \"#utility.yul\":13335:13344   */\n      dup7\n        /* \"#utility.yul\":13331:13350   */\n      add\n        /* \"#utility.yul\":13318:13351   */\n      calldataload\n        /* \"#utility.yul\":13378:13396   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13370:13376   */\n      dup2\n        /* \"#utility.yul\":13367:13397   */\n      gt\n        /* \"#utility.yul\":13364:13481   */\n      iszero\n      tag_464\n      jumpi\n        /* \"#utility.yul\":13400:13479   */\n      tag_465\n      tag_251\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":13364:13481   */\n    tag_464:\n        /* \"#utility.yul\":13505:13567   */\n      tag_466\n        /* \"#utility.yul\":13559:13566   */\n      dup9\n        /* \"#utility.yul\":13550:13556   */\n      dup3\n        /* \"#utility.yul\":13539:13548   */\n      dup10\n        /* \"#utility.yul\":13535:13557   */\n      add\n        /* \"#utility.yul\":13505:13567   */\n      tag_284\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":13495:13567   */\n      swap2\n      pop\n        /* \"#utility.yul\":13289:13577   */\n      pop\n        /* \"#utility.yul\":12495:13584   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13590:13759   */\n    tag_286:\n        /* \"#utility.yul\":13674:13685   */\n      0x00\n        /* \"#utility.yul\":13708:13714   */\n      dup3\n        /* \"#utility.yul\":13703:13706   */\n      dup3\n        /* \"#utility.yul\":13696:13715   */\n      mstore\n        /* \"#utility.yul\":13748:13752   */\n      0x20\n        /* \"#utility.yul\":13743:13746   */\n      dup3\n        /* \"#utility.yul\":13739:13753   */\n      add\n        /* \"#utility.yul\":13724:13753   */\n      swap1\n      pop\n        /* \"#utility.yul\":13590:13759   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13765:13938   */\n    tag_287:\n        /* \"#utility.yul\":13905:13930   */\n      0x496e76616c696420455243313135352061646472657373000000000000000000\n        /* \"#utility.yul\":13901:13902   */\n      0x00\n        /* \"#utility.yul\":13893:13899   */\n      dup3\n        /* \"#utility.yul\":13889:13903   */\n      add\n        /* \"#utility.yul\":13882:13931   */\n      mstore\n        /* \"#utility.yul\":13765:13938   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13944:14310   */\n    tag_288:\n        /* \"#utility.yul\":14086:14089   */\n      0x00\n        /* \"#utility.yul\":14107:14174   */\n      tag_470\n        /* \"#utility.yul\":14171:14173   */\n      0x17\n        /* \"#utility.yul\":14166:14169   */\n      dup4\n        /* \"#utility.yul\":14107:14174   */\n      tag_286\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":14100:14174   */\n      swap2\n      pop\n        /* \"#utility.yul\":14183:14276   */\n      tag_471\n        /* \"#utility.yul\":14272:14275   */\n      dup3\n        /* \"#utility.yul\":14183:14276   */\n      tag_287\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":14301:14303   */\n      0x20\n        /* \"#utility.yul\":14296:14299   */\n      dup3\n        /* \"#utility.yul\":14292:14304   */\n      add\n        /* \"#utility.yul\":14285:14304   */\n      swap1\n      pop\n        /* \"#utility.yul\":13944:14310   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14316:14735   */\n    tag_118:\n        /* \"#utility.yul\":14482:14486   */\n      0x00\n        /* \"#utility.yul\":14520:14522   */\n      0x20\n        /* \"#utility.yul\":14509:14518   */\n      dup3\n        /* \"#utility.yul\":14505:14523   */\n      add\n        /* \"#utility.yul\":14497:14523   */\n      swap1\n      pop\n        /* \"#utility.yul\":14569:14578   */\n      dup2\n        /* \"#utility.yul\":14563:14567   */\n      dup2\n        /* \"#utility.yul\":14559:14579   */\n      sub\n        /* \"#utility.yul\":14555:14556   */\n      0x00\n        /* \"#utility.yul\":14544:14553   */\n      dup4\n        /* \"#utility.yul\":14540:14557   */\n      add\n        /* \"#utility.yul\":14533:14580   */\n      mstore\n        /* \"#utility.yul\":14597:14728   */\n      tag_473\n        /* \"#utility.yul\":14723:14727   */\n      dup2\n        /* \"#utility.yul\":14597:14728   */\n      tag_288\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":14589:14728   */\n      swap1\n      pop\n        /* \"#utility.yul\":14316:14735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14741:14971   */\n    tag_289:\n        /* \"#utility.yul\":14881:14915   */\n      0x4f6e6c792074686520746f6b656e206f776e65722063616e2074726967676572\n        /* \"#utility.yul\":14877:14878   */\n      0x00\n        /* \"#utility.yul\":14869:14875   */\n      dup3\n        /* \"#utility.yul\":14865:14879   */\n      add\n        /* \"#utility.yul\":14858:14916   */\n      mstore\n        /* \"#utility.yul\":14950:14963   */\n      0x20636f6e76657273696f6e000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14945:14947   */\n      0x20\n        /* \"#utility.yul\":14937:14943   */\n      dup3\n        /* \"#utility.yul\":14933:14948   */\n      add\n        /* \"#utility.yul\":14926:14964   */\n      mstore\n        /* \"#utility.yul\":14741:14971   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14977:15343   */\n    tag_290:\n        /* \"#utility.yul\":15119:15122   */\n      0x00\n        /* \"#utility.yul\":15140:15207   */\n      tag_476\n        /* \"#utility.yul\":15204:15206   */\n      0x2b\n        /* \"#utility.yul\":15199:15202   */\n      dup4\n        /* \"#utility.yul\":15140:15207   */\n      tag_286\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":15133:15207   */\n      swap2\n      pop\n        /* \"#utility.yul\":15216:15309   */\n      tag_477\n        /* \"#utility.yul\":15305:15308   */\n      dup3\n        /* \"#utility.yul\":15216:15309   */\n      tag_289\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":15334:15336   */\n      0x40\n        /* \"#utility.yul\":15329:15332   */\n      dup3\n        /* \"#utility.yul\":15325:15337   */\n      add\n        /* \"#utility.yul\":15318:15337   */\n      swap1\n      pop\n        /* \"#utility.yul\":14977:15343   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15349:15768   */\n    tag_136:\n        /* \"#utility.yul\":15515:15519   */\n      0x00\n        /* \"#utility.yul\":15553:15555   */\n      0x20\n        /* \"#utility.yul\":15542:15551   */\n      dup3\n        /* \"#utility.yul\":15538:15556   */\n      add\n        /* \"#utility.yul\":15530:15556   */\n      swap1\n      pop\n        /* \"#utility.yul\":15602:15611   */\n      dup2\n        /* \"#utility.yul\":15596:15600   */\n      dup2\n        /* \"#utility.yul\":15592:15612   */\n      sub\n        /* \"#utility.yul\":15588:15589   */\n      0x00\n        /* \"#utility.yul\":15577:15586   */\n      dup4\n        /* \"#utility.yul\":15573:15590   */\n      add\n        /* \"#utility.yul\":15566:15613   */\n      mstore\n        /* \"#utility.yul\":15630:15761   */\n      tag_479\n        /* \"#utility.yul\":15756:15760   */\n      dup2\n        /* \"#utility.yul\":15630:15761   */\n      tag_290\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":15622:15761   */\n      swap1\n      pop\n        /* \"#utility.yul\":15349:15768   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15774:15954   */\n    tag_291:\n        /* \"#utility.yul\":15914:15946   */\n      0x49447320616e642076616c756573206c656e677468206d69736d617463680000\n        /* \"#utility.yul\":15910:15911   */\n      0x00\n        /* \"#utility.yul\":15902:15908   */\n      dup3\n        /* \"#utility.yul\":15898:15912   */\n      add\n        /* \"#utility.yul\":15891:15947   */\n      mstore\n        /* \"#utility.yul\":15774:15954   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15960:16326   */\n    tag_292:\n        /* \"#utility.yul\":16102:16105   */\n      0x00\n        /* \"#utility.yul\":16123:16190   */\n      tag_482\n        /* \"#utility.yul\":16187:16189   */\n      0x1e\n        /* \"#utility.yul\":16182:16185   */\n      dup4\n        /* \"#utility.yul\":16123:16190   */\n      tag_286\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":16116:16190   */\n      swap2\n      pop\n        /* \"#utility.yul\":16199:16292   */\n      tag_483\n        /* \"#utility.yul\":16288:16291   */\n      dup3\n        /* \"#utility.yul\":16199:16292   */\n      tag_291\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":16317:16319   */\n      0x20\n        /* \"#utility.yul\":16312:16315   */\n      dup3\n        /* \"#utility.yul\":16308:16320   */\n      add\n        /* \"#utility.yul\":16301:16320   */\n      swap1\n      pop\n        /* \"#utility.yul\":15960:16326   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16332:16751   */\n    tag_139:\n        /* \"#utility.yul\":16498:16502   */\n      0x00\n        /* \"#utility.yul\":16536:16538   */\n      0x20\n        /* \"#utility.yul\":16525:16534   */\n      dup3\n        /* \"#utility.yul\":16521:16539   */\n      add\n        /* \"#utility.yul\":16513:16539   */\n      swap1\n      pop\n        /* \"#utility.yul\":16585:16594   */\n      dup2\n        /* \"#utility.yul\":16579:16583   */\n      dup2\n        /* \"#utility.yul\":16575:16595   */\n      sub\n        /* \"#utility.yul\":16571:16572   */\n      0x00\n        /* \"#utility.yul\":16560:16569   */\n      dup4\n        /* \"#utility.yul\":16556:16573   */\n      add\n        /* \"#utility.yul\":16549:16596   */\n      mstore\n        /* \"#utility.yul\":16613:16744   */\n      tag_485\n        /* \"#utility.yul\":16739:16743   */\n      dup2\n        /* \"#utility.yul\":16613:16744   */\n      tag_292\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":16605:16744   */\n      swap1\n      pop\n        /* \"#utility.yul\":16332:16751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16757:16926   */\n    tag_293:\n        /* \"#utility.yul\":16897:16918   */\n      0x455243323020746f6b656e206e6f742073657400000000000000000000000000\n        /* \"#utility.yul\":16893:16894   */\n      0x00\n        /* \"#utility.yul\":16885:16891   */\n      dup3\n        /* \"#utility.yul\":16881:16895   */\n      add\n        /* \"#utility.yul\":16874:16919   */\n      mstore\n        /* \"#utility.yul\":16757:16926   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16932:17298   */\n    tag_294:\n        /* \"#utility.yul\":17074:17077   */\n      0x00\n        /* \"#utility.yul\":17095:17162   */\n      tag_488\n        /* \"#utility.yul\":17159:17161   */\n      0x13\n        /* \"#utility.yul\":17154:17157   */\n      dup4\n        /* \"#utility.yul\":17095:17162   */\n      tag_286\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":17088:17162   */\n      swap2\n      pop\n        /* \"#utility.yul\":17171:17264   */\n      tag_489\n        /* \"#utility.yul\":17260:17263   */\n      dup3\n        /* \"#utility.yul\":17171:17264   */\n      tag_293\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":17289:17291   */\n      0x20\n        /* \"#utility.yul\":17284:17287   */\n      dup3\n        /* \"#utility.yul\":17280:17292   */\n      add\n        /* \"#utility.yul\":17273:17292   */\n      swap1\n      pop\n        /* \"#utility.yul\":16932:17298   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17304:17723   */\n    tag_142:\n        /* \"#utility.yul\":17470:17474   */\n      0x00\n        /* \"#utility.yul\":17508:17510   */\n      0x20\n        /* \"#utility.yul\":17497:17506   */\n      dup3\n        /* \"#utility.yul\":17493:17511   */\n      add\n        /* \"#utility.yul\":17485:17511   */\n      swap1\n      pop\n        /* \"#utility.yul\":17557:17566   */\n      dup2\n        /* \"#utility.yul\":17551:17555   */\n      dup2\n        /* \"#utility.yul\":17547:17567   */\n      sub\n        /* \"#utility.yul\":17543:17544   */\n      0x00\n        /* \"#utility.yul\":17532:17541   */\n      dup4\n        /* \"#utility.yul\":17528:17545   */\n      add\n        /* \"#utility.yul\":17521:17568   */\n      mstore\n        /* \"#utility.yul\":17585:17716   */\n      tag_491\n        /* \"#utility.yul\":17711:17715   */\n      dup2\n        /* \"#utility.yul\":17585:17716   */\n      tag_294\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":17577:17716   */\n      swap1\n      pop\n        /* \"#utility.yul\":17304:17723   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17729:17909   */\n    tag_148:\n        /* \"#utility.yul\":17777:17854   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17774:17775   */\n      0x00\n        /* \"#utility.yul\":17767:17855   */\n      mstore\n        /* \"#utility.yul\":17874:17878   */\n      0x32\n        /* \"#utility.yul\":17871:17872   */\n      0x04\n        /* \"#utility.yul\":17864:17879   */\n      mstore\n        /* \"#utility.yul\":17898:17902   */\n      0x24\n        /* \"#utility.yul\":17895:17896   */\n      0x00\n        /* \"#utility.yul\":17888:17903   */\n      revert\n        /* \"#utility.yul\":17915:18155   */\n    tag_295:\n        /* \"#utility.yul\":18055:18089   */\n      0x4f6e65206f72206d6f7265204552433131353520746f6b656e73206e6f742061\n        /* \"#utility.yul\":18051:18052   */\n      0x00\n        /* \"#utility.yul\":18043:18049   */\n      dup3\n        /* \"#utility.yul\":18039:18053   */\n      add\n        /* \"#utility.yul\":18032:18090   */\n      mstore\n        /* \"#utility.yul\":18124:18147   */\n      0x6c6c6f77656420666f7220636f6e76657273696f6e0000000000000000000000\n        /* \"#utility.yul\":18119:18121   */\n      0x20\n        /* \"#utility.yul\":18111:18117   */\n      dup3\n        /* \"#utility.yul\":18107:18122   */\n      add\n        /* \"#utility.yul\":18100:18148   */\n      mstore\n        /* \"#utility.yul\":17915:18155   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18161:18527   */\n    tag_296:\n        /* \"#utility.yul\":18303:18306   */\n      0x00\n        /* \"#utility.yul\":18324:18391   */\n      tag_495\n        /* \"#utility.yul\":18388:18390   */\n      0x35\n        /* \"#utility.yul\":18383:18386   */\n      dup4\n        /* \"#utility.yul\":18324:18391   */\n      tag_286\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":18317:18391   */\n      swap2\n      pop\n        /* \"#utility.yul\":18400:18493   */\n      tag_496\n        /* \"#utility.yul\":18489:18492   */\n      dup3\n        /* \"#utility.yul\":18400:18493   */\n      tag_295\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":18518:18520   */\n      0x40\n        /* \"#utility.yul\":18513:18516   */\n      dup3\n        /* \"#utility.yul\":18509:18521   */\n      add\n        /* \"#utility.yul\":18502:18521   */\n      swap1\n      pop\n        /* \"#utility.yul\":18161:18527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18533:18952   */\n    tag_151:\n        /* \"#utility.yul\":18699:18703   */\n      0x00\n        /* \"#utility.yul\":18737:18739   */\n      0x20\n        /* \"#utility.yul\":18726:18735   */\n      dup3\n        /* \"#utility.yul\":18722:18740   */\n      add\n        /* \"#utility.yul\":18714:18740   */\n      swap1\n      pop\n        /* \"#utility.yul\":18786:18795   */\n      dup2\n        /* \"#utility.yul\":18780:18784   */\n      dup2\n        /* \"#utility.yul\":18776:18796   */\n      sub\n        /* \"#utility.yul\":18772:18773   */\n      0x00\n        /* \"#utility.yul\":18761:18770   */\n      dup4\n        /* \"#utility.yul\":18757:18774   */\n      add\n        /* \"#utility.yul\":18750:18797   */\n      mstore\n        /* \"#utility.yul\":18814:18945   */\n      tag_498\n        /* \"#utility.yul\":18940:18944   */\n      dup2\n        /* \"#utility.yul\":18814:18945   */\n      tag_296\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":18806:18945   */\n      swap1\n      pop\n        /* \"#utility.yul\":18533:18952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18958:19290   */\n    tag_155:\n        /* \"#utility.yul\":19079:19083   */\n      0x00\n        /* \"#utility.yul\":19117:19119   */\n      0x40\n        /* \"#utility.yul\":19106:19115   */\n      dup3\n        /* \"#utility.yul\":19102:19120   */\n      add\n        /* \"#utility.yul\":19094:19120   */\n      swap1\n      pop\n        /* \"#utility.yul\":19130:19201   */\n      tag_500\n        /* \"#utility.yul\":19198:19199   */\n      0x00\n        /* \"#utility.yul\":19187:19196   */\n      dup4\n        /* \"#utility.yul\":19183:19200   */\n      add\n        /* \"#utility.yul\":19174:19180   */\n      dup6\n        /* \"#utility.yul\":19130:19201   */\n      tag_264\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":19211:19283   */\n      tag_501\n        /* \"#utility.yul\":19279:19281   */\n      0x20\n        /* \"#utility.yul\":19268:19277   */\n      dup4\n        /* \"#utility.yul\":19264:19282   */\n      add\n        /* \"#utility.yul\":19255:19261   */\n      dup5\n        /* \"#utility.yul\":19211:19283   */\n      tag_265\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":18958:19290   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19296:19628   */\n    tag_164:\n        /* \"#utility.yul\":19417:19421   */\n      0x00\n        /* \"#utility.yul\":19455:19457   */\n      0x40\n        /* \"#utility.yul\":19444:19453   */\n      dup3\n        /* \"#utility.yul\":19440:19458   */\n      add\n        /* \"#utility.yul\":19432:19458   */\n      swap1\n      pop\n        /* \"#utility.yul\":19468:19539   */\n      tag_503\n        /* \"#utility.yul\":19536:19537   */\n      0x00\n        /* \"#utility.yul\":19525:19534   */\n      dup4\n        /* \"#utility.yul\":19521:19538   */\n      add\n        /* \"#utility.yul\":19512:19518   */\n      dup6\n        /* \"#utility.yul\":19468:19539   */\n      tag_265\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":19549:19621   */\n      tag_504\n        /* \"#utility.yul\":19617:19619   */\n      0x20\n        /* \"#utility.yul\":19606:19615   */\n      dup4\n        /* \"#utility.yul\":19602:19620   */\n      add\n        /* \"#utility.yul\":19593:19599   */\n      dup5\n        /* \"#utility.yul\":19549:19621   */\n      tag_265\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":19296:19628   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19634:19811   */\n    tag_297:\n        /* \"#utility.yul\":19774:19803   */\n      0x496e76616c696420455243323020746f6b656e20616464726573730000000000\n        /* \"#utility.yul\":19770:19771   */\n      0x00\n        /* \"#utility.yul\":19762:19768   */\n      dup3\n        /* \"#utility.yul\":19758:19772   */\n      add\n        /* \"#utility.yul\":19751:19804   */\n      mstore\n        /* \"#utility.yul\":19634:19811   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19817:20183   */\n    tag_298:\n        /* \"#utility.yul\":19959:19962   */\n      0x00\n        /* \"#utility.yul\":19980:20047   */\n      tag_507\n        /* \"#utility.yul\":20044:20046   */\n      0x1b\n        /* \"#utility.yul\":20039:20042   */\n      dup4\n        /* \"#utility.yul\":19980:20047   */\n      tag_286\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":19973:20047   */\n      swap2\n      pop\n        /* \"#utility.yul\":20056:20149   */\n      tag_508\n        /* \"#utility.yul\":20145:20148   */\n      dup3\n        /* \"#utility.yul\":20056:20149   */\n      tag_297\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":20174:20176   */\n      0x20\n        /* \"#utility.yul\":20169:20172   */\n      dup3\n        /* \"#utility.yul\":20165:20177   */\n      add\n        /* \"#utility.yul\":20158:20177   */\n      swap1\n      pop\n        /* \"#utility.yul\":19817:20183   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20189:20608   */\n    tag_174:\n        /* \"#utility.yul\":20355:20359   */\n      0x00\n        /* \"#utility.yul\":20393:20395   */\n      0x20\n        /* \"#utility.yul\":20382:20391   */\n      dup3\n        /* \"#utility.yul\":20378:20396   */\n      add\n        /* \"#utility.yul\":20370:20396   */\n      swap1\n      pop\n        /* \"#utility.yul\":20442:20451   */\n      dup2\n        /* \"#utility.yul\":20436:20440   */\n      dup2\n        /* \"#utility.yul\":20432:20452   */\n      sub\n        /* \"#utility.yul\":20428:20429   */\n      0x00\n        /* \"#utility.yul\":20417:20426   */\n      dup4\n        /* \"#utility.yul\":20413:20430   */\n      add\n        /* \"#utility.yul\":20406:20453   */\n      mstore\n        /* \"#utility.yul\":20470:20601   */\n      tag_510\n        /* \"#utility.yul\":20596:20600   */\n      dup2\n        /* \"#utility.yul\":20470:20601   */\n      tag_298\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":20462:20601   */\n      swap1\n      pop\n        /* \"#utility.yul\":20189:20608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20614:20846   */\n    tag_299:\n        /* \"#utility.yul\":20754:20788   */\n      0x436f6e76657273696f6e206e6f7420616c6c6f77656420666f72207468697320\n        /* \"#utility.yul\":20750:20751   */\n      0x00\n        /* \"#utility.yul\":20742:20748   */\n      dup3\n        /* \"#utility.yul\":20738:20752   */\n      add\n        /* \"#utility.yul\":20731:20789   */\n      mstore\n        /* \"#utility.yul\":20823:20838   */\n      0x4552433131353520746f6b656e00000000000000000000000000000000000000\n        /* \"#utility.yul\":20818:20820   */\n      0x20\n        /* \"#utility.yul\":20810:20816   */\n      dup3\n        /* \"#utility.yul\":20806:20821   */\n      add\n        /* \"#utility.yul\":20799:20839   */\n      mstore\n        /* \"#utility.yul\":20614:20846   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20852:21218   */\n    tag_300:\n        /* \"#utility.yul\":20994:20997   */\n      0x00\n        /* \"#utility.yul\":21015:21082   */\n      tag_513\n        /* \"#utility.yul\":21079:21081   */\n      0x2d\n        /* \"#utility.yul\":21074:21077   */\n      dup4\n        /* \"#utility.yul\":21015:21082   */\n      tag_286\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":21008:21082   */\n      swap2\n      pop\n        /* \"#utility.yul\":21091:21184   */\n      tag_514\n        /* \"#utility.yul\":21180:21183   */\n      dup3\n        /* \"#utility.yul\":21091:21184   */\n      tag_299\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":21209:21211   */\n      0x40\n        /* \"#utility.yul\":21204:21207   */\n      dup3\n        /* \"#utility.yul\":21200:21212   */\n      add\n        /* \"#utility.yul\":21193:21212   */\n      swap1\n      pop\n        /* \"#utility.yul\":20852:21218   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21224:21643   */\n    tag_178:\n        /* \"#utility.yul\":21390:21394   */\n      0x00\n        /* \"#utility.yul\":21428:21430   */\n      0x20\n        /* \"#utility.yul\":21417:21426   */\n      dup3\n        /* \"#utility.yul\":21413:21431   */\n      add\n        /* \"#utility.yul\":21405:21431   */\n      swap1\n      pop\n        /* \"#utility.yul\":21477:21486   */\n      dup2\n        /* \"#utility.yul\":21471:21475   */\n      dup2\n        /* \"#utility.yul\":21467:21487   */\n      sub\n        /* \"#utility.yul\":21463:21464   */\n      0x00\n        /* \"#utility.yul\":21452:21461   */\n      dup4\n        /* \"#utility.yul\":21448:21465   */\n      add\n        /* \"#utility.yul\":21441:21488   */\n      mstore\n        /* \"#utility.yul\":21505:21636   */\n      tag_516\n        /* \"#utility.yul\":21631:21635   */\n      dup2\n        /* \"#utility.yul\":21505:21636   */\n      tag_300\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":21497:21636   */\n      swap1\n      pop\n        /* \"#utility.yul\":21224:21643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21649:21831   */\n    tag_301:\n        /* \"#utility.yul\":21789:21823   */\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n        /* \"#utility.yul\":21785:21786   */\n      0x00\n        /* \"#utility.yul\":21777:21783   */\n      dup3\n        /* \"#utility.yul\":21773:21787   */\n      add\n        /* \"#utility.yul\":21766:21824   */\n      mstore\n        /* \"#utility.yul\":21649:21831   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21837:22203   */\n    tag_302:\n        /* \"#utility.yul\":21979:21982   */\n      0x00\n        /* \"#utility.yul\":22000:22067   */\n      tag_519\n        /* \"#utility.yul\":22064:22066   */\n      0x20\n        /* \"#utility.yul\":22059:22062   */\n      dup4\n        /* \"#utility.yul\":22000:22067   */\n      tag_286\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":21993:22067   */\n      swap2\n      pop\n        /* \"#utility.yul\":22076:22169   */\n      tag_520\n        /* \"#utility.yul\":22165:22168   */\n      dup3\n        /* \"#utility.yul\":22076:22169   */\n      tag_301\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":22194:22196   */\n      0x20\n        /* \"#utility.yul\":22189:22192   */\n      dup3\n        /* \"#utility.yul\":22185:22197   */\n      add\n        /* \"#utility.yul\":22178:22197   */\n      swap1\n      pop\n        /* \"#utility.yul\":21837:22203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22209:22628   */\n    tag_181:\n        /* \"#utility.yul\":22375:22379   */\n      0x00\n        /* \"#utility.yul\":22413:22415   */\n      0x20\n        /* \"#utility.yul\":22402:22411   */\n      dup3\n        /* \"#utility.yul\":22398:22416   */\n      add\n        /* \"#utility.yul\":22390:22416   */\n      swap1\n      pop\n        /* \"#utility.yul\":22462:22471   */\n      dup2\n        /* \"#utility.yul\":22456:22460   */\n      dup2\n        /* \"#utility.yul\":22452:22472   */\n      sub\n        /* \"#utility.yul\":22448:22449   */\n      0x00\n        /* \"#utility.yul\":22437:22446   */\n      dup4\n        /* \"#utility.yul\":22433:22450   */\n      add\n        /* \"#utility.yul\":22426:22473   */\n      mstore\n        /* \"#utility.yul\":22490:22621   */\n      tag_522\n        /* \"#utility.yul\":22616:22620   */\n      dup2\n        /* \"#utility.yul\":22490:22621   */\n      tag_302\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":22482:22621   */\n      swap1\n      pop\n        /* \"#utility.yul\":22209:22628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22634:23076   */\n    tag_185:\n        /* \"#utility.yul\":22783:22787   */\n      0x00\n        /* \"#utility.yul\":22821:22823   */\n      0x60\n        /* \"#utility.yul\":22810:22819   */\n      dup3\n        /* \"#utility.yul\":22806:22824   */\n      add\n        /* \"#utility.yul\":22798:22824   */\n      swap1\n      pop\n        /* \"#utility.yul\":22834:22905   */\n      tag_524\n        /* \"#utility.yul\":22902:22903   */\n      0x00\n        /* \"#utility.yul\":22891:22900   */\n      dup4\n        /* \"#utility.yul\":22887:22904   */\n      add\n        /* \"#utility.yul\":22878:22884   */\n      dup7\n        /* \"#utility.yul\":22834:22905   */\n      tag_264\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":22915:22987   */\n      tag_525\n        /* \"#utility.yul\":22983:22985   */\n      0x20\n        /* \"#utility.yul\":22972:22981   */\n      dup4\n        /* \"#utility.yul\":22968:22986   */\n      add\n        /* \"#utility.yul\":22959:22965   */\n      dup6\n        /* \"#utility.yul\":22915:22987   */\n      tag_264\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":22997:23069   */\n      tag_526\n        /* \"#utility.yul\":23065:23067   */\n      0x40\n        /* \"#utility.yul\":23054:23063   */\n      dup4\n        /* \"#utility.yul\":23050:23068   */\n      add\n        /* \"#utility.yul\":23041:23047   */\n      dup5\n        /* \"#utility.yul\":22997:23069   */\n      tag_265\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":22634:23076   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23082:23198   */\n    tag_303:\n        /* \"#utility.yul\":23152:23173   */\n      tag_528\n        /* \"#utility.yul\":23167:23172   */\n      dup2\n        /* \"#utility.yul\":23152:23173   */\n      tag_255\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":23145:23150   */\n      dup2\n        /* \"#utility.yul\":23142:23174   */\n      eq\n        /* \"#utility.yul\":23132:23192   */\n      tag_529\n      jumpi\n        /* \"#utility.yul\":23188:23189   */\n      0x00\n        /* \"#utility.yul\":23185:23186   */\n      dup1\n        /* \"#utility.yul\":23178:23190   */\n      revert\n        /* \"#utility.yul\":23132:23192   */\n    tag_529:\n        /* \"#utility.yul\":23082:23198   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23204:23341   */\n    tag_304:\n        /* \"#utility.yul\":23258:23263   */\n      0x00\n        /* \"#utility.yul\":23289:23295   */\n      dup2\n        /* \"#utility.yul\":23283:23296   */\n      mload\n        /* \"#utility.yul\":23274:23296   */\n      swap1\n      pop\n        /* \"#utility.yul\":23305:23335   */\n      tag_531\n        /* \"#utility.yul\":23329:23334   */\n      dup2\n        /* \"#utility.yul\":23305:23335   */\n      tag_303\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":23204:23341   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23347:23692   */\n    tag_189:\n        /* \"#utility.yul\":23414:23420   */\n      0x00\n        /* \"#utility.yul\":23463:23465   */\n      0x20\n        /* \"#utility.yul\":23451:23460   */\n      dup3\n        /* \"#utility.yul\":23442:23449   */\n      dup5\n        /* \"#utility.yul\":23438:23461   */\n      sub\n        /* \"#utility.yul\":23434:23466   */\n      slt\n        /* \"#utility.yul\":23431:23550   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":23469:23548   */\n      tag_534\n      tag_250\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":23431:23550   */\n    tag_533:\n        /* \"#utility.yul\":23589:23590   */\n      0x00\n        /* \"#utility.yul\":23614:23675   */\n      tag_535\n        /* \"#utility.yul\":23667:23674   */\n      dup5\n        /* \"#utility.yul\":23658:23664   */\n      dup3\n        /* \"#utility.yul\":23647:23656   */\n      dup6\n        /* \"#utility.yul\":23643:23665   */\n      add\n        /* \"#utility.yul\":23614:23675   */\n      tag_304\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":23604:23675   */\n      swap2\n      pop\n        /* \"#utility.yul\":23560:23685   */\n      pop\n        /* \"#utility.yul\":23347:23692   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23698:23869   */\n    tag_305:\n        /* \"#utility.yul\":23838:23861   */\n      0x4552433230207472616e73666572206661696c65640000000000000000000000\n        /* \"#utility.yul\":23834:23835   */\n      0x00\n        /* \"#utility.yul\":23826:23832   */\n      dup3\n        /* \"#utility.yul\":23822:23836   */\n      add\n        /* \"#utility.yul\":23815:23862   */\n      mstore\n        /* \"#utility.yul\":23698:23869   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23875:24241   */\n    tag_306:\n        /* \"#utility.yul\":24017:24020   */\n      0x00\n        /* \"#utility.yul\":24038:24105   */\n      tag_538\n        /* \"#utility.yul\":24102:24104   */\n      0x15\n        /* \"#utility.yul\":24097:24100   */\n      dup4\n        /* \"#utility.yul\":24038:24105   */\n      tag_286\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":24031:24105   */\n      swap2\n      pop\n        /* \"#utility.yul\":24114:24207   */\n      tag_539\n        /* \"#utility.yul\":24203:24206   */\n      dup3\n        /* \"#utility.yul\":24114:24207   */\n      tag_305\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":24232:24234   */\n      0x20\n        /* \"#utility.yul\":24227:24230   */\n      dup3\n        /* \"#utility.yul\":24223:24235   */\n      add\n        /* \"#utility.yul\":24216:24235   */\n      swap1\n      pop\n        /* \"#utility.yul\":23875:24241   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24247:24666   */\n    tag_192:\n        /* \"#utility.yul\":24413:24417   */\n      0x00\n        /* \"#utility.yul\":24451:24453   */\n      0x20\n        /* \"#utility.yul\":24440:24449   */\n      dup3\n        /* \"#utility.yul\":24436:24454   */\n      add\n        /* \"#utility.yul\":24428:24454   */\n      swap1\n      pop\n        /* \"#utility.yul\":24500:24509   */\n      dup2\n        /* \"#utility.yul\":24494:24498   */\n      dup2\n        /* \"#utility.yul\":24490:24510   */\n      sub\n        /* \"#utility.yul\":24486:24487   */\n      0x00\n        /* \"#utility.yul\":24475:24484   */\n      dup4\n        /* \"#utility.yul\":24471:24488   */\n      add\n        /* \"#utility.yul\":24464:24511   */\n      mstore\n        /* \"#utility.yul\":24528:24659   */\n      tag_541\n        /* \"#utility.yul\":24654:24658   */\n      dup2\n        /* \"#utility.yul\":24528:24659   */\n      tag_306\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":24520:24659   */\n      swap1\n      pop\n        /* \"#utility.yul\":24247:24666   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24672:24894   */\n    tag_194:\n        /* \"#utility.yul\":24765:24769   */\n      0x00\n        /* \"#utility.yul\":24803:24805   */\n      0x20\n        /* \"#utility.yul\":24792:24801   */\n      dup3\n        /* \"#utility.yul\":24788:24806   */\n      add\n        /* \"#utility.yul\":24780:24806   */\n      swap1\n      pop\n        /* \"#utility.yul\":24816:24887   */\n      tag_543\n        /* \"#utility.yul\":24884:24885   */\n      0x00\n        /* \"#utility.yul\":24873:24882   */\n      dup4\n        /* \"#utility.yul\":24869:24886   */\n      add\n        /* \"#utility.yul\":24860:24866   */\n      dup5\n        /* \"#utility.yul\":24816:24887   */\n      tag_265\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":24672:24894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24900:25068   */\n    tag_307:\n        /* \"#utility.yul\":24983:24994   */\n      0x00\n        /* \"#utility.yul\":25017:25023   */\n      dup3\n        /* \"#utility.yul\":25012:25015   */\n      dup3\n        /* \"#utility.yul\":25005:25024   */\n      mstore\n        /* \"#utility.yul\":25057:25061   */\n      0x20\n        /* \"#utility.yul\":25052:25055   */\n      dup3\n        /* \"#utility.yul\":25048:25062   */\n      add\n        /* \"#utility.yul\":25033:25062   */\n      swap1\n      pop\n        /* \"#utility.yul\":24900:25068   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25074:25188   */\n    tag_308:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25194:25556   */\n    tag_309:\n        /* \"#utility.yul\":25335:25338   */\n      0x00\n        /* \"#utility.yul\":25356:25421   */\n      tag_547\n        /* \"#utility.yul\":25419:25420   */\n      0x00\n        /* \"#utility.yul\":25414:25417   */\n      dup4\n        /* \"#utility.yul\":25356:25421   */\n      tag_307\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":25349:25421   */\n      swap2\n      pop\n        /* \"#utility.yul\":25430:25523   */\n      tag_548\n        /* \"#utility.yul\":25519:25522   */\n      dup3\n        /* \"#utility.yul\":25430:25523   */\n      tag_308\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":25548:25549   */\n      0x00\n        /* \"#utility.yul\":25543:25546   */\n      dup3\n        /* \"#utility.yul\":25539:25550   */\n      add\n        /* \"#utility.yul\":25532:25550   */\n      swap1\n      pop\n        /* \"#utility.yul\":25194:25556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25562:26310   */\n    tag_199:\n        /* \"#utility.yul\":25811:25815   */\n      0x00\n        /* \"#utility.yul\":25849:25852   */\n      0x80\n        /* \"#utility.yul\":25838:25847   */\n      dup3\n        /* \"#utility.yul\":25834:25853   */\n      add\n        /* \"#utility.yul\":25826:25853   */\n      swap1\n      pop\n        /* \"#utility.yul\":25863:25934   */\n      tag_550\n        /* \"#utility.yul\":25931:25932   */\n      0x00\n        /* \"#utility.yul\":25920:25929   */\n      dup4\n        /* \"#utility.yul\":25916:25933   */\n      add\n        /* \"#utility.yul\":25907:25913   */\n      dup7\n        /* \"#utility.yul\":25863:25934   */\n      tag_264\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":25944:26016   */\n      tag_551\n        /* \"#utility.yul\":26012:26014   */\n      0x20\n        /* \"#utility.yul\":26001:26010   */\n      dup4\n        /* \"#utility.yul\":25997:26015   */\n      add\n        /* \"#utility.yul\":25988:25994   */\n      dup6\n        /* \"#utility.yul\":25944:26016   */\n      tag_265\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":26026:26098   */\n      tag_552\n        /* \"#utility.yul\":26094:26096   */\n      0x40\n        /* \"#utility.yul\":26083:26092   */\n      dup4\n        /* \"#utility.yul\":26079:26097   */\n      add\n        /* \"#utility.yul\":26070:26076   */\n      dup5\n        /* \"#utility.yul\":26026:26098   */\n      tag_265\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":26145:26154   */\n      dup2\n        /* \"#utility.yul\":26139:26143   */\n      dup2\n        /* \"#utility.yul\":26135:26155   */\n      sub\n        /* \"#utility.yul\":26130:26132   */\n      0x60\n        /* \"#utility.yul\":26119:26128   */\n      dup4\n        /* \"#utility.yul\":26115:26133   */\n      add\n        /* \"#utility.yul\":26108:26156   */\n      mstore\n        /* \"#utility.yul\":26173:26303   */\n      tag_553\n        /* \"#utility.yul\":26298:26302   */\n      dup2\n        /* \"#utility.yul\":26173:26303   */\n      tag_309\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":26165:26303   */\n      swap1\n      pop\n        /* \"#utility.yul\":25562:26310   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26316:26543   */\n    tag_310:\n        /* \"#utility.yul\":26456:26490   */\n      0x4552433131353520746f6b656e206e6f7420616c6c6f77656420666f7220636f\n        /* \"#utility.yul\":26452:26453   */\n      0x00\n        /* \"#utility.yul\":26444:26450   */\n      dup3\n        /* \"#utility.yul\":26440:26454   */\n      add\n        /* \"#utility.yul\":26433:26491   */\n      mstore\n        /* \"#utility.yul\":26525:26535   */\n      0x6e76657273696f6e000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":26520:26522   */\n      0x20\n        /* \"#utility.yul\":26512:26518   */\n      dup3\n        /* \"#utility.yul\":26508:26523   */\n      add\n        /* \"#utility.yul\":26501:26536   */\n      mstore\n        /* \"#utility.yul\":26316:26543   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26549:26915   */\n    tag_311:\n        /* \"#utility.yul\":26691:26694   */\n      0x00\n        /* \"#utility.yul\":26712:26779   */\n      tag_556\n        /* \"#utility.yul\":26776:26778   */\n      0x28\n        /* \"#utility.yul\":26771:26774   */\n      dup4\n        /* \"#utility.yul\":26712:26779   */\n      tag_286\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":26705:26779   */\n      swap2\n      pop\n        /* \"#utility.yul\":26788:26881   */\n      tag_557\n        /* \"#utility.yul\":26877:26880   */\n      dup3\n        /* \"#utility.yul\":26788:26881   */\n      tag_310\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":26906:26908   */\n      0x40\n        /* \"#utility.yul\":26901:26904   */\n      dup3\n        /* \"#utility.yul\":26897:26909   */\n      add\n        /* \"#utility.yul\":26890:26909   */\n      swap1\n      pop\n        /* \"#utility.yul\":26549:26915   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26921:27340   */\n    tag_214:\n        /* \"#utility.yul\":27087:27091   */\n      0x00\n        /* \"#utility.yul\":27125:27127   */\n      0x20\n        /* \"#utility.yul\":27114:27123   */\n      dup3\n        /* \"#utility.yul\":27110:27128   */\n      add\n        /* \"#utility.yul\":27102:27128   */\n      swap1\n      pop\n        /* \"#utility.yul\":27174:27183   */\n      dup2\n        /* \"#utility.yul\":27168:27172   */\n      dup2\n        /* \"#utility.yul\":27164:27184   */\n      sub\n        /* \"#utility.yul\":27160:27161   */\n      0x00\n        /* \"#utility.yul\":27149:27158   */\n      dup4\n        /* \"#utility.yul\":27145:27162   */\n      add\n        /* \"#utility.yul\":27138:27185   */\n      mstore\n        /* \"#utility.yul\":27202:27333   */\n      tag_559\n        /* \"#utility.yul\":27328:27332   */\n      dup2\n        /* \"#utility.yul\":27202:27333   */\n      tag_311\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":27194:27333   */\n      swap1\n      pop\n        /* \"#utility.yul\":26921:27340   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27346:27519   */\n    tag_312:\n        /* \"#utility.yul\":27486:27511   */\n      0x455243323020746f6b656e206e6f7420646566696e6564000000000000000000\n        /* \"#utility.yul\":27482:27483   */\n      0x00\n        /* \"#utility.yul\":27474:27480   */\n      dup3\n        /* \"#utility.yul\":27470:27484   */\n      add\n        /* \"#utility.yul\":27463:27512   */\n      mstore\n        /* \"#utility.yul\":27346:27519   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27525:27891   */\n    tag_313:\n        /* \"#utility.yul\":27667:27670   */\n      0x00\n        /* \"#utility.yul\":27688:27755   */\n      tag_562\n        /* \"#utility.yul\":27752:27754   */\n      0x17\n        /* \"#utility.yul\":27747:27750   */\n      dup4\n        /* \"#utility.yul\":27688:27755   */\n      tag_286\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":27681:27755   */\n      swap2\n      pop\n        /* \"#utility.yul\":27764:27857   */\n      tag_563\n        /* \"#utility.yul\":27853:27856   */\n      dup3\n        /* \"#utility.yul\":27764:27857   */\n      tag_312\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":27882:27884   */\n      0x20\n        /* \"#utility.yul\":27877:27880   */\n      dup3\n        /* \"#utility.yul\":27873:27885   */\n      add\n        /* \"#utility.yul\":27866:27885   */\n      swap1\n      pop\n        /* \"#utility.yul\":27525:27891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27897:28316   */\n    tag_239:\n        /* \"#utility.yul\":28063:28067   */\n      0x00\n        /* \"#utility.yul\":28101:28103   */\n      0x20\n        /* \"#utility.yul\":28090:28099   */\n      dup3\n        /* \"#utility.yul\":28086:28104   */\n      add\n        /* \"#utility.yul\":28078:28104   */\n      swap1\n      pop\n        /* \"#utility.yul\":28150:28159   */\n      dup2\n        /* \"#utility.yul\":28144:28148   */\n      dup2\n        /* \"#utility.yul\":28140:28160   */\n      sub\n        /* \"#utility.yul\":28136:28137   */\n      0x00\n        /* \"#utility.yul\":28125:28134   */\n      dup4\n        /* \"#utility.yul\":28121:28138   */\n      add\n        /* \"#utility.yul\":28114:28161   */\n      mstore\n        /* \"#utility.yul\":28178:28309   */\n      tag_565\n        /* \"#utility.yul\":28304:28308   */\n      dup2\n        /* \"#utility.yul\":28178:28309   */\n      tag_313\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":28170:28309   */\n      swap1\n      pop\n        /* \"#utility.yul\":27897:28316   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28322:28764   */\n    tag_247:\n        /* \"#utility.yul\":28471:28475   */\n      0x00\n        /* \"#utility.yul\":28509:28511   */\n      0x60\n        /* \"#utility.yul\":28498:28507   */\n      dup3\n        /* \"#utility.yul\":28494:28512   */\n      add\n        /* \"#utility.yul\":28486:28512   */\n      swap1\n      pop\n        /* \"#utility.yul\":28522:28593   */\n      tag_567\n        /* \"#utility.yul\":28590:28591   */\n      0x00\n        /* \"#utility.yul\":28579:28588   */\n      dup4\n        /* \"#utility.yul\":28575:28592   */\n      add\n        /* \"#utility.yul\":28566:28572   */\n      dup7\n        /* \"#utility.yul\":28522:28593   */\n      tag_265\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":28603:28675   */\n      tag_568\n        /* \"#utility.yul\":28671:28673   */\n      0x20\n        /* \"#utility.yul\":28660:28669   */\n      dup4\n        /* \"#utility.yul\":28656:28674   */\n      add\n        /* \"#utility.yul\":28647:28653   */\n      dup6\n        /* \"#utility.yul\":28603:28675   */\n      tag_265\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":28685:28757   */\n      tag_569\n        /* \"#utility.yul\":28753:28755   */\n      0x40\n        /* \"#utility.yul\":28742:28751   */\n      dup4\n        /* \"#utility.yul\":28738:28756   */\n      add\n        /* \"#utility.yul\":28729:28735   */\n      dup5\n        /* \"#utility.yul\":28685:28757   */\n      tag_265\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":28322:28764   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200b65ff57e9097ea226c6a0cec728df58cd48db633b020281aa076e66d9250d2664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_522": {
									"entryPoint": null,
									"id": 522,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 150,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:590:7",
										"nodeType": "YulBlock",
										"src": "0:590:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:7",
													"nodeType": "YulBlock",
													"src": "52:81:7",
													"statements": [
														{
															"nativeSrc": "62:65:7",
															"nodeType": "YulAssignment",
															"src": "62:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:7",
																		"nodeType": "YulLiteral",
																		"src": "84:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:7"
																},
																"nativeSrc": "73:54:7",
																"nodeType": "YulFunctionCall",
																"src": "73:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:7",
														"nodeType": "YulTypedName",
														"src": "34:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:7",
														"nodeType": "YulTypedName",
														"src": "44:7:7",
														"type": ""
													}
												],
												"src": "7:126:7"
											},
											{
												"body": {
													"nativeSrc": "184:51:7",
													"nodeType": "YulBlock",
													"src": "184:51:7",
													"statements": [
														{
															"nativeSrc": "194:35:7",
															"nodeType": "YulAssignment",
															"src": "194:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:7"
																},
																"nativeSrc": "205:24:7",
																"nodeType": "YulFunctionCall",
																"src": "205:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:7",
														"nodeType": "YulTypedName",
														"src": "166:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:7",
														"nodeType": "YulTypedName",
														"src": "176:7:7",
														"type": ""
													}
												],
												"src": "139:96:7"
											},
											{
												"body": {
													"nativeSrc": "306:53:7",
													"nodeType": "YulBlock",
													"src": "306:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:7"
																		},
																		"nativeSrc": "328:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:7"
																},
																"nativeSrc": "316:37:7",
																"nodeType": "YulFunctionCall",
																"src": "316:37:7"
															},
															"nativeSrc": "316:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:7",
														"nodeType": "YulTypedName",
														"src": "294:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:7",
														"nodeType": "YulTypedName",
														"src": "301:3:7",
														"type": ""
													}
												],
												"src": "241:118:7"
											},
											{
												"body": {
													"nativeSrc": "463:124:7",
													"nodeType": "YulBlock",
													"src": "463:124:7",
													"statements": [
														{
															"nativeSrc": "473:26:7",
															"nodeType": "YulAssignment",
															"src": "473:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:7",
																		"nodeType": "YulLiteral",
																		"src": "496:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:7"
																},
																"nativeSrc": "481:18:7",
																"nodeType": "YulFunctionCall",
																"src": "481:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:7",
																				"nodeType": "YulLiteral",
																				"src": "577:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:7"
																		},
																		"nativeSrc": "562:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:7"
																},
																"nativeSrc": "509:71:7",
																"nodeType": "YulFunctionCall",
																"src": "509:71:7"
															},
															"nativeSrc": "509:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:7",
														"nodeType": "YulTypedName",
														"src": "435:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:7",
														"nodeType": "YulTypedName",
														"src": "447:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:7",
														"nodeType": "YulTypedName",
														"src": "458:4:7",
														"type": ""
													}
												],
												"src": "365:222:7"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610081575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100789190610196565b60405180910390fd5b6100908161009660201b60201c565b506101af565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61018082610157565b9050919050565b61019081610176565b82525050565b5f6020820190506101a95f830184610187565b92915050565b6129b2806101bc5f395ff3fe608060405234801561000f575f80fd5b506004361061011f575f3560e01c80639c3c4345116100ab578063df84aae91161006f578063df84aae914610334578063ea6a5b0e14610350578063f23a6e611461036c578063f2fde38b1461039c578063fce3fb2f146103b85761011f565b80639c3c43451461027c578063b1fd0a4214610298578063bc197c81146102cc578063c953e56e146102fc578063de562487146103185761011f565b806358be702f116100f257806358be702f146101ea578063652ca87e1461021a578063715018a6146102365780638a13eea7146102405780638da5cb5b1461025e5761011f565b806301ffc9a7146101235780630fcd1e841461015357806315614d5d14610183578063453a1e75146101b7575b5f80fd5b61013d60048036038101906101389190611bfa565b6103eb565b60405161014a9190611c3f565b60405180910390f35b61016d60048036038101906101689190611ce5565b610464565b60405161017a9190611c3f565b60405180910390f35b61019d60048036038101906101989190611d23565b61048e565b6040516101ae959493929190611d6c565b60405180910390f35b6101d160048036038101906101cc9190611d23565b61050d565b6040516101e19493929190611dbd565b60405180910390f35b61020460048036038101906101ff9190611ce5565b610548565b6040516102119190611c3f565b60405180910390f35b610234600480360381019061022f9190611ce5565b610572565b005b61023e6106b7565b005b6102486106ca565b6040516102559190611e5b565b60405180910390f35b6102666106ef565b6040516102739190611e74565b60405180910390f35b61029660048036038101906102919190611ce5565b610716565b005b6102b260048036038101906102ad9190611ce5565b61085b565b6040516102c3959493929190611d6c565b60405180910390f35b6102e660048036038101906102e1919061208d565b6108e5565b6040516102f39190612167565b60405180910390f35b61031660048036038101906103119190611ce5565b610c44565b005b610332600480360381019061032d9190612180565b610cf7565b005b61034e600480360381019061034991906121ab565b610e53565b005b61036a60048036038101906103659190611ce5565b611434565b005b610386600480360381019061038191906121fb565b6114e7565b6040516103939190612167565b60405180910390f35b6103b660048036038101906103b19190612180565b61169b565b005b6103d260048036038101906103cd9190611ce5565b61171f565b6040516103e29493929190611dbd565b60405180910390f35b5f7f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045d575061045c82611765565b5b9050919050565b6003602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b6006818154811061049d575f80fd5b905f5260205f2090600502015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154905085565b6005818154811061051c575f80fd5b905f5260205f2090600402015f91509050805f0154908060010154908060020154908060030154905084565b6002602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b61057a6117ce565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156105cc57505f8273ffffffffffffffffffffffffffffffffffffffff163b115b61060b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610602906122e8565b60405180910390fd5b600160035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f6101000a81548160ff021916908315150217905550808273ffffffffffffffffffffffffffffffffffffffff167f7a7a4e4c606c134c123ed1f1b82ad01ac98f1262f47e4768a5f0f588da717e8f60405160405180910390a35050565b6106bf6117ce565b6106c85f611855565b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61071e6117ce565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415801561077057505f8273ffffffffffffffffffffffffffffffffffffffff163b115b6107af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a6906122e8565b60405180910390fd5b600160025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f6101000a81548160ff021916908315150217905550808273ffffffffffffffffffffffffffffffffffffffff167f25a602cd77d0dcd2d9a9271c81530ca6b2befdc1b20ff547cdb34bd1093804b360405160405180910390a35050565b6007602052815f5260405f208181548110610874575f80fd5b905f5260205f2090600502015f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154905085565b5f8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614610954576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094b90612376565b60405180910390fd5b8251845114610998576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098f906123de565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610a27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1e90612446565b60405180910390fd5b5f5b8451811015610c305760025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f868381518110610a8357610a82612464565b5b602002602001015181526020019081526020015f205f9054906101000a900460ff16610ae4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adb90612501565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1987868481518110610b3557610b34612464565b5b60200260200101516040518363ffffffff1660e01b8152600401610b5a92919061251f565b5f604051808303815f87803b158015610b71575f80fd5b505af1158015610b83573d5f803e3d5ffd5b50505050848181518110610b9a57610b99612464565b5b60200260200101513373ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f40ba10935627ab450dd36afe32f52afa35f94d71a0c577e5b5b655d05ff6d0ef878581518110610c0457610c03612464565b5b602002602001015142604051610c1b929190612546565b60405180910390a48080600101915050610a29565b5063bc197c8160e01b905095945050505050565b610c4c6117ce565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f6101000a81548160ff021916908315150217905550808273ffffffffffffffffffffffffffffffffffffffff167f7cdf80461ab5065b7b1c6ae92ce85d5d3fd752930ff8c76a2c5f0288648e5b2360405160405180910390a35050565b610cff6117ce565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610d5157505f8173ffffffffffffffffffffffffffffffffffffffff163b115b610d90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d87906125b7565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f3225966cbaae2904ba12a4821319a2efec8fe5313e9e3376037823b52ab32cf160405160405180910390a35050565b60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f9054906101000a900460ff16610eeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee290612645565b60405180910390fd5b5f8111610f2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f24906126ad565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610fbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb390612446565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161101b939291906126cb565b6020604051808303815f875af1158015611037573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061105b919061272a565b90508061109d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110949061279f565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68836040518263ffffffff1660e01b81526004016110f791906127bd565b5f604051808303815f87803b15801561110e575f80fd5b505af1158015611120573d5f803e3d5ffd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663731133e93385856040518463ffffffff1660e01b815260040161116193929190612809565b5f604051808303815f87803b158015611178575f80fd5b505af115801561118a573d5f803e3d5ffd5b505050505f6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152602001428152509050600681908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040155505060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030155608082015181600401555050838573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1ca57d76d7b91ecc6a90677f1b8eb7d995f934eda6364134e6021dbba757241e8642604051611425929190612546565b60405180910390a45050505050565b61143c6117ce565b5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f6101000a81548160ff021916908315150217905550808273ffffffffffffffffffffffffffffffffffffffff167fdf3a4de361f566c7b82e2670c9f25deb777b8a9c5c03e949b07f8932f7cbed3e60405160405180910390a35050565b5f8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154d90612376565b60405180910390fd5b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8581526020019081526020015f205f9054906101000a900460ff166115ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e5906128c1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361167d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167490612446565b60405180910390fd5b611688858585611916565b63f23a6e6160e01b905095945050505050565b6116a36117ce565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611713575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161170a9190611e74565b60405180910390fd5b61171c81611855565b50565b6004602052815f5260405f208181548110611738575f80fd5b905f5260205f2090600402015f9150915050805f0154908060010154908060020154908060030154905084565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6117d6611b8d565b73ffffffffffffffffffffffffffffffffffffffff166117f46106ef565b73ffffffffffffffffffffffffffffffffffffffff161461185357611817611b8d565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161184a9190611e74565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8190505f73ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036119a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a090612929565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1985836040518363ffffffff1660e01b8152600401611a0592919061251f565b5f604051808303815f87803b158015611a1c575f80fd5b505af1158015611a2e573d5f803e3d5ffd5b505050505f6040518060800160405280858152602001848152602001838152602001428152509050600581908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f0155602082015181600101556040820151816002015560608201518160030155505060045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f01556020820151816001015560408201518160020155606082015181600301555050838573ffffffffffffffffffffffffffffffffffffffff167f8207f4cc66476fc751f9fa47f50e7bdf31b03fad34f997e73ef4a8c554992647858542604051611b7e93929190612947565b60405180910390a35050505050565b5f33905090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611bd981611ba5565b8114611be3575f80fd5b50565b5f81359050611bf481611bd0565b92915050565b5f60208284031215611c0f57611c0e611b9d565b5b5f611c1c84828501611be6565b91505092915050565b5f8115159050919050565b611c3981611c25565b82525050565b5f602082019050611c525f830184611c30565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c8182611c58565b9050919050565b611c9181611c77565b8114611c9b575f80fd5b50565b5f81359050611cac81611c88565b92915050565b5f819050919050565b611cc481611cb2565b8114611cce575f80fd5b50565b5f81359050611cdf81611cbb565b92915050565b5f8060408385031215611cfb57611cfa611b9d565b5b5f611d0885828601611c9e565b9250506020611d1985828601611cd1565b9150509250929050565b5f60208284031215611d3857611d37611b9d565b5b5f611d4584828501611cd1565b91505092915050565b611d5781611c77565b82525050565b611d6681611cb2565b82525050565b5f60a082019050611d7f5f830188611d4e565b611d8c6020830187611d4e565b611d996040830186611d5d565b611da66060830185611d5d565b611db36080830184611d5d565b9695505050505050565b5f608082019050611dd05f830187611d5d565b611ddd6020830186611d5d565b611dea6040830185611d5d565b611df76060830184611d5d565b95945050505050565b5f819050919050565b5f611e23611e1e611e1984611c58565b611e00565b611c58565b9050919050565b5f611e3482611e09565b9050919050565b5f611e4582611e2a565b9050919050565b611e5581611e3b565b82525050565b5f602082019050611e6e5f830184611e4c565b92915050565b5f602082019050611e875f830184611d4e565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611ed782611e91565b810181811067ffffffffffffffff82111715611ef657611ef5611ea1565b5b80604052505050565b5f611f08611b94565b9050611f148282611ece565b919050565b5f67ffffffffffffffff821115611f3357611f32611ea1565b5b602082029050602081019050919050565b5f80fd5b5f611f5a611f5584611f19565b611eff565b90508083825260208201905060208402830185811115611f7d57611f7c611f44565b5b835b81811015611fa65780611f928882611cd1565b845260208401935050602081019050611f7f565b5050509392505050565b5f82601f830112611fc457611fc3611e8d565b5b8135611fd4848260208601611f48565b91505092915050565b5f80fd5b5f67ffffffffffffffff821115611ffb57611ffa611ea1565b5b61200482611e91565b9050602081019050919050565b828183375f83830152505050565b5f61203161202c84611fe1565b611eff565b90508281526020810184848401111561204d5761204c611fdd565b5b612058848285612011565b509392505050565b5f82601f83011261207457612073611e8d565b5b813561208484826020860161201f565b91505092915050565b5f805f805f60a086880312156120a6576120a5611b9d565b5b5f6120b388828901611c9e565b95505060206120c488828901611c9e565b945050604086013567ffffffffffffffff8111156120e5576120e4611ba1565b5b6120f188828901611fb0565b935050606086013567ffffffffffffffff81111561211257612111611ba1565b5b61211e88828901611fb0565b925050608086013567ffffffffffffffff81111561213f5761213e611ba1565b5b61214b88828901612060565b9150509295509295909350565b61216181611ba5565b82525050565b5f60208201905061217a5f830184612158565b92915050565b5f6020828403121561219557612194611b9d565b5b5f6121a284828501611c9e565b91505092915050565b5f805f606084860312156121c2576121c1611b9d565b5b5f6121cf86828701611c9e565b93505060206121e086828701611cd1565b92505060406121f186828701611cd1565b9150509250925092565b5f805f805f60a0868803121561221457612213611b9d565b5b5f61222188828901611c9e565b955050602061223288828901611c9e565b945050604061224388828901611cd1565b935050606061225488828901611cd1565b925050608086013567ffffffffffffffff81111561227557612274611ba1565b5b61228188828901612060565b9150509295509295909350565b5f82825260208201905092915050565b7f496e76616c6964204552433131353520616464726573730000000000000000005f82015250565b5f6122d260178361228e565b91506122dd8261229e565b602082019050919050565b5f6020820190508181035f8301526122ff816122c6565b9050919050565b7f4f6e6c792074686520746f6b656e206f776e65722063616e20747269676765725f8201527f20636f6e76657273696f6e000000000000000000000000000000000000000000602082015250565b5f612360602b8361228e565b915061236b82612306565b604082019050919050565b5f6020820190508181035f83015261238d81612354565b9050919050565b7f49447320616e642076616c756573206c656e677468206d69736d6174636800005f82015250565b5f6123c8601e8361228e565b91506123d382612394565b602082019050919050565b5f6020820190508181035f8301526123f5816123bc565b9050919050565b7f455243323020746f6b656e206e6f7420736574000000000000000000000000005f82015250565b5f61243060138361228e565b915061243b826123fc565b602082019050919050565b5f6020820190508181035f83015261245d81612424565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4f6e65206f72206d6f7265204552433131353520746f6b656e73206e6f7420615f8201527f6c6c6f77656420666f7220636f6e76657273696f6e0000000000000000000000602082015250565b5f6124eb60358361228e565b91506124f682612491565b604082019050919050565b5f6020820190508181035f830152612518816124df565b9050919050565b5f6040820190506125325f830185611d4e565b61253f6020830184611d5d565b9392505050565b5f6040820190506125595f830185611d5d565b6125666020830184611d5d565b9392505050565b7f496e76616c696420455243323020746f6b656e206164647265737300000000005f82015250565b5f6125a1601b8361228e565b91506125ac8261256d565b602082019050919050565b5f6020820190508181035f8301526125ce81612595565b9050919050565b7f436f6e76657273696f6e206e6f7420616c6c6f77656420666f722074686973205f8201527f4552433131353520746f6b656e00000000000000000000000000000000000000602082015250565b5f61262f602d8361228e565b915061263a826125d5565b604082019050919050565b5f6020820190508181035f83015261265c81612623565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f61269760208361228e565b91506126a282612663565b602082019050919050565b5f6020820190508181035f8301526126c48161268b565b9050919050565b5f6060820190506126de5f830186611d4e565b6126eb6020830185611d4e565b6126f86040830184611d5d565b949350505050565b61270981611c25565b8114612713575f80fd5b50565b5f8151905061272481612700565b92915050565b5f6020828403121561273f5761273e611b9d565b5b5f61274c84828501612716565b91505092915050565b7f4552433230207472616e73666572206661696c656400000000000000000000005f82015250565b5f61278960158361228e565b915061279482612755565b602082019050919050565b5f6020820190508181035f8301526127b68161277d565b9050919050565b5f6020820190506127d05f830184611d5d565b92915050565b5f82825260208201905092915050565b50565b5f6127f45f836127d6565b91506127ff826127e6565b5f82019050919050565b5f60808201905061281c5f830186611d4e565b6128296020830185611d5d565b6128366040830184611d5d565b8181036060830152612847816127e9565b9050949350505050565b7f4552433131353520746f6b656e206e6f7420616c6c6f77656420666f7220636f5f8201527f6e76657273696f6e000000000000000000000000000000000000000000000000602082015250565b5f6128ab60288361228e565b91506128b682612851565b604082019050919050565b5f6020820190508181035f8301526128d88161289f565b9050919050565b7f455243323020746f6b656e206e6f7420646566696e65640000000000000000005f82015250565b5f61291360178361228e565b915061291e826128df565b602082019050919050565b5f6020820190508181035f83015261294081612907565b9050919050565b5f60608201905061295a5f830186611d5d565b6129676020830185611d5d565b6129746040830184611d5d565b94935050505056fea26469706673582212200b65ff57e9097ea226c6a0cec728df58cd48db633b020281aa076e66d9250d2664736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x196 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90 DUP2 PUSH2 0x96 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x1AF JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x180 DUP3 PUSH2 0x157 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x190 DUP2 PUSH2 0x176 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A9 PUSH0 DUP4 ADD DUP5 PUSH2 0x187 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x29B2 DUP1 PUSH2 0x1BC PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C3C4345 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDF84AAE9 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDF84AAE9 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xEA6A5B0E EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0xFCE3FB2F EQ PUSH2 0x3B8 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x9C3C4345 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xB1FD0A42 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xC953E56E EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xDE562487 EQ PUSH2 0x318 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x58BE702F GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x58BE702F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x652CA87E EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x8A13EEA7 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25E JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xFCD1E84 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x15614D5D EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x453A1E75 EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1D23 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1D23 JUMP JUMPDEST PUSH2 0x50D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23E PUSH2 0x6B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x248 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1E74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x208D JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x2167 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x2180 JUMP JUMPDEST PUSH2 0xCF7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x1434 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x21FB JUMP JUMPDEST PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x2167 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x2180 JUMP JUMPDEST PUSH2 0x169B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x171F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45D JUMPI POP PUSH2 0x45C DUP3 PUSH2 0x1765 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x49D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x51C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x57A PUSH2 0x17CE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x5CC JUMPI POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT JUMPDEST PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP1 PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7A7A4E4C606C134C123ED1F1B82AD01AC98F1262F47E4768A5F0F588DA717E8F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6BF PUSH2 0x17CE JUMP JUMPDEST PUSH2 0x6C8 PUSH0 PUSH2 0x1855 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x71E PUSH2 0x17CE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x770 JUMPI POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT JUMPDEST PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A6 SWAP1 PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x25A602CD77D0DCD2D9A9271C81530CA6B2BEFDC1B20FF547CDB34BD1093804B3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x874 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94B SWAP1 PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x998 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98F SWAP1 PUSH2 0x23DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1E SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xC30 JUMPI PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA83 JUMPI PUSH2 0xA82 PUSH2 0x2464 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADB SWAP1 PUSH2 0x2501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP8 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xB35 JUMPI PUSH2 0xB34 PUSH2 0x2464 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5A SWAP3 SWAP2 SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB71 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB83 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0x2464 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x40BA10935627AB450DD36AFE32F52AFA35F94D71A0C577E5B5B655D05FF6D0EF DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xC04 JUMPI PUSH2 0xC03 PUSH2 0x2464 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xC1B SWAP3 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA29 JUMP JUMPDEST POP PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC4C PUSH2 0x17CE JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7CDF80461AB5065B7B1C6AE92CE85D5D3FD752930FF8C76A2C5F0288648E5B23 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCFF PUSH2 0x17CE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xD51 JUMPI POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT JUMPDEST PUSH2 0xD90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD87 SWAP1 PUSH2 0x25B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3225966CBAAE2904BA12A4821319A2EFEC8FE5313E9E3376037823B52AB32CF1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE2 SWAP1 PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF24 SWAP1 PUSH2 0x26AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB3 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1037 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105B SWAP2 SWAP1 PUSH2 0x272A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x109D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1094 SWAP1 PUSH2 0x279F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F7 SWAP2 SWAP1 PUSH2 0x27BD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x110E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1120 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x731133E9 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1161 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2809 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1178 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x118A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP PUSH1 0x6 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1CA57D76D7B91ECC6A90677F1B8EB7D995F934EDA6364134E6021DBBA757241E DUP7 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1425 SWAP3 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x143C PUSH2 0x17CE JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDF3A4DE361F566C7B82E2670C9F25DEB777B8A9C5C03E949B07F8932F7CBED3E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154D SWAP1 PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E5 SWAP1 PUSH2 0x28C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x167D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1674 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1688 DUP6 DUP6 DUP6 PUSH2 0x1916 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16A3 PUSH2 0x17CE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1713 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170A SWAP2 SWAP1 PUSH2 0x1E74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x171C DUP2 PUSH2 0x1855 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1738 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17D6 PUSH2 0x1B8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17F4 PUSH2 0x6EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1853 JUMPI PUSH2 0x1817 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184A SWAP2 SWAP1 PUSH2 0x1E74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A0 SWAP1 PUSH2 0x2929 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A05 SWAP3 SWAP2 SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A2E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP PUSH1 0x5 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8207F4CC66476FC751F9FA47F50E7BDF31B03FAD34F997E73EF4A8C554992647 DUP6 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1B7E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD9 DUP2 PUSH2 0x1BA5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BF4 DUP2 PUSH2 0x1BD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C0F JUMPI PUSH2 0x1C0E PUSH2 0x1B9D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C1C DUP5 DUP3 DUP6 ADD PUSH2 0x1BE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C39 DUP2 PUSH2 0x1C25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C52 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C81 DUP3 PUSH2 0x1C58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C91 DUP2 PUSH2 0x1C77 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C9B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CAC DUP2 PUSH2 0x1C88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CC4 DUP2 PUSH2 0x1CB2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CCE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CDF DUP2 PUSH2 0x1CBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CFB JUMPI PUSH2 0x1CFA PUSH2 0x1B9D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D08 DUP6 DUP3 DUP7 ADD PUSH2 0x1C9E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D19 DUP6 DUP3 DUP7 ADD PUSH2 0x1CD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D38 JUMPI PUSH2 0x1D37 PUSH2 0x1B9D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D45 DUP5 DUP3 DUP6 ADD PUSH2 0x1CD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D57 DUP2 PUSH2 0x1C77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D66 DUP2 PUSH2 0x1CB2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D7F PUSH0 DUP4 ADD DUP9 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x1D8C PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x1D99 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x1DA6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x1DB3 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1DD0 PUSH0 DUP4 ADD DUP8 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x1DDD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x1DEA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x1DF7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E23 PUSH2 0x1E1E PUSH2 0x1E19 DUP5 PUSH2 0x1C58 JUMP JUMPDEST PUSH2 0x1E00 JUMP JUMPDEST PUSH2 0x1C58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E34 DUP3 PUSH2 0x1E09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E45 DUP3 PUSH2 0x1E2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E55 DUP2 PUSH2 0x1E3B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6E PUSH0 DUP4 ADD DUP5 PUSH2 0x1E4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E87 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1ED7 DUP3 PUSH2 0x1E91 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1EF6 JUMPI PUSH2 0x1EF5 PUSH2 0x1EA1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F08 PUSH2 0x1B94 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F14 DUP3 DUP3 PUSH2 0x1ECE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F33 JUMPI PUSH2 0x1F32 PUSH2 0x1EA1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1F5A PUSH2 0x1F55 DUP5 PUSH2 0x1F19 JUMP JUMPDEST PUSH2 0x1EFF JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1F7D JUMPI PUSH2 0x1F7C PUSH2 0x1F44 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FA6 JUMPI DUP1 PUSH2 0x1F92 DUP9 DUP3 PUSH2 0x1CD1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F7F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FC4 JUMPI PUSH2 0x1FC3 PUSH2 0x1E8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1FD4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FFB JUMPI PUSH2 0x1FFA PUSH2 0x1EA1 JUMP JUMPDEST JUMPDEST PUSH2 0x2004 DUP3 PUSH2 0x1E91 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2031 PUSH2 0x202C DUP5 PUSH2 0x1FE1 JUMP JUMPDEST PUSH2 0x1EFF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x204D JUMPI PUSH2 0x204C PUSH2 0x1FDD JUMP JUMPDEST JUMPDEST PUSH2 0x2058 DUP5 DUP3 DUP6 PUSH2 0x2011 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2074 JUMPI PUSH2 0x2073 PUSH2 0x1E8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2084 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x201F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x20A6 JUMPI PUSH2 0x20A5 PUSH2 0x1B9D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20B3 DUP9 DUP3 DUP10 ADD PUSH2 0x1C9E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x20C4 DUP9 DUP3 DUP10 ADD PUSH2 0x1C9E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E5 JUMPI PUSH2 0x20E4 PUSH2 0x1BA1 JUMP JUMPDEST JUMPDEST PUSH2 0x20F1 DUP9 DUP3 DUP10 ADD PUSH2 0x1FB0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2112 JUMPI PUSH2 0x2111 PUSH2 0x1BA1 JUMP JUMPDEST JUMPDEST PUSH2 0x211E DUP9 DUP3 DUP10 ADD PUSH2 0x1FB0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x213F JUMPI PUSH2 0x213E PUSH2 0x1BA1 JUMP JUMPDEST JUMPDEST PUSH2 0x214B DUP9 DUP3 DUP10 ADD PUSH2 0x2060 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x2161 DUP2 PUSH2 0x1BA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x217A PUSH0 DUP4 ADD DUP5 PUSH2 0x2158 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2195 JUMPI PUSH2 0x2194 PUSH2 0x1B9D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21A2 DUP5 DUP3 DUP6 ADD PUSH2 0x1C9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21C2 JUMPI PUSH2 0x21C1 PUSH2 0x1B9D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21CF DUP7 DUP3 DUP8 ADD PUSH2 0x1C9E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21E0 DUP7 DUP3 DUP8 ADD PUSH2 0x1CD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21F1 DUP7 DUP3 DUP8 ADD PUSH2 0x1CD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2214 JUMPI PUSH2 0x2213 PUSH2 0x1B9D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2221 DUP9 DUP3 DUP10 ADD PUSH2 0x1C9E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2232 DUP9 DUP3 DUP10 ADD PUSH2 0x1C9E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2243 DUP9 DUP3 DUP10 ADD PUSH2 0x1CD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2254 DUP9 DUP3 DUP10 ADD PUSH2 0x1CD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2275 JUMPI PUSH2 0x2274 PUSH2 0x1BA1 JUMP JUMPDEST JUMPDEST PUSH2 0x2281 DUP9 DUP3 DUP10 ADD PUSH2 0x2060 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420455243313135352061646472657373000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22D2 PUSH1 0x17 DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x22DD DUP3 PUSH2 0x229E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22FF DUP2 PUSH2 0x22C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792074686520746F6B656E206F776E65722063616E2074726967676572 PUSH0 DUP3 ADD MSTORE PUSH32 0x20636F6E76657273696F6E000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2360 PUSH1 0x2B DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x236B DUP3 PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x238D DUP2 PUSH2 0x2354 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x49447320616E642076616C756573206C656E677468206D69736D617463680000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23C8 PUSH1 0x1E DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x23D3 DUP3 PUSH2 0x2394 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23F5 DUP2 PUSH2 0x23BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243323020746F6B656E206E6F742073657400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2430 PUSH1 0x13 DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x243B DUP3 PUSH2 0x23FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x245D DUP2 PUSH2 0x2424 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4F6E65206F72206D6F7265204552433131353520746F6B656E73206E6F742061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77656420666F7220636F6E76657273696F6E0000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24EB PUSH1 0x35 DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x24F6 DUP3 PUSH2 0x2491 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2518 DUP2 PUSH2 0x24DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2532 PUSH0 DUP4 ADD DUP6 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x253F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2559 PUSH0 DUP4 ADD DUP6 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x2566 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420455243323020746F6B656E20616464726573730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25A1 PUSH1 0x1B DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x25AC DUP3 PUSH2 0x256D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25CE DUP2 PUSH2 0x2595 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E76657273696F6E206E6F7420616C6C6F77656420666F72207468697320 PUSH0 DUP3 ADD MSTORE PUSH32 0x4552433131353520746F6B656E00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x262F PUSH1 0x2D DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x263A DUP3 PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x265C DUP2 PUSH2 0x2623 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2697 PUSH1 0x20 DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x26A2 DUP3 PUSH2 0x2663 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26C4 DUP2 PUSH2 0x268B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26DE PUSH0 DUP4 ADD DUP7 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x26EB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x26F8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2709 DUP2 PUSH2 0x1C25 JUMP JUMPDEST DUP2 EQ PUSH2 0x2713 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2724 DUP2 PUSH2 0x2700 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x273F JUMPI PUSH2 0x273E PUSH2 0x1B9D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x274C DUP5 DUP3 DUP6 ADD PUSH2 0x2716 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2789 PUSH1 0x15 DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x2794 DUP3 PUSH2 0x2755 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27B6 DUP2 PUSH2 0x277D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27D0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x27F4 PUSH0 DUP4 PUSH2 0x27D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x27FF DUP3 PUSH2 0x27E6 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x281C PUSH0 DUP4 ADD DUP7 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x2829 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x2836 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2847 DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433131353520746F6B656E206E6F7420616C6C6F77656420666F7220636F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E76657273696F6E000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28AB PUSH1 0x28 DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x28B6 DUP3 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28D8 DUP2 PUSH2 0x289F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243323020746F6B656E206E6F7420646566696E6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2913 PUSH1 0x17 DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x291E DUP3 PUSH2 0x28DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2940 DUP2 PUSH2 0x2907 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x295A PUSH0 DUP4 ADD DUP7 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x2967 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x2974 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND PUSH6 0xFF57E9097EA2 0x26 0xC6 LOG0 0xCE 0xC7 0x28 0xDF PC 0xCD BASEFEE 0xDB PUSH4 0x3B020281 0xAA SMOD PUSH15 0x66D9250D2664736F6C634300081900 CALLER ",
							"sourceMap": "1442:11481:6:-:0;;;4699:36;;;;;;;;;;4721:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1442:11481:6;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:7:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;1442:11481:6:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 6094,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_convertERC1155ToERC20_819": {
									"entryPoint": 6422,
									"id": 819,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_282": {
									"entryPoint": 7053,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 6229,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addAllowedERC1155Forward_605": {
									"entryPoint": 1814,
									"id": 605,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addAllowedERC1155Reverse_669": {
									"entryPoint": 1394,
									"id": 669,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@allowedERC1155Forward_394": {
									"entryPoint": 1352,
									"id": 394,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@allowedERC1155Reverse_401": {
									"entryPoint": 1124,
									"id": 401,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@conversionHistory_423": {
									"entryPoint": 1293,
									"id": 423,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@conversionRecordsBySender_418": {
									"entryPoint": 5919,
									"id": 418,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@conversionRecordsERC20ToERC1155ByUser_446": {
									"entryPoint": 2139,
									"id": 446,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@convertToERC1155_1032": {
									"entryPoint": 3667,
									"id": 1032,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@erc20ToErc1155History_439": {
									"entryPoint": 1166,
									"id": 439,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@erc20Token_387": {
									"entryPoint": 1738,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@onERC1155BatchReceived_920": {
									"entryPoint": 2277,
									"id": 920,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_751": {
									"entryPoint": 5351,
									"id": 751,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1775,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeAllowedERC1155Forward_629": {
									"entryPoint": 3140,
									"id": 629,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@removeAllowedERC1155Reverse_693": {
									"entryPoint": 5172,
									"id": 693,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1719,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setERC20Token_565": {
									"entryPoint": 3319,
									"id": 565,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@supportsInterface_225": {
									"entryPoint": 1003,
									"id": 225,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_323": {
									"entryPoint": 5989,
									"id": 323,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 5787,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8008,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8223,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 8112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 10006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7142,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8576,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 8333,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 8699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7397,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 8619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7459,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 8536,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20MintableBurnable_$365_to_t_address_fromStack": {
									"entryPoint": 7756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_35d771638d1a130f886af59ec9ada5517bbcdb9238977046eee8481b852e0427_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9044,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5238d4aee652249c28c9c7bb32e69a1db5c4a1216b30e22cedb7385260ff4d6a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9763,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_84631b1411dfd30314397a1487d6a580e00f82562cae361125f25c598b227a6d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9148,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_949e1d5c123b43c1e53a5b0a92a3be85e872ff6095aceb39ae946a881017b2a1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9252,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c0d4a5a669671359d552798a9c7b93fa91d0a30f0daac20e66258a9b728d0684_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ff8d7d3c8e5d5b3e00927ee71ae0a0948bfd5868c97a0626d24744807cda4270_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9931,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7532,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9503,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10249,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7231,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 8551,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20MintableBurnable_$365__to_t_address__fromStack_reversed": {
									"entryPoint": 7771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9901,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_35d771638d1a130f886af59ec9ada5517bbcdb9238977046eee8481b852e0427__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8936,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5238d4aee652249c28c9c7bb32e69a1db5c4a1216b30e22cedb7385260ff4d6a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_84631b1411dfd30314397a1487d6a580e00f82562cae361125f25c598b227a6d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_949e1d5c123b43c1e53a5b0a92a3be85e872ff6095aceb39ae946a881017b2a1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c0d4a5a669671359d552798a9c7b93fa91d0a30f0daac20e66258a9b728d0684__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ff8d7d3c8e5d5b3e00927ee71ae0a0948bfd5868c97a0626d24744807cda4270__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 10173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9542,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10567,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7613,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7060,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 7961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7205,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7256,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20MintableBurnable_$365_to_t_address": {
									"entryPoint": 7739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8209,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 7886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 7680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 9316,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7841,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7821,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 8004,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8157,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7073,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7069,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7825,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff": {
									"entryPoint": 10069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887": {
									"entryPoint": 9827,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_35d771638d1a130f886af59ec9ada5517bbcdb9238977046eee8481b852e0427": {
									"entryPoint": 10463,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f": {
									"entryPoint": 8862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46": {
									"entryPoint": 8966,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5238d4aee652249c28c9c7bb32e69a1db5c4a1216b30e22cedb7385260ff4d6a": {
									"entryPoint": 9685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_84631b1411dfd30314397a1487d6a580e00f82562cae361125f25c598b227a6d": {
									"entryPoint": 9108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_949e1d5c123b43c1e53a5b0a92a3be85e872ff6095aceb39ae946a881017b2a1": {
									"entryPoint": 10321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864": {
									"entryPoint": 9212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c0d4a5a669671359d552798a9c7b93fa91d0a30f0daac20e66258a9b728d0684": {
									"entryPoint": 9361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 10214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ff8d7d3c8e5d5b3e00927ee71ae0a0948bfd5868c97a0626d24744807cda4270": {
									"entryPoint": 9581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7304,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:28767:7",
										"nodeType": "YulBlock",
										"src": "0:28767:7",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:7",
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nativeSrc": "57:19:7",
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:7",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nativeSrc": "67:9:7",
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:7",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:7",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nativeSrc": "177:28:7",
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:7",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:7",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nativeSrc": "187:12:7",
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nativeSrc": "187:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nativeSrc": "300:28:7",
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:7",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:7",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nativeSrc": "310:12:7",
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nativeSrc": "310:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nativeSrc": "378:105:7",
													"nodeType": "YulBlock",
													"src": "378:105:7",
													"statements": [
														{
															"nativeSrc": "388:89:7",
															"nodeType": "YulAssignment",
															"src": "388:89:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:7",
																		"nodeType": "YulLiteral",
																		"src": "410:66:7",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:7"
																},
																"nativeSrc": "399:78:7",
																"nodeType": "YulFunctionCall",
																"src": "399:78:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:7",
														"nodeType": "YulTypedName",
														"src": "360:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:7",
														"nodeType": "YulTypedName",
														"src": "370:7:7",
														"type": ""
													}
												],
												"src": "334:149:7"
											},
											{
												"body": {
													"nativeSrc": "531:78:7",
													"nodeType": "YulBlock",
													"src": "531:78:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:7",
																"nodeType": "YulBlock",
																"src": "587:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:7",
																					"nodeType": "YulLiteral",
																					"src": "596:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:7",
																					"nodeType": "YulLiteral",
																					"src": "599:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:7"
																			},
																			"nativeSrc": "589:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:7"
																		},
																		"nativeSrc": "589:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:7",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:7"
																				},
																				"nativeSrc": "561:23:7",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:7"
																		},
																		"nativeSrc": "551:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:7"
																},
																"nativeSrc": "544:42:7",
																"nodeType": "YulFunctionCall",
																"src": "544:42:7"
															},
															"nativeSrc": "541:62:7",
															"nodeType": "YulIf",
															"src": "541:62:7"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:7",
														"nodeType": "YulTypedName",
														"src": "524:5:7",
														"type": ""
													}
												],
												"src": "489:120:7"
											},
											{
												"body": {
													"nativeSrc": "666:86:7",
													"nodeType": "YulBlock",
													"src": "666:86:7",
													"statements": [
														{
															"nativeSrc": "676:29:7",
															"nodeType": "YulAssignment",
															"src": "676:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:7"
																},
																"nativeSrc": "685:20:7",
																"nodeType": "YulFunctionCall",
																"src": "685:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:7",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:7"
																},
																"nativeSrc": "714:32:7",
																"nodeType": "YulFunctionCall",
																"src": "714:32:7"
															},
															"nativeSrc": "714:32:7",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:7"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:7",
														"nodeType": "YulTypedName",
														"src": "644:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:7",
														"nodeType": "YulTypedName",
														"src": "652:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:7",
														"nodeType": "YulTypedName",
														"src": "660:5:7",
														"type": ""
													}
												],
												"src": "615:137:7"
											},
											{
												"body": {
													"nativeSrc": "823:262:7",
													"nodeType": "YulBlock",
													"src": "823:262:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:7",
																"nodeType": "YulBlock",
																"src": "869:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:7"
																			},
																			"nativeSrc": "871:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:7"
																		},
																		"nativeSrc": "871:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:7"
																		},
																		"nativeSrc": "840:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:7",
																		"nodeType": "YulLiteral",
																		"src": "865:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:7"
																},
																"nativeSrc": "836:32:7",
																"nodeType": "YulFunctionCall",
																"src": "836:32:7"
															},
															"nativeSrc": "833:119:7",
															"nodeType": "YulIf",
															"src": "833:119:7"
														},
														{
															"nativeSrc": "962:116:7",
															"nodeType": "YulBlock",
															"src": "962:116:7",
															"statements": [
																{
																	"nativeSrc": "977:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:7",
																		"nodeType": "YulLiteral",
																		"src": "991:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:7",
																			"nodeType": "YulTypedName",
																			"src": "981:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:7",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:7"
																				},
																				"nativeSrc": "1036:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:7",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:7"
																		},
																		"nativeSrc": "1016:52:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:7",
														"nodeType": "YulTypedName",
														"src": "793:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:7",
														"nodeType": "YulTypedName",
														"src": "804:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:7",
														"nodeType": "YulTypedName",
														"src": "816:6:7",
														"type": ""
													}
												],
												"src": "758:327:7"
											},
											{
												"body": {
													"nativeSrc": "1133:48:7",
													"nodeType": "YulBlock",
													"src": "1133:48:7",
													"statements": [
														{
															"nativeSrc": "1143:32:7",
															"nodeType": "YulAssignment",
															"src": "1143:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:7"
																		},
																		"nativeSrc": "1161:13:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:7"
																},
																"nativeSrc": "1154:21:7",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:7",
														"nodeType": "YulTypedName",
														"src": "1115:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:7",
														"nodeType": "YulTypedName",
														"src": "1125:7:7",
														"type": ""
													}
												],
												"src": "1091:90:7"
											},
											{
												"body": {
													"nativeSrc": "1246:50:7",
													"nodeType": "YulBlock",
													"src": "1246:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:7",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:7"
																		},
																		"nativeSrc": "1268:21:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:7"
																},
																"nativeSrc": "1256:34:7",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:7"
															},
															"nativeSrc": "1256:34:7",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:7",
														"nodeType": "YulTypedName",
														"src": "1234:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:7",
														"nodeType": "YulTypedName",
														"src": "1241:3:7",
														"type": ""
													}
												],
												"src": "1187:109:7"
											},
											{
												"body": {
													"nativeSrc": "1394:118:7",
													"nodeType": "YulBlock",
													"src": "1394:118:7",
													"statements": [
														{
															"nativeSrc": "1404:26:7",
															"nodeType": "YulAssignment",
															"src": "1404:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:7",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:7"
																},
																"nativeSrc": "1412:18:7",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:7",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:7"
																		},
																		"nativeSrc": "1487:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:7",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:7"
																},
																"nativeSrc": "1440:65:7",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:7"
															},
															"nativeSrc": "1440:65:7",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:7",
														"nodeType": "YulTypedName",
														"src": "1366:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:7",
														"nodeType": "YulTypedName",
														"src": "1378:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:7",
														"nodeType": "YulTypedName",
														"src": "1389:4:7",
														"type": ""
													}
												],
												"src": "1302:210:7"
											},
											{
												"body": {
													"nativeSrc": "1563:81:7",
													"nodeType": "YulBlock",
													"src": "1563:81:7",
													"statements": [
														{
															"nativeSrc": "1573:65:7",
															"nodeType": "YulAssignment",
															"src": "1573:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1588:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1588:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1595:42:7",
																		"nodeType": "YulLiteral",
																		"src": "1595:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1584:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "1584:3:7"
																},
																"nativeSrc": "1584:54:7",
																"nodeType": "YulFunctionCall",
																"src": "1584:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1518:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:7",
														"nodeType": "YulTypedName",
														"src": "1545:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:7",
														"nodeType": "YulTypedName",
														"src": "1555:7:7",
														"type": ""
													}
												],
												"src": "1518:126:7"
											},
											{
												"body": {
													"nativeSrc": "1695:51:7",
													"nodeType": "YulBlock",
													"src": "1695:51:7",
													"statements": [
														{
															"nativeSrc": "1705:35:7",
															"nodeType": "YulAssignment",
															"src": "1705:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1734:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "1734:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1716:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "1716:17:7"
																},
																"nativeSrc": "1716:24:7",
																"nodeType": "YulFunctionCall",
																"src": "1716:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1705:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "1705:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1650:96:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1677:5:7",
														"nodeType": "YulTypedName",
														"src": "1677:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1687:7:7",
														"nodeType": "YulTypedName",
														"src": "1687:7:7",
														"type": ""
													}
												],
												"src": "1650:96:7"
											},
											{
												"body": {
													"nativeSrc": "1795:79:7",
													"nodeType": "YulBlock",
													"src": "1795:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "1852:16:7",
																"nodeType": "YulBlock",
																"src": "1852:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1861:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1861:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1864:1:7",
																					"nodeType": "YulLiteral",
																					"src": "1864:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1854:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "1854:6:7"
																			},
																			"nativeSrc": "1854:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "1854:12:7"
																		},
																		"nativeSrc": "1854:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "1854:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1818:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "1818:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1843:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "1843:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1825:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "1825:17:7"
																				},
																				"nativeSrc": "1825:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "1825:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1815:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "1815:2:7"
																		},
																		"nativeSrc": "1815:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "1815:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1808:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:7"
																},
																"nativeSrc": "1808:43:7",
																"nodeType": "YulFunctionCall",
																"src": "1808:43:7"
															},
															"nativeSrc": "1805:63:7",
															"nodeType": "YulIf",
															"src": "1805:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1752:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1788:5:7",
														"nodeType": "YulTypedName",
														"src": "1788:5:7",
														"type": ""
													}
												],
												"src": "1752:122:7"
											},
											{
												"body": {
													"nativeSrc": "1932:87:7",
													"nodeType": "YulBlock",
													"src": "1932:87:7",
													"statements": [
														{
															"nativeSrc": "1942:29:7",
															"nodeType": "YulAssignment",
															"src": "1942:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1964:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "1964:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1951:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "1951:12:7"
																},
																"nativeSrc": "1951:20:7",
																"nodeType": "YulFunctionCall",
																"src": "1951:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1942:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "1942:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2007:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2007:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1980:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "1980:26:7"
																},
																"nativeSrc": "1980:33:7",
																"nodeType": "YulFunctionCall",
																"src": "1980:33:7"
															},
															"nativeSrc": "1980:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "1980:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1880:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1910:6:7",
														"nodeType": "YulTypedName",
														"src": "1910:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1918:3:7",
														"nodeType": "YulTypedName",
														"src": "1918:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1926:5:7",
														"nodeType": "YulTypedName",
														"src": "1926:5:7",
														"type": ""
													}
												],
												"src": "1880:139:7"
											},
											{
												"body": {
													"nativeSrc": "2070:32:7",
													"nodeType": "YulBlock",
													"src": "2070:32:7",
													"statements": [
														{
															"nativeSrc": "2080:16:7",
															"nodeType": "YulAssignment",
															"src": "2080:16:7",
															"value": {
																"name": "value",
																"nativeSrc": "2091:5:7",
																"nodeType": "YulIdentifier",
																"src": "2091:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2080:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "2080:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2025:77:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2052:5:7",
														"nodeType": "YulTypedName",
														"src": "2052:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2062:7:7",
														"nodeType": "YulTypedName",
														"src": "2062:7:7",
														"type": ""
													}
												],
												"src": "2025:77:7"
											},
											{
												"body": {
													"nativeSrc": "2151:79:7",
													"nodeType": "YulBlock",
													"src": "2151:79:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2208:16:7",
																"nodeType": "YulBlock",
																"src": "2208:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2217:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2217:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2220:1:7",
																					"nodeType": "YulLiteral",
																					"src": "2220:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2210:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "2210:6:7"
																			},
																			"nativeSrc": "2210:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2210:12:7"
																		},
																		"nativeSrc": "2210:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2210:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2174:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "2174:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2199:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "2199:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2181:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "2181:17:7"
																				},
																				"nativeSrc": "2181:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2181:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2171:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "2171:2:7"
																		},
																		"nativeSrc": "2171:35:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2171:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2164:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "2164:6:7"
																},
																"nativeSrc": "2164:43:7",
																"nodeType": "YulFunctionCall",
																"src": "2164:43:7"
															},
															"nativeSrc": "2161:63:7",
															"nodeType": "YulIf",
															"src": "2161:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2108:122:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2144:5:7",
														"nodeType": "YulTypedName",
														"src": "2144:5:7",
														"type": ""
													}
												],
												"src": "2108:122:7"
											},
											{
												"body": {
													"nativeSrc": "2288:87:7",
													"nodeType": "YulBlock",
													"src": "2288:87:7",
													"statements": [
														{
															"nativeSrc": "2298:29:7",
															"nodeType": "YulAssignment",
															"src": "2298:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2320:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "2320:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2307:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "2307:12:7"
																},
																"nativeSrc": "2307:20:7",
																"nodeType": "YulFunctionCall",
																"src": "2307:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2298:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "2298:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2363:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "2363:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2336:26:7",
																	"nodeType": "YulIdentifier",
																	"src": "2336:26:7"
																},
																"nativeSrc": "2336:33:7",
																"nodeType": "YulFunctionCall",
																"src": "2336:33:7"
															},
															"nativeSrc": "2336:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "2336:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2236:139:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2266:6:7",
														"nodeType": "YulTypedName",
														"src": "2266:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2274:3:7",
														"nodeType": "YulTypedName",
														"src": "2274:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2282:5:7",
														"nodeType": "YulTypedName",
														"src": "2282:5:7",
														"type": ""
													}
												],
												"src": "2236:139:7"
											},
											{
												"body": {
													"nativeSrc": "2464:391:7",
													"nodeType": "YulBlock",
													"src": "2464:391:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2510:83:7",
																"nodeType": "YulBlock",
																"src": "2510:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2512:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2512:77:7"
																			},
																			"nativeSrc": "2512:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2512:79:7"
																		},
																		"nativeSrc": "2512:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2512:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2485:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2485:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2494:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2494:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2481:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2481:3:7"
																		},
																		"nativeSrc": "2481:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2481:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2506:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2506:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2477:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2477:3:7"
																},
																"nativeSrc": "2477:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2477:32:7"
															},
															"nativeSrc": "2474:119:7",
															"nodeType": "YulIf",
															"src": "2474:119:7"
														},
														{
															"nativeSrc": "2603:117:7",
															"nodeType": "YulBlock",
															"src": "2603:117:7",
															"statements": [
																{
																	"nativeSrc": "2618:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2618:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2632:1:7",
																		"nodeType": "YulLiteral",
																		"src": "2632:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2622:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2622:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2647:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2647:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2682:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2682:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2693:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2693:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2678:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2678:3:7"
																				},
																				"nativeSrc": "2678:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2678:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2702:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2702:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2657:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2657:20:7"
																		},
																		"nativeSrc": "2657:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2657:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2647:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2647:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2730:118:7",
															"nodeType": "YulBlock",
															"src": "2730:118:7",
															"statements": [
																{
																	"nativeSrc": "2745:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2745:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2759:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2759:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2749:6:7",
																			"nodeType": "YulTypedName",
																			"src": "2749:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2775:63:7",
																	"nodeType": "YulAssignment",
																	"src": "2775:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2810:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "2810:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2821:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "2821:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2806:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "2806:3:7"
																				},
																				"nativeSrc": "2806:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "2806:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2830:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2830:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2785:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "2785:20:7"
																		},
																		"nativeSrc": "2785:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2785:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2775:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "2775:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2381:474:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2426:9:7",
														"nodeType": "YulTypedName",
														"src": "2426:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2437:7:7",
														"nodeType": "YulTypedName",
														"src": "2437:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2449:6:7",
														"nodeType": "YulTypedName",
														"src": "2449:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2457:6:7",
														"nodeType": "YulTypedName",
														"src": "2457:6:7",
														"type": ""
													}
												],
												"src": "2381:474:7"
											},
											{
												"body": {
													"nativeSrc": "2927:263:7",
													"nodeType": "YulBlock",
													"src": "2927:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "2973:83:7",
																"nodeType": "YulBlock",
																"src": "2973:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2975:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "2975:77:7"
																			},
																			"nativeSrc": "2975:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "2975:79:7"
																		},
																		"nativeSrc": "2975:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "2975:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2948:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "2948:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2957:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "2957:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2944:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "2944:3:7"
																		},
																		"nativeSrc": "2944:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "2944:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2969:2:7",
																		"nodeType": "YulLiteral",
																		"src": "2969:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2940:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "2940:3:7"
																},
																"nativeSrc": "2940:32:7",
																"nodeType": "YulFunctionCall",
																"src": "2940:32:7"
															},
															"nativeSrc": "2937:119:7",
															"nodeType": "YulIf",
															"src": "2937:119:7"
														},
														{
															"nativeSrc": "3066:117:7",
															"nodeType": "YulBlock",
															"src": "3066:117:7",
															"statements": [
																{
																	"nativeSrc": "3081:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3081:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3095:1:7",
																		"nodeType": "YulLiteral",
																		"src": "3095:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3085:6:7",
																			"nodeType": "YulTypedName",
																			"src": "3085:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3110:63:7",
																	"nodeType": "YulAssignment",
																	"src": "3110:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3145:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "3145:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3156:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "3156:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3141:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "3141:3:7"
																				},
																				"nativeSrc": "3141:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "3141:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3165:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "3165:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3120:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "3120:20:7"
																		},
																		"nativeSrc": "3120:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3120:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3110:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "3110:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2861:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2897:9:7",
														"nodeType": "YulTypedName",
														"src": "2897:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2908:7:7",
														"nodeType": "YulTypedName",
														"src": "2908:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2920:6:7",
														"nodeType": "YulTypedName",
														"src": "2920:6:7",
														"type": ""
													}
												],
												"src": "2861:329:7"
											},
											{
												"body": {
													"nativeSrc": "3261:53:7",
													"nodeType": "YulBlock",
													"src": "3261:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3278:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3278:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3301:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3301:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3283:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3283:17:7"
																		},
																		"nativeSrc": "3283:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3283:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3271:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3271:6:7"
																},
																"nativeSrc": "3271:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3271:37:7"
															},
															"nativeSrc": "3271:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3271:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3196:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3249:5:7",
														"nodeType": "YulTypedName",
														"src": "3249:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3256:3:7",
														"nodeType": "YulTypedName",
														"src": "3256:3:7",
														"type": ""
													}
												],
												"src": "3196:118:7"
											},
											{
												"body": {
													"nativeSrc": "3385:53:7",
													"nodeType": "YulBlock",
													"src": "3385:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3402:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "3402:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3425:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "3425:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3407:17:7",
																			"nodeType": "YulIdentifier",
																			"src": "3407:17:7"
																		},
																		"nativeSrc": "3407:24:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3407:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3395:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "3395:6:7"
																},
																"nativeSrc": "3395:37:7",
																"nodeType": "YulFunctionCall",
																"src": "3395:37:7"
															},
															"nativeSrc": "3395:37:7",
															"nodeType": "YulExpressionStatement",
															"src": "3395:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3320:118:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3373:5:7",
														"nodeType": "YulTypedName",
														"src": "3373:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3380:3:7",
														"nodeType": "YulTypedName",
														"src": "3380:3:7",
														"type": ""
													}
												],
												"src": "3320:118:7"
											},
											{
												"body": {
													"nativeSrc": "3654:454:7",
													"nodeType": "YulBlock",
													"src": "3654:454:7",
													"statements": [
														{
															"nativeSrc": "3664:27:7",
															"nodeType": "YulAssignment",
															"src": "3664:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3676:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "3676:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3687:3:7",
																		"nodeType": "YulLiteral",
																		"src": "3687:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3672:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "3672:3:7"
																},
																"nativeSrc": "3672:19:7",
																"nodeType": "YulFunctionCall",
																"src": "3672:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3664:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "3664:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3745:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3745:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3758:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3758:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3769:1:7",
																				"nodeType": "YulLiteral",
																				"src": "3769:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3754:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3754:3:7"
																		},
																		"nativeSrc": "3754:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3754:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3701:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3701:43:7"
																},
																"nativeSrc": "3701:71:7",
																"nodeType": "YulFunctionCall",
																"src": "3701:71:7"
															},
															"nativeSrc": "3701:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "3701:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "3826:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3826:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3839:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3839:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3850:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3850:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3835:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3835:3:7"
																		},
																		"nativeSrc": "3835:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3835:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3782:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3782:43:7"
																},
																"nativeSrc": "3782:72:7",
																"nodeType": "YulFunctionCall",
																"src": "3782:72:7"
															},
															"nativeSrc": "3782:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "3782:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "3908:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3908:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3921:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "3921:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3932:2:7",
																				"nodeType": "YulLiteral",
																				"src": "3932:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3917:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:7"
																		},
																		"nativeSrc": "3917:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3917:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3864:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3864:43:7"
																},
																"nativeSrc": "3864:72:7",
																"nodeType": "YulFunctionCall",
																"src": "3864:72:7"
															},
															"nativeSrc": "3864:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "3864:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "3990:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4014:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:7"
																		},
																		"nativeSrc": "3999:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3946:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:7"
																},
																"nativeSrc": "3946:72:7",
																"nodeType": "YulFunctionCall",
																"src": "3946:72:7"
															},
															"nativeSrc": "3946:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "3946:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "4072:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4072:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4085:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4085:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4096:3:7",
																				"nodeType": "YulLiteral",
																				"src": "4096:3:7",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4081:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4081:3:7"
																		},
																		"nativeSrc": "4081:19:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4081:19:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4028:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4028:43:7"
																},
																"nativeSrc": "4028:73:7",
																"nodeType": "YulFunctionCall",
																"src": "4028:73:7"
															},
															"nativeSrc": "4028:73:7",
															"nodeType": "YulExpressionStatement",
															"src": "4028:73:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3444:664:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3594:9:7",
														"nodeType": "YulTypedName",
														"src": "3594:9:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "3606:6:7",
														"nodeType": "YulTypedName",
														"src": "3606:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3614:6:7",
														"nodeType": "YulTypedName",
														"src": "3614:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3622:6:7",
														"nodeType": "YulTypedName",
														"src": "3622:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3630:6:7",
														"nodeType": "YulTypedName",
														"src": "3630:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3638:6:7",
														"nodeType": "YulTypedName",
														"src": "3638:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3649:4:7",
														"nodeType": "YulTypedName",
														"src": "3649:4:7",
														"type": ""
													}
												],
												"src": "3444:664:7"
											},
											{
												"body": {
													"nativeSrc": "4296:371:7",
													"nodeType": "YulBlock",
													"src": "4296:371:7",
													"statements": [
														{
															"nativeSrc": "4306:27:7",
															"nodeType": "YulAssignment",
															"src": "4306:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4318:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "4318:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4329:3:7",
																		"nodeType": "YulLiteral",
																		"src": "4329:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4314:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4314:3:7"
																},
																"nativeSrc": "4314:19:7",
																"nodeType": "YulFunctionCall",
																"src": "4314:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4306:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "4306:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4387:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4387:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4400:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4400:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4411:1:7",
																				"nodeType": "YulLiteral",
																				"src": "4411:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4396:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4396:3:7"
																		},
																		"nativeSrc": "4396:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4396:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4343:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4343:43:7"
																},
																"nativeSrc": "4343:71:7",
																"nodeType": "YulFunctionCall",
																"src": "4343:71:7"
															},
															"nativeSrc": "4343:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "4343:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4468:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4468:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4481:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4481:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4492:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4492:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4477:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4477:3:7"
																		},
																		"nativeSrc": "4477:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4477:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4424:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4424:43:7"
																},
																"nativeSrc": "4424:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4424:72:7"
															},
															"nativeSrc": "4424:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4424:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4550:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4550:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4563:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4563:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4574:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4574:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4559:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4559:3:7"
																		},
																		"nativeSrc": "4559:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4559:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4506:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4506:43:7"
																},
																"nativeSrc": "4506:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4506:72:7"
															},
															"nativeSrc": "4506:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4506:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "4632:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "4632:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4645:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "4645:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4656:2:7",
																				"nodeType": "YulLiteral",
																				"src": "4656:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4641:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "4641:3:7"
																		},
																		"nativeSrc": "4641:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4641:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4588:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "4588:43:7"
																},
																"nativeSrc": "4588:72:7",
																"nodeType": "YulFunctionCall",
																"src": "4588:72:7"
															},
															"nativeSrc": "4588:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "4588:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4114:553:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4244:9:7",
														"nodeType": "YulTypedName",
														"src": "4244:9:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4256:6:7",
														"nodeType": "YulTypedName",
														"src": "4256:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4264:6:7",
														"nodeType": "YulTypedName",
														"src": "4264:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4272:6:7",
														"nodeType": "YulTypedName",
														"src": "4272:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4280:6:7",
														"nodeType": "YulTypedName",
														"src": "4280:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4291:4:7",
														"nodeType": "YulTypedName",
														"src": "4291:4:7",
														"type": ""
													}
												],
												"src": "4114:553:7"
											},
											{
												"body": {
													"nativeSrc": "4705:28:7",
													"nodeType": "YulBlock",
													"src": "4705:28:7",
													"statements": [
														{
															"nativeSrc": "4715:12:7",
															"nodeType": "YulAssignment",
															"src": "4715:12:7",
															"value": {
																"name": "value",
																"nativeSrc": "4722:5:7",
																"nodeType": "YulIdentifier",
																"src": "4722:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4715:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4673:60:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4691:5:7",
														"nodeType": "YulTypedName",
														"src": "4691:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4701:3:7",
														"nodeType": "YulTypedName",
														"src": "4701:3:7",
														"type": ""
													}
												],
												"src": "4673:60:7"
											},
											{
												"body": {
													"nativeSrc": "4799:82:7",
													"nodeType": "YulBlock",
													"src": "4799:82:7",
													"statements": [
														{
															"nativeSrc": "4809:66:7",
															"nodeType": "YulAssignment",
															"src": "4809:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4867:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "4867:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4849:17:7",
																					"nodeType": "YulIdentifier",
																					"src": "4849:17:7"
																				},
																				"nativeSrc": "4849:24:7",
																				"nodeType": "YulFunctionCall",
																				"src": "4849:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4840:8:7",
																			"nodeType": "YulIdentifier",
																			"src": "4840:8:7"
																		},
																		"nativeSrc": "4840:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "4840:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4822:17:7",
																	"nodeType": "YulIdentifier",
																	"src": "4822:17:7"
																},
																"nativeSrc": "4822:53:7",
																"nodeType": "YulFunctionCall",
																"src": "4822:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4809:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4809:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4739:142:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4779:5:7",
														"nodeType": "YulTypedName",
														"src": "4779:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4789:9:7",
														"nodeType": "YulTypedName",
														"src": "4789:9:7",
														"type": ""
													}
												],
												"src": "4739:142:7"
											},
											{
												"body": {
													"nativeSrc": "4947:66:7",
													"nodeType": "YulBlock",
													"src": "4947:66:7",
													"statements": [
														{
															"nativeSrc": "4957:50:7",
															"nodeType": "YulAssignment",
															"src": "4957:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5001:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5001:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4970:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "4970:30:7"
																},
																"nativeSrc": "4970:37:7",
																"nodeType": "YulFunctionCall",
																"src": "4970:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4957:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "4957:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4887:126:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4927:5:7",
														"nodeType": "YulTypedName",
														"src": "4927:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4937:9:7",
														"nodeType": "YulTypedName",
														"src": "4937:9:7",
														"type": ""
													}
												],
												"src": "4887:126:7"
											},
											{
												"body": {
													"nativeSrc": "5109:66:7",
													"nodeType": "YulBlock",
													"src": "5109:66:7",
													"statements": [
														{
															"nativeSrc": "5119:50:7",
															"nodeType": "YulAssignment",
															"src": "5119:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5163:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "5163:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5132:30:7",
																	"nodeType": "YulIdentifier",
																	"src": "5132:30:7"
																},
																"nativeSrc": "5132:37:7",
																"nodeType": "YulFunctionCall",
																"src": "5132:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5119:9:7",
																	"nodeType": "YulIdentifier",
																	"src": "5119:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20MintableBurnable_$365_to_t_address",
												"nativeSrc": "5019:156:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5089:5:7",
														"nodeType": "YulTypedName",
														"src": "5089:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5099:9:7",
														"nodeType": "YulTypedName",
														"src": "5099:9:7",
														"type": ""
													}
												],
												"src": "5019:156:7"
											},
											{
												"body": {
													"nativeSrc": "5276:96:7",
													"nodeType": "YulBlock",
													"src": "5276:96:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5293:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "5293:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5359:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "5359:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20MintableBurnable_$365_to_t_address",
																			"nativeSrc": "5298:60:7",
																			"nodeType": "YulIdentifier",
																			"src": "5298:60:7"
																		},
																		"nativeSrc": "5298:67:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5298:67:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5286:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5286:6:7"
																},
																"nativeSrc": "5286:80:7",
																"nodeType": "YulFunctionCall",
																"src": "5286:80:7"
															},
															"nativeSrc": "5286:80:7",
															"nodeType": "YulExpressionStatement",
															"src": "5286:80:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20MintableBurnable_$365_to_t_address_fromStack",
												"nativeSrc": "5181:191:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5264:5:7",
														"nodeType": "YulTypedName",
														"src": "5264:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5271:3:7",
														"nodeType": "YulTypedName",
														"src": "5271:3:7",
														"type": ""
													}
												],
												"src": "5181:191:7"
											},
											{
												"body": {
													"nativeSrc": "5506:154:7",
													"nodeType": "YulBlock",
													"src": "5506:154:7",
													"statements": [
														{
															"nativeSrc": "5516:26:7",
															"nodeType": "YulAssignment",
															"src": "5516:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5528:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5528:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5539:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5539:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5524:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5524:3:7"
																},
																"nativeSrc": "5524:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5524:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5516:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5516:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5626:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5626:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5639:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5639:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5650:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5650:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5635:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5635:3:7"
																		},
																		"nativeSrc": "5635:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5635:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20MintableBurnable_$365_to_t_address_fromStack",
																	"nativeSrc": "5552:73:7",
																	"nodeType": "YulIdentifier",
																	"src": "5552:73:7"
																},
																"nativeSrc": "5552:101:7",
																"nodeType": "YulFunctionCall",
																"src": "5552:101:7"
															},
															"nativeSrc": "5552:101:7",
															"nodeType": "YulExpressionStatement",
															"src": "5552:101:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20MintableBurnable_$365__to_t_address__fromStack_reversed",
												"nativeSrc": "5378:282:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5478:9:7",
														"nodeType": "YulTypedName",
														"src": "5478:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5490:6:7",
														"nodeType": "YulTypedName",
														"src": "5490:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5501:4:7",
														"nodeType": "YulTypedName",
														"src": "5501:4:7",
														"type": ""
													}
												],
												"src": "5378:282:7"
											},
											{
												"body": {
													"nativeSrc": "5764:124:7",
													"nodeType": "YulBlock",
													"src": "5764:124:7",
													"statements": [
														{
															"nativeSrc": "5774:26:7",
															"nodeType": "YulAssignment",
															"src": "5774:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5786:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "5786:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5797:2:7",
																		"nodeType": "YulLiteral",
																		"src": "5797:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5782:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "5782:3:7"
																},
																"nativeSrc": "5782:18:7",
																"nodeType": "YulFunctionCall",
																"src": "5782:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5774:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "5774:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5854:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "5854:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5867:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "5867:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5878:1:7",
																				"nodeType": "YulLiteral",
																				"src": "5878:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5863:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "5863:3:7"
																		},
																		"nativeSrc": "5863:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "5863:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5810:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "5810:43:7"
																},
																"nativeSrc": "5810:71:7",
																"nodeType": "YulFunctionCall",
																"src": "5810:71:7"
															},
															"nativeSrc": "5810:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "5810:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5666:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5736:9:7",
														"nodeType": "YulTypedName",
														"src": "5736:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5748:6:7",
														"nodeType": "YulTypedName",
														"src": "5748:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5759:4:7",
														"nodeType": "YulTypedName",
														"src": "5759:4:7",
														"type": ""
													}
												],
												"src": "5666:222:7"
											},
											{
												"body": {
													"nativeSrc": "5983:28:7",
													"nodeType": "YulBlock",
													"src": "5983:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6000:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6000:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6003:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6003:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5993:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "5993:6:7"
																},
																"nativeSrc": "5993:12:7",
																"nodeType": "YulFunctionCall",
																"src": "5993:12:7"
															},
															"nativeSrc": "5993:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "5993:12:7"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "5894:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "5894:117:7"
											},
											{
												"body": {
													"nativeSrc": "6065:54:7",
													"nodeType": "YulBlock",
													"src": "6065:54:7",
													"statements": [
														{
															"nativeSrc": "6075:38:7",
															"nodeType": "YulAssignment",
															"src": "6075:38:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6093:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6093:5:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6100:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6100:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6089:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6089:3:7"
																		},
																		"nativeSrc": "6089:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6089:14:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6109:2:7",
																				"nodeType": "YulLiteral",
																				"src": "6109:2:7",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "6105:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "6105:3:7"
																		},
																		"nativeSrc": "6105:7:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6105:7:7"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6085:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6085:3:7"
																},
																"nativeSrc": "6085:28:7",
																"nodeType": "YulFunctionCall",
																"src": "6085:28:7"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6075:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6075:6:7"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "6017:102:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6048:5:7",
														"nodeType": "YulTypedName",
														"src": "6048:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6058:6:7",
														"nodeType": "YulTypedName",
														"src": "6058:6:7",
														"type": ""
													}
												],
												"src": "6017:102:7"
											},
											{
												"body": {
													"nativeSrc": "6153:152:7",
													"nodeType": "YulBlock",
													"src": "6153:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6170:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6170:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6173:77:7",
																		"nodeType": "YulLiteral",
																		"src": "6173:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6163:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6163:6:7"
																},
																"nativeSrc": "6163:88:7",
																"nodeType": "YulFunctionCall",
																"src": "6163:88:7"
															},
															"nativeSrc": "6163:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "6163:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6267:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6267:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6270:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6270:4:7",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6260:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6260:6:7"
																},
																"nativeSrc": "6260:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6260:15:7"
															},
															"nativeSrc": "6260:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6260:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6291:1:7",
																		"nodeType": "YulLiteral",
																		"src": "6291:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6294:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6294:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6284:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6284:6:7"
																},
																"nativeSrc": "6284:15:7",
																"nodeType": "YulFunctionCall",
																"src": "6284:15:7"
															},
															"nativeSrc": "6284:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "6284:15:7"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "6125:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "6125:180:7"
											},
											{
												"body": {
													"nativeSrc": "6354:238:7",
													"nodeType": "YulBlock",
													"src": "6354:238:7",
													"statements": [
														{
															"nativeSrc": "6364:58:7",
															"nodeType": "YulVariableDeclaration",
															"src": "6364:58:7",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6386:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6386:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "6416:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "6416:4:7"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "6394:21:7",
																			"nodeType": "YulIdentifier",
																			"src": "6394:21:7"
																		},
																		"nativeSrc": "6394:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6394:27:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6382:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6382:3:7"
																},
																"nativeSrc": "6382:40:7",
																"nodeType": "YulFunctionCall",
																"src": "6382:40:7"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "6368:10:7",
																	"nodeType": "YulTypedName",
																	"src": "6368:10:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6533:22:7",
																"nodeType": "YulBlock",
																"src": "6533:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6535:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6535:16:7"
																			},
																			"nativeSrc": "6535:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6535:18:7"
																		},
																		"nativeSrc": "6535:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6535:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6476:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "6476:10:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6488:18:7",
																				"nodeType": "YulLiteral",
																				"src": "6488:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6473:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6473:2:7"
																		},
																		"nativeSrc": "6473:34:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6473:34:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "6512:10:7",
																				"nodeType": "YulIdentifier",
																				"src": "6512:10:7"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "6524:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6524:6:7"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6509:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "6509:2:7"
																		},
																		"nativeSrc": "6509:22:7",
																		"nodeType": "YulFunctionCall",
																		"src": "6509:22:7"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "6470:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6470:2:7"
																},
																"nativeSrc": "6470:62:7",
																"nodeType": "YulFunctionCall",
																"src": "6470:62:7"
															},
															"nativeSrc": "6467:88:7",
															"nodeType": "YulIf",
															"src": "6467:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6571:2:7",
																		"nodeType": "YulLiteral",
																		"src": "6571:2:7",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "6575:10:7",
																		"nodeType": "YulIdentifier",
																		"src": "6575:10:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6564:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6564:6:7"
																},
																"nativeSrc": "6564:22:7",
																"nodeType": "YulFunctionCall",
																"src": "6564:22:7"
															},
															"nativeSrc": "6564:22:7",
															"nodeType": "YulExpressionStatement",
															"src": "6564:22:7"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "6311:281:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6340:6:7",
														"nodeType": "YulTypedName",
														"src": "6340:6:7",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "6348:4:7",
														"nodeType": "YulTypedName",
														"src": "6348:4:7",
														"type": ""
													}
												],
												"src": "6311:281:7"
											},
											{
												"body": {
													"nativeSrc": "6639:88:7",
													"nodeType": "YulBlock",
													"src": "6639:88:7",
													"statements": [
														{
															"nativeSrc": "6649:30:7",
															"nodeType": "YulAssignment",
															"src": "6649:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "6659:18:7",
																	"nodeType": "YulIdentifier",
																	"src": "6659:18:7"
																},
																"nativeSrc": "6659:20:7",
																"nodeType": "YulFunctionCall",
																"src": "6659:20:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "6649:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "6649:6:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "6708:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6708:6:7"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "6716:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "6716:4:7"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "6688:19:7",
																	"nodeType": "YulIdentifier",
																	"src": "6688:19:7"
																},
																"nativeSrc": "6688:33:7",
																"nodeType": "YulFunctionCall",
																"src": "6688:33:7"
															},
															"nativeSrc": "6688:33:7",
															"nodeType": "YulExpressionStatement",
															"src": "6688:33:7"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "6598:129:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "6623:4:7",
														"nodeType": "YulTypedName",
														"src": "6623:4:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "6632:6:7",
														"nodeType": "YulTypedName",
														"src": "6632:6:7",
														"type": ""
													}
												],
												"src": "6598:129:7"
											},
											{
												"body": {
													"nativeSrc": "6815:229:7",
													"nodeType": "YulBlock",
													"src": "6815:229:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "6920:22:7",
																"nodeType": "YulBlock",
																"src": "6920:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6922:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "6922:16:7"
																			},
																			"nativeSrc": "6922:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6922:18:7"
																		},
																		"nativeSrc": "6922:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6922:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6892:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6892:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6900:18:7",
																		"nodeType": "YulLiteral",
																		"src": "6900:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6889:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "6889:2:7"
																},
																"nativeSrc": "6889:30:7",
																"nodeType": "YulFunctionCall",
																"src": "6889:30:7"
															},
															"nativeSrc": "6886:56:7",
															"nodeType": "YulIf",
															"src": "6886:56:7"
														},
														{
															"nativeSrc": "6952:25:7",
															"nodeType": "YulAssignment",
															"src": "6952:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "6964:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "6964:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6972:4:7",
																		"nodeType": "YulLiteral",
																		"src": "6972:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6960:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "6960:3:7"
																},
																"nativeSrc": "6960:17:7",
																"nodeType": "YulFunctionCall",
																"src": "6960:17:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "6952:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "6952:4:7"
																}
															]
														},
														{
															"nativeSrc": "7014:23:7",
															"nodeType": "YulAssignment",
															"src": "7014:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7026:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "7026:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7032:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7032:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7022:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7022:3:7"
																},
																"nativeSrc": "7022:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7022:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7014:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "7014:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "6733:311:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "6799:6:7",
														"nodeType": "YulTypedName",
														"src": "6799:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "6810:4:7",
														"nodeType": "YulTypedName",
														"src": "6810:4:7",
														"type": ""
													}
												],
												"src": "6733:311:7"
											},
											{
												"body": {
													"nativeSrc": "7139:28:7",
													"nodeType": "YulBlock",
													"src": "7139:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7156:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7156:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7159:1:7",
																		"nodeType": "YulLiteral",
																		"src": "7159:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7149:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7149:6:7"
																},
																"nativeSrc": "7149:12:7",
																"nodeType": "YulFunctionCall",
																"src": "7149:12:7"
															},
															"nativeSrc": "7149:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "7149:12:7"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "7050:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "7050:117:7"
											},
											{
												"body": {
													"nativeSrc": "7292:608:7",
													"nodeType": "YulBlock",
													"src": "7292:608:7",
													"statements": [
														{
															"nativeSrc": "7302:90:7",
															"nodeType": "YulAssignment",
															"src": "7302:90:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7384:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7384:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "7327:56:7",
																			"nodeType": "YulIdentifier",
																			"src": "7327:56:7"
																		},
																		"nativeSrc": "7327:64:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7327:64:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "7311:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "7311:15:7"
																},
																"nativeSrc": "7311:81:7",
																"nodeType": "YulFunctionCall",
																"src": "7311:81:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "7302:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "7302:5:7"
																}
															]
														},
														{
															"nativeSrc": "7401:16:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7401:16:7",
															"value": {
																"name": "array",
																"nativeSrc": "7412:5:7",
																"nodeType": "YulIdentifier",
																"src": "7412:5:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "7405:3:7",
																	"nodeType": "YulTypedName",
																	"src": "7405:3:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7434:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7434:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7441:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7441:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7427:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "7427:6:7"
																},
																"nativeSrc": "7427:21:7",
																"nodeType": "YulFunctionCall",
																"src": "7427:21:7"
															},
															"nativeSrc": "7427:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "7427:21:7"
														},
														{
															"nativeSrc": "7457:23:7",
															"nodeType": "YulAssignment",
															"src": "7457:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "7468:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "7468:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:4:7",
																		"nodeType": "YulLiteral",
																		"src": "7475:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7464:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7464:3:7"
																},
																"nativeSrc": "7464:16:7",
																"nodeType": "YulFunctionCall",
																"src": "7464:16:7"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "7457:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7457:3:7"
																}
															]
														},
														{
															"nativeSrc": "7490:44:7",
															"nodeType": "YulVariableDeclaration",
															"src": "7490:44:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7508:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7508:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7520:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7520:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7528:4:7",
																				"nodeType": "YulLiteral",
																				"src": "7528:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7516:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7516:3:7"
																		},
																		"nativeSrc": "7516:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "7516:17:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7504:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "7504:3:7"
																},
																"nativeSrc": "7504:30:7",
																"nodeType": "YulFunctionCall",
																"src": "7504:30:7"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "7494:6:7",
																	"nodeType": "YulTypedName",
																	"src": "7494:6:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7562:103:7",
																"nodeType": "YulBlock",
																"src": "7562:103:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "7576:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "7576:77:7"
																			},
																			"nativeSrc": "7576:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7576:79:7"
																		},
																		"nativeSrc": "7576:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7576:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7549:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7549:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "7557:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7557:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7546:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7546:2:7"
																},
																"nativeSrc": "7546:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7546:15:7"
															},
															"nativeSrc": "7543:122:7",
															"nodeType": "YulIf",
															"src": "7543:122:7"
														},
														{
															"body": {
																"nativeSrc": "7750:144:7",
																"nodeType": "YulBlock",
																"src": "7750:144:7",
																"statements": [
																	{
																		"nativeSrc": "7765:21:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7765:21:7",
																		"value": {
																			"name": "src",
																			"nativeSrc": "7783:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "7783:3:7"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nativeSrc": "7769:10:7",
																				"nodeType": "YulTypedName",
																				"src": "7769:10:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7807:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7807:3:7"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nativeSrc": "7833:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "7833:10:7"
																						},
																						{
																							"name": "end",
																							"nativeSrc": "7845:3:7",
																							"nodeType": "YulIdentifier",
																							"src": "7845:3:7"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nativeSrc": "7812:20:7",
																						"nodeType": "YulIdentifier",
																						"src": "7812:20:7"
																					},
																					"nativeSrc": "7812:37:7",
																					"nodeType": "YulFunctionCall",
																					"src": "7812:37:7"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "7800:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "7800:6:7"
																			},
																			"nativeSrc": "7800:50:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7800:50:7"
																		},
																		"nativeSrc": "7800:50:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "7800:50:7"
																	},
																	{
																		"nativeSrc": "7863:21:7",
																		"nodeType": "YulAssignment",
																		"src": "7863:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "7874:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7874:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7879:4:7",
																					"nodeType": "YulLiteral",
																					"src": "7879:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7870:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7870:3:7"
																			},
																			"nativeSrc": "7870:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7870:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "7863:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7863:3:7"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7703:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "7703:3:7"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "7708:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "7708:6:7"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "7700:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "7700:2:7"
																},
																"nativeSrc": "7700:15:7",
																"nodeType": "YulFunctionCall",
																"src": "7700:15:7"
															},
															"nativeSrc": "7674:220:7",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7716:25:7",
																"nodeType": "YulBlock",
																"src": "7716:25:7",
																"statements": [
																	{
																		"nativeSrc": "7718:21:7",
																		"nodeType": "YulAssignment",
																		"src": "7718:21:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "7729:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "7729:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7734:4:7",
																					"nodeType": "YulLiteral",
																					"src": "7734:4:7",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "7725:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7725:3:7"
																			},
																			"nativeSrc": "7725:14:7",
																			"nodeType": "YulFunctionCall",
																			"src": "7725:14:7"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "7718:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "7718:3:7"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "7678:21:7",
																"nodeType": "YulBlock",
																"src": "7678:21:7",
																"statements": [
																	{
																		"nativeSrc": "7680:17:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "7680:17:7",
																		"value": {
																			"name": "offset",
																			"nativeSrc": "7691:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "7691:6:7"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nativeSrc": "7684:3:7",
																				"nodeType": "YulTypedName",
																				"src": "7684:3:7",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7674:220:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7190:710:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7262:6:7",
														"nodeType": "YulTypedName",
														"src": "7262:6:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7270:6:7",
														"nodeType": "YulTypedName",
														"src": "7270:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7278:3:7",
														"nodeType": "YulTypedName",
														"src": "7278:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7286:5:7",
														"nodeType": "YulTypedName",
														"src": "7286:5:7",
														"type": ""
													}
												],
												"src": "7190:710:7"
											},
											{
												"body": {
													"nativeSrc": "8000:293:7",
													"nodeType": "YulBlock",
													"src": "8000:293:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8049:83:7",
																"nodeType": "YulBlock",
																"src": "8049:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8051:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "8051:77:7"
																			},
																			"nativeSrc": "8051:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8051:79:7"
																		},
																		"nativeSrc": "8051:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8051:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8028:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "8028:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8036:4:7",
																						"nodeType": "YulLiteral",
																						"src": "8036:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8024:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8024:3:7"
																				},
																				"nativeSrc": "8024:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "8024:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8043:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8043:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8020:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8020:3:7"
																		},
																		"nativeSrc": "8020:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8020:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8013:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8013:6:7"
																},
																"nativeSrc": "8013:35:7",
																"nodeType": "YulFunctionCall",
																"src": "8013:35:7"
															},
															"nativeSrc": "8010:122:7",
															"nodeType": "YulIf",
															"src": "8010:122:7"
														},
														{
															"nativeSrc": "8141:34:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8141:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8168:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8168:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8155:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "8155:12:7"
																},
																"nativeSrc": "8155:20:7",
																"nodeType": "YulFunctionCall",
																"src": "8155:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8145:6:7",
																	"nodeType": "YulTypedName",
																	"src": "8145:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8184:103:7",
															"nodeType": "YulAssignment",
															"src": "8184:103:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8260:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8260:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8268:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8268:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8256:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8256:3:7"
																		},
																		"nativeSrc": "8256:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8256:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8275:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8275:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8283:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8283:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nativeSrc": "8193:62:7",
																	"nodeType": "YulIdentifier",
																	"src": "8193:62:7"
																},
																"nativeSrc": "8193:94:7",
																"nodeType": "YulFunctionCall",
																"src": "8193:94:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8184:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8184:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nativeSrc": "7923:370:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7978:6:7",
														"nodeType": "YulTypedName",
														"src": "7978:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7986:3:7",
														"nodeType": "YulTypedName",
														"src": "7986:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "7994:5:7",
														"nodeType": "YulTypedName",
														"src": "7994:5:7",
														"type": ""
													}
												],
												"src": "7923:370:7"
											},
											{
												"body": {
													"nativeSrc": "8388:28:7",
													"nodeType": "YulBlock",
													"src": "8388:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8405:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8405:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8408:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8408:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8398:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8398:6:7"
																},
																"nativeSrc": "8398:12:7",
																"nodeType": "YulFunctionCall",
																"src": "8398:12:7"
															},
															"nativeSrc": "8398:12:7",
															"nodeType": "YulExpressionStatement",
															"src": "8398:12:7"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "8299:117:7",
												"nodeType": "YulFunctionDefinition",
												"src": "8299:117:7"
											},
											{
												"body": {
													"nativeSrc": "8488:241:7",
													"nodeType": "YulBlock",
													"src": "8488:241:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "8593:22:7",
																"nodeType": "YulBlock",
																"src": "8593:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "8595:16:7",
																				"nodeType": "YulIdentifier",
																				"src": "8595:16:7"
																			},
																			"nativeSrc": "8595:18:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8595:18:7"
																		},
																		"nativeSrc": "8595:18:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8595:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8565:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8565:6:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8573:18:7",
																		"nodeType": "YulLiteral",
																		"src": "8573:18:7",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8562:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "8562:2:7"
																},
																"nativeSrc": "8562:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8562:30:7"
															},
															"nativeSrc": "8559:56:7",
															"nodeType": "YulIf",
															"src": "8559:56:7"
														},
														{
															"nativeSrc": "8625:37:7",
															"nodeType": "YulAssignment",
															"src": "8625:37:7",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "8655:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8655:6:7"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "8633:21:7",
																	"nodeType": "YulIdentifier",
																	"src": "8633:21:7"
																},
																"nativeSrc": "8633:29:7",
																"nodeType": "YulFunctionCall",
																"src": "8633:29:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8625:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8625:4:7"
																}
															]
														},
														{
															"nativeSrc": "8699:23:7",
															"nodeType": "YulAssignment",
															"src": "8699:23:7",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "8711:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "8711:4:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8717:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8717:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8707:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "8707:3:7"
																},
																"nativeSrc": "8707:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8707:15:7"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "8699:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8699:4:7"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "8422:307:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "8472:6:7",
														"nodeType": "YulTypedName",
														"src": "8472:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "8483:4:7",
														"nodeType": "YulTypedName",
														"src": "8483:4:7",
														"type": ""
													}
												],
												"src": "8422:307:7"
											},
											{
												"body": {
													"nativeSrc": "8799:84:7",
													"nodeType": "YulBlock",
													"src": "8799:84:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8823:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8823:3:7"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8828:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "8828:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8833:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "8833:6:7"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8810:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "8810:12:7"
																},
																"nativeSrc": "8810:30:7",
																"nodeType": "YulFunctionCall",
																"src": "8810:30:7"
															},
															"nativeSrc": "8810:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "8810:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8860:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "8860:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8865:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8865:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8856:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8856:3:7"
																		},
																		"nativeSrc": "8856:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8856:16:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8874:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8874:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8849:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8849:6:7"
																},
																"nativeSrc": "8849:27:7",
																"nodeType": "YulFunctionCall",
																"src": "8849:27:7"
															},
															"nativeSrc": "8849:27:7",
															"nodeType": "YulExpressionStatement",
															"src": "8849:27:7"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "8735:148:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8781:3:7",
														"nodeType": "YulTypedName",
														"src": "8781:3:7",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8786:3:7",
														"nodeType": "YulTypedName",
														"src": "8786:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8791:6:7",
														"nodeType": "YulTypedName",
														"src": "8791:6:7",
														"type": ""
													}
												],
												"src": "8735:148:7"
											},
											{
												"body": {
													"nativeSrc": "8972:340:7",
													"nodeType": "YulBlock",
													"src": "8972:340:7",
													"statements": [
														{
															"nativeSrc": "8982:74:7",
															"nodeType": "YulAssignment",
															"src": "8982:74:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9048:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9048:6:7"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "9007:40:7",
																			"nodeType": "YulIdentifier",
																			"src": "9007:40:7"
																		},
																		"nativeSrc": "9007:48:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9007:48:7"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8991:15:7",
																	"nodeType": "YulIdentifier",
																	"src": "8991:15:7"
																},
																"nativeSrc": "8991:65:7",
																"nodeType": "YulFunctionCall",
																"src": "8991:65:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8982:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8982:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9072:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9072:5:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9079:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9079:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9065:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9065:6:7"
																},
																"nativeSrc": "9065:21:7",
																"nodeType": "YulFunctionCall",
																"src": "9065:21:7"
															},
															"nativeSrc": "9065:21:7",
															"nodeType": "YulExpressionStatement",
															"src": "9065:21:7"
														},
														{
															"nativeSrc": "9095:27:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9095:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "9110:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9110:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9117:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9117:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9106:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9106:3:7"
																},
																"nativeSrc": "9106:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9106:16:7"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "9099:3:7",
																	"nodeType": "YulTypedName",
																	"src": "9099:3:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9160:83:7",
																"nodeType": "YulBlock",
																"src": "9160:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "9162:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9162:77:7"
																			},
																			"nativeSrc": "9162:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9162:79:7"
																		},
																		"nativeSrc": "9162:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9162:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "9141:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9141:3:7"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "9146:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9146:6:7"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9137:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9137:3:7"
																		},
																		"nativeSrc": "9137:16:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9137:16:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9155:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9155:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9134:2:7",
																	"nodeType": "YulIdentifier",
																	"src": "9134:2:7"
																},
																"nativeSrc": "9134:25:7",
																"nodeType": "YulFunctionCall",
																"src": "9134:25:7"
															},
															"nativeSrc": "9131:112:7",
															"nodeType": "YulIf",
															"src": "9131:112:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "9289:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9289:3:7"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "9294:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9294:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9299:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9299:6:7"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "9252:36:7",
																	"nodeType": "YulIdentifier",
																	"src": "9252:36:7"
																},
																"nativeSrc": "9252:54:7",
																"nodeType": "YulFunctionCall",
																"src": "9252:54:7"
															},
															"nativeSrc": "9252:54:7",
															"nodeType": "YulExpressionStatement",
															"src": "9252:54:7"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8889:423:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8945:3:7",
														"nodeType": "YulTypedName",
														"src": "8945:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8950:6:7",
														"nodeType": "YulTypedName",
														"src": "8950:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8958:3:7",
														"nodeType": "YulTypedName",
														"src": "8958:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8966:5:7",
														"nodeType": "YulTypedName",
														"src": "8966:5:7",
														"type": ""
													}
												],
												"src": "8889:423:7"
											},
											{
												"body": {
													"nativeSrc": "9392:277:7",
													"nodeType": "YulBlock",
													"src": "9392:277:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9441:83:7",
																"nodeType": "YulBlock",
																"src": "9441:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "9443:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9443:77:7"
																			},
																			"nativeSrc": "9443:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9443:79:7"
																		},
																		"nativeSrc": "9443:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9443:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "9420:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "9420:6:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9428:4:7",
																						"nodeType": "YulLiteral",
																						"src": "9428:4:7",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9416:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "9416:3:7"
																				},
																				"nativeSrc": "9416:17:7",
																				"nodeType": "YulFunctionCall",
																				"src": "9416:17:7"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "9435:3:7",
																				"nodeType": "YulIdentifier",
																				"src": "9435:3:7"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "9412:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9412:3:7"
																		},
																		"nativeSrc": "9412:27:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9412:27:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9405:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "9405:6:7"
																},
																"nativeSrc": "9405:35:7",
																"nodeType": "YulFunctionCall",
																"src": "9405:35:7"
															},
															"nativeSrc": "9402:122:7",
															"nodeType": "YulIf",
															"src": "9402:122:7"
														},
														{
															"nativeSrc": "9533:34:7",
															"nodeType": "YulVariableDeclaration",
															"src": "9533:34:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9560:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9560:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9547:12:7",
																	"nodeType": "YulIdentifier",
																	"src": "9547:12:7"
																},
																"nativeSrc": "9547:20:7",
																"nodeType": "YulFunctionCall",
																"src": "9547:20:7"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9537:6:7",
																	"nodeType": "YulTypedName",
																	"src": "9537:6:7",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9576:87:7",
															"nodeType": "YulAssignment",
															"src": "9576:87:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9636:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "9636:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9644:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9644:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9632:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9632:3:7"
																		},
																		"nativeSrc": "9632:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9632:17:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9651:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "9651:6:7"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "9659:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "9659:3:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "9585:46:7",
																	"nodeType": "YulIdentifier",
																	"src": "9585:46:7"
																},
																"nativeSrc": "9585:78:7",
																"nodeType": "YulFunctionCall",
																"src": "9585:78:7"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "9576:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9576:5:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "9331:338:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9370:6:7",
														"nodeType": "YulTypedName",
														"src": "9370:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9378:3:7",
														"nodeType": "YulTypedName",
														"src": "9378:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "9386:5:7",
														"nodeType": "YulTypedName",
														"src": "9386:5:7",
														"type": ""
													}
												],
												"src": "9331:338:7"
											},
											{
												"body": {
													"nativeSrc": "9868:1316:7",
													"nodeType": "YulBlock",
													"src": "9868:1316:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "9915:83:7",
																"nodeType": "YulBlock",
																"src": "9915:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9917:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "9917:77:7"
																			},
																			"nativeSrc": "9917:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "9917:79:7"
																		},
																		"nativeSrc": "9917:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "9917:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9889:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "9889:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9898:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "9898:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9885:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9885:3:7"
																		},
																		"nativeSrc": "9885:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9885:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9910:3:7",
																		"nodeType": "YulLiteral",
																		"src": "9910:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9881:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "9881:3:7"
																},
																"nativeSrc": "9881:33:7",
																"nodeType": "YulFunctionCall",
																"src": "9881:33:7"
															},
															"nativeSrc": "9878:120:7",
															"nodeType": "YulIf",
															"src": "9878:120:7"
														},
														{
															"nativeSrc": "10008:117:7",
															"nodeType": "YulBlock",
															"src": "10008:117:7",
															"statements": [
																{
																	"nativeSrc": "10023:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10023:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10037:1:7",
																		"nodeType": "YulLiteral",
																		"src": "10037:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10027:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10027:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10052:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10052:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10087:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10087:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10098:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10098:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10083:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10083:3:7"
																				},
																				"nativeSrc": "10083:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10083:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10107:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10107:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10062:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10062:20:7"
																		},
																		"nativeSrc": "10062:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10062:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10052:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10052:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10135:118:7",
															"nodeType": "YulBlock",
															"src": "10135:118:7",
															"statements": [
																{
																	"nativeSrc": "10150:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10150:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10164:2:7",
																		"nodeType": "YulLiteral",
																		"src": "10164:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10154:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10154:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10180:63:7",
																	"nodeType": "YulAssignment",
																	"src": "10180:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10215:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10215:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10226:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10226:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10211:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10211:3:7"
																				},
																				"nativeSrc": "10211:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10211:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10235:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10235:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10190:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "10190:20:7"
																		},
																		"nativeSrc": "10190:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10190:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10180:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10180:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10263:303:7",
															"nodeType": "YulBlock",
															"src": "10263:303:7",
															"statements": [
																{
																	"nativeSrc": "10278:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10278:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10309:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10309:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10320:2:7",
																						"nodeType": "YulLiteral",
																						"src": "10320:2:7",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10305:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10305:3:7"
																				},
																				"nativeSrc": "10305:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10305:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10292:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "10292:12:7"
																		},
																		"nativeSrc": "10292:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10292:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10282:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10282:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10371:83:7",
																		"nodeType": "YulBlock",
																		"src": "10371:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10373:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "10373:77:7"
																					},
																					"nativeSrc": "10373:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10373:79:7"
																				},
																				"nativeSrc": "10373:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "10373:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10343:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10343:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10351:18:7",
																				"nodeType": "YulLiteral",
																				"src": "10351:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10340:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10340:2:7"
																		},
																		"nativeSrc": "10340:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10340:30:7"
																	},
																	"nativeSrc": "10337:117:7",
																	"nodeType": "YulIf",
																	"src": "10337:117:7"
																},
																{
																	"nativeSrc": "10468:88:7",
																	"nodeType": "YulAssignment",
																	"src": "10468:88:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10528:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10528:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10539:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10539:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10524:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10524:3:7"
																				},
																				"nativeSrc": "10524:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10524:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10548:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10548:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10478:45:7",
																			"nodeType": "YulIdentifier",
																			"src": "10478:45:7"
																		},
																		"nativeSrc": "10478:78:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10478:78:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "10468:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10468:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10576:303:7",
															"nodeType": "YulBlock",
															"src": "10576:303:7",
															"statements": [
																{
																	"nativeSrc": "10591:46:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10591:46:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10622:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10622:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10633:2:7",
																						"nodeType": "YulLiteral",
																						"src": "10633:2:7",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10618:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10618:3:7"
																				},
																				"nativeSrc": "10618:18:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10618:18:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10605:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "10605:12:7"
																		},
																		"nativeSrc": "10605:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10605:32:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10595:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10595:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10684:83:7",
																		"nodeType": "YulBlock",
																		"src": "10684:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "10686:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "10686:77:7"
																					},
																					"nativeSrc": "10686:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "10686:79:7"
																				},
																				"nativeSrc": "10686:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "10686:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10656:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10656:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10664:18:7",
																				"nodeType": "YulLiteral",
																				"src": "10664:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10653:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10653:2:7"
																		},
																		"nativeSrc": "10653:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10653:30:7"
																	},
																	"nativeSrc": "10650:117:7",
																	"nodeType": "YulIf",
																	"src": "10650:117:7"
																},
																{
																	"nativeSrc": "10781:88:7",
																	"nodeType": "YulAssignment",
																	"src": "10781:88:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10841:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10841:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10852:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "10852:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10837:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10837:3:7"
																				},
																				"nativeSrc": "10837:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10837:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10861:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "10861:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nativeSrc": "10791:45:7",
																			"nodeType": "YulIdentifier",
																			"src": "10791:45:7"
																		},
																		"nativeSrc": "10791:78:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10791:78:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "10781:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "10781:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10889:288:7",
															"nodeType": "YulBlock",
															"src": "10889:288:7",
															"statements": [
																{
																	"nativeSrc": "10904:47:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10904:47:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10935:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "10935:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "10946:3:7",
																						"nodeType": "YulLiteral",
																						"src": "10946:3:7",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10931:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "10931:3:7"
																				},
																				"nativeSrc": "10931:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "10931:19:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "10918:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "10918:12:7"
																		},
																		"nativeSrc": "10918:33:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10918:33:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10908:6:7",
																			"nodeType": "YulTypedName",
																			"src": "10908:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "10998:83:7",
																		"nodeType": "YulBlock",
																		"src": "10998:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "11000:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "11000:77:7"
																					},
																					"nativeSrc": "11000:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "11000:79:7"
																				},
																				"nativeSrc": "11000:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "11000:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "10970:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "10970:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10978:18:7",
																				"nodeType": "YulLiteral",
																				"src": "10978:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10967:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "10967:2:7"
																		},
																		"nativeSrc": "10967:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "10967:30:7"
																	},
																	"nativeSrc": "10964:117:7",
																	"nodeType": "YulIf",
																	"src": "10964:117:7"
																},
																{
																	"nativeSrc": "11095:72:7",
																	"nodeType": "YulAssignment",
																	"src": "11095:72:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11139:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "11139:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11150:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "11150:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11135:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11135:3:7"
																				},
																				"nativeSrc": "11135:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11135:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11159:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11159:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "11105:29:7",
																			"nodeType": "YulIdentifier",
																			"src": "11105:29:7"
																		},
																		"nativeSrc": "11105:62:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11105:62:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "11095:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "11095:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nativeSrc": "9675:1509:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9806:9:7",
														"nodeType": "YulTypedName",
														"src": "9806:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9817:7:7",
														"nodeType": "YulTypedName",
														"src": "9817:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9829:6:7",
														"nodeType": "YulTypedName",
														"src": "9829:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9837:6:7",
														"nodeType": "YulTypedName",
														"src": "9837:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9845:6:7",
														"nodeType": "YulTypedName",
														"src": "9845:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9853:6:7",
														"nodeType": "YulTypedName",
														"src": "9853:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9861:6:7",
														"nodeType": "YulTypedName",
														"src": "9861:6:7",
														"type": ""
													}
												],
												"src": "9675:1509:7"
											},
											{
												"body": {
													"nativeSrc": "11253:52:7",
													"nodeType": "YulBlock",
													"src": "11253:52:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11270:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "11270:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11292:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "11292:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nativeSrc": "11275:16:7",
																			"nodeType": "YulIdentifier",
																			"src": "11275:16:7"
																		},
																		"nativeSrc": "11275:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11275:23:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11263:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "11263:6:7"
																},
																"nativeSrc": "11263:36:7",
																"nodeType": "YulFunctionCall",
																"src": "11263:36:7"
															},
															"nativeSrc": "11263:36:7",
															"nodeType": "YulExpressionStatement",
															"src": "11263:36:7"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nativeSrc": "11190:115:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11241:5:7",
														"nodeType": "YulTypedName",
														"src": "11241:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11248:3:7",
														"nodeType": "YulTypedName",
														"src": "11248:3:7",
														"type": ""
													}
												],
												"src": "11190:115:7"
											},
											{
												"body": {
													"nativeSrc": "11407:122:7",
													"nodeType": "YulBlock",
													"src": "11407:122:7",
													"statements": [
														{
															"nativeSrc": "11417:26:7",
															"nodeType": "YulAssignment",
															"src": "11417:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11429:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "11429:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11440:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11440:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11425:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11425:3:7"
																},
																"nativeSrc": "11425:18:7",
																"nodeType": "YulFunctionCall",
																"src": "11425:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11417:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "11417:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11495:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "11495:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11508:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11508:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11519:1:7",
																				"nodeType": "YulLiteral",
																				"src": "11519:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11504:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11504:3:7"
																		},
																		"nativeSrc": "11504:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11504:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nativeSrc": "11453:41:7",
																	"nodeType": "YulIdentifier",
																	"src": "11453:41:7"
																},
																"nativeSrc": "11453:69:7",
																"nodeType": "YulFunctionCall",
																"src": "11453:69:7"
															},
															"nativeSrc": "11453:69:7",
															"nodeType": "YulExpressionStatement",
															"src": "11453:69:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nativeSrc": "11311:218:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11379:9:7",
														"nodeType": "YulTypedName",
														"src": "11379:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11391:6:7",
														"nodeType": "YulTypedName",
														"src": "11391:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11402:4:7",
														"nodeType": "YulTypedName",
														"src": "11402:4:7",
														"type": ""
													}
												],
												"src": "11311:218:7"
											},
											{
												"body": {
													"nativeSrc": "11601:263:7",
													"nodeType": "YulBlock",
													"src": "11601:263:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "11647:83:7",
																"nodeType": "YulBlock",
																"src": "11647:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11649:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "11649:77:7"
																			},
																			"nativeSrc": "11649:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "11649:79:7"
																		},
																		"nativeSrc": "11649:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "11649:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11622:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11622:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11631:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "11631:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11618:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11618:3:7"
																		},
																		"nativeSrc": "11618:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11618:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11643:2:7",
																		"nodeType": "YulLiteral",
																		"src": "11643:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11614:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11614:3:7"
																},
																"nativeSrc": "11614:32:7",
																"nodeType": "YulFunctionCall",
																"src": "11614:32:7"
															},
															"nativeSrc": "11611:119:7",
															"nodeType": "YulIf",
															"src": "11611:119:7"
														},
														{
															"nativeSrc": "11740:117:7",
															"nodeType": "YulBlock",
															"src": "11740:117:7",
															"statements": [
																{
																	"nativeSrc": "11755:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11755:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11769:1:7",
																		"nodeType": "YulLiteral",
																		"src": "11769:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11759:6:7",
																			"nodeType": "YulTypedName",
																			"src": "11759:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11784:63:7",
																	"nodeType": "YulAssignment",
																	"src": "11784:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11819:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "11819:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11830:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "11830:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11815:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "11815:3:7"
																				},
																				"nativeSrc": "11815:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "11815:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11839:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11839:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11794:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "11794:20:7"
																		},
																		"nativeSrc": "11794:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11794:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11784:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "11784:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "11535:329:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11571:9:7",
														"nodeType": "YulTypedName",
														"src": "11571:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11582:7:7",
														"nodeType": "YulTypedName",
														"src": "11582:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11594:6:7",
														"nodeType": "YulTypedName",
														"src": "11594:6:7",
														"type": ""
													}
												],
												"src": "11535:329:7"
											},
											{
												"body": {
													"nativeSrc": "11970:519:7",
													"nodeType": "YulBlock",
													"src": "11970:519:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "12016:83:7",
																"nodeType": "YulBlock",
																"src": "12016:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12018:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "12018:77:7"
																			},
																			"nativeSrc": "12018:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12018:79:7"
																		},
																		"nativeSrc": "12018:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12018:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11991:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "11991:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12000:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12000:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11987:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "11987:3:7"
																		},
																		"nativeSrc": "11987:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "11987:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12012:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12012:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11983:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "11983:3:7"
																},
																"nativeSrc": "11983:32:7",
																"nodeType": "YulFunctionCall",
																"src": "11983:32:7"
															},
															"nativeSrc": "11980:119:7",
															"nodeType": "YulIf",
															"src": "11980:119:7"
														},
														{
															"nativeSrc": "12109:117:7",
															"nodeType": "YulBlock",
															"src": "12109:117:7",
															"statements": [
																{
																	"nativeSrc": "12124:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12124:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12138:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12138:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12128:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12128:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12153:63:7",
																	"nodeType": "YulAssignment",
																	"src": "12153:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12188:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12188:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12199:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "12199:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12184:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12184:3:7"
																				},
																				"nativeSrc": "12184:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12184:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12208:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12208:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12163:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "12163:20:7"
																		},
																		"nativeSrc": "12163:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12163:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12153:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12153:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12236:118:7",
															"nodeType": "YulBlock",
															"src": "12236:118:7",
															"statements": [
																{
																	"nativeSrc": "12251:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12251:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12265:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12265:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12255:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12255:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12281:63:7",
																	"nodeType": "YulAssignment",
																	"src": "12281:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12316:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12316:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12327:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "12327:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12312:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12312:3:7"
																				},
																				"nativeSrc": "12312:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12312:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12336:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12336:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12291:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "12291:20:7"
																		},
																		"nativeSrc": "12291:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12291:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12281:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12281:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12364:118:7",
															"nodeType": "YulBlock",
															"src": "12364:118:7",
															"statements": [
																{
																	"nativeSrc": "12379:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12379:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12393:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12393:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12383:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12383:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12409:63:7",
																	"nodeType": "YulAssignment",
																	"src": "12409:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12444:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12444:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12455:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "12455:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12440:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12440:3:7"
																				},
																				"nativeSrc": "12440:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12440:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12464:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12464:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12419:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "12419:20:7"
																		},
																		"nativeSrc": "12419:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12419:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12409:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12409:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "11870:619:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11924:9:7",
														"nodeType": "YulTypedName",
														"src": "11924:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11935:7:7",
														"nodeType": "YulTypedName",
														"src": "11935:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11947:6:7",
														"nodeType": "YulTypedName",
														"src": "11947:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11955:6:7",
														"nodeType": "YulTypedName",
														"src": "11955:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11963:6:7",
														"nodeType": "YulTypedName",
														"src": "11963:6:7",
														"type": ""
													}
												],
												"src": "11870:619:7"
											},
											{
												"body": {
													"nativeSrc": "12638:946:7",
													"nodeType": "YulBlock",
													"src": "12638:946:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "12685:83:7",
																"nodeType": "YulBlock",
																"src": "12685:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12687:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "12687:77:7"
																			},
																			"nativeSrc": "12687:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "12687:79:7"
																		},
																		"nativeSrc": "12687:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "12687:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12659:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12659:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12668:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "12668:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12655:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "12655:3:7"
																		},
																		"nativeSrc": "12655:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12655:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12680:3:7",
																		"nodeType": "YulLiteral",
																		"src": "12680:3:7",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12651:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "12651:3:7"
																},
																"nativeSrc": "12651:33:7",
																"nodeType": "YulFunctionCall",
																"src": "12651:33:7"
															},
															"nativeSrc": "12648:120:7",
															"nodeType": "YulIf",
															"src": "12648:120:7"
														},
														{
															"nativeSrc": "12778:117:7",
															"nodeType": "YulBlock",
															"src": "12778:117:7",
															"statements": [
																{
																	"nativeSrc": "12793:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12793:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12807:1:7",
																		"nodeType": "YulLiteral",
																		"src": "12807:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12797:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12797:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12822:63:7",
																	"nodeType": "YulAssignment",
																	"src": "12822:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12857:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12857:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12868:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "12868:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12853:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12853:3:7"
																				},
																				"nativeSrc": "12853:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12853:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12877:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "12877:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12832:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "12832:20:7"
																		},
																		"nativeSrc": "12832:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12832:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12822:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12822:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12905:118:7",
															"nodeType": "YulBlock",
															"src": "12905:118:7",
															"statements": [
																{
																	"nativeSrc": "12920:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12920:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12934:2:7",
																		"nodeType": "YulLiteral",
																		"src": "12934:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12924:6:7",
																			"nodeType": "YulTypedName",
																			"src": "12924:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12950:63:7",
																	"nodeType": "YulAssignment",
																	"src": "12950:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12985:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "12985:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12996:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "12996:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12981:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "12981:3:7"
																				},
																				"nativeSrc": "12981:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "12981:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13005:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13005:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12960:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "12960:20:7"
																		},
																		"nativeSrc": "12960:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "12960:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12950:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "12950:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13033:118:7",
															"nodeType": "YulBlock",
															"src": "13033:118:7",
															"statements": [
																{
																	"nativeSrc": "13048:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13048:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13062:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13062:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13052:6:7",
																			"nodeType": "YulTypedName",
																			"src": "13052:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13078:63:7",
																	"nodeType": "YulAssignment",
																	"src": "13078:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13113:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "13113:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13124:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "13124:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13109:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "13109:3:7"
																				},
																				"nativeSrc": "13109:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13109:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13133:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13133:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13088:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "13088:20:7"
																		},
																		"nativeSrc": "13088:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13088:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "13078:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "13078:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13161:118:7",
															"nodeType": "YulBlock",
															"src": "13161:118:7",
															"statements": [
																{
																	"nativeSrc": "13176:16:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13176:16:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13190:2:7",
																		"nodeType": "YulLiteral",
																		"src": "13190:2:7",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13180:6:7",
																			"nodeType": "YulTypedName",
																			"src": "13180:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13206:63:7",
																	"nodeType": "YulAssignment",
																	"src": "13206:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13241:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "13241:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13252:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "13252:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13237:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "13237:3:7"
																				},
																				"nativeSrc": "13237:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13237:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13261:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13261:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "13216:20:7",
																			"nodeType": "YulIdentifier",
																			"src": "13216:20:7"
																		},
																		"nativeSrc": "13216:53:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13216:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "13206:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "13206:6:7"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13289:288:7",
															"nodeType": "YulBlock",
															"src": "13289:288:7",
															"statements": [
																{
																	"nativeSrc": "13304:47:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13304:47:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13335:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "13335:9:7"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13346:3:7",
																						"nodeType": "YulLiteral",
																						"src": "13346:3:7",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13331:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "13331:3:7"
																				},
																				"nativeSrc": "13331:19:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13331:19:7"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "13318:12:7",
																			"nodeType": "YulIdentifier",
																			"src": "13318:12:7"
																		},
																		"nativeSrc": "13318:33:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13318:33:7"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13308:6:7",
																			"nodeType": "YulTypedName",
																			"src": "13308:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "13398:83:7",
																		"nodeType": "YulBlock",
																		"src": "13398:83:7",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "13400:77:7",
																						"nodeType": "YulIdentifier",
																						"src": "13400:77:7"
																					},
																					"nativeSrc": "13400:79:7",
																					"nodeType": "YulFunctionCall",
																					"src": "13400:79:7"
																				},
																				"nativeSrc": "13400:79:7",
																				"nodeType": "YulExpressionStatement",
																				"src": "13400:79:7"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "13370:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13370:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13378:18:7",
																				"nodeType": "YulLiteral",
																				"src": "13378:18:7",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "13367:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "13367:2:7"
																		},
																		"nativeSrc": "13367:30:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13367:30:7"
																	},
																	"nativeSrc": "13364:117:7",
																	"nodeType": "YulIf",
																	"src": "13364:117:7"
																},
																{
																	"nativeSrc": "13495:72:7",
																	"nodeType": "YulAssignment",
																	"src": "13495:72:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13539:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "13539:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13550:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "13550:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13535:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "13535:3:7"
																				},
																				"nativeSrc": "13535:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "13535:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13559:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "13559:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "13505:29:7",
																			"nodeType": "YulIdentifier",
																			"src": "13505:29:7"
																		},
																		"nativeSrc": "13505:62:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13505:62:7"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "13495:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "13495:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nativeSrc": "12495:1089:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12576:9:7",
														"nodeType": "YulTypedName",
														"src": "12576:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12587:7:7",
														"nodeType": "YulTypedName",
														"src": "12587:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12599:6:7",
														"nodeType": "YulTypedName",
														"src": "12599:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12607:6:7",
														"nodeType": "YulTypedName",
														"src": "12607:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12615:6:7",
														"nodeType": "YulTypedName",
														"src": "12615:6:7",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12623:6:7",
														"nodeType": "YulTypedName",
														"src": "12623:6:7",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "12631:6:7",
														"nodeType": "YulTypedName",
														"src": "12631:6:7",
														"type": ""
													}
												],
												"src": "12495:1089:7"
											},
											{
												"body": {
													"nativeSrc": "13686:73:7",
													"nodeType": "YulBlock",
													"src": "13686:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13703:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13703:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13708:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "13708:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13696:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13696:6:7"
																},
																"nativeSrc": "13696:19:7",
																"nodeType": "YulFunctionCall",
																"src": "13696:19:7"
															},
															"nativeSrc": "13696:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "13696:19:7"
														},
														{
															"nativeSrc": "13724:29:7",
															"nodeType": "YulAssignment",
															"src": "13724:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13743:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "13743:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13748:4:7",
																		"nodeType": "YulLiteral",
																		"src": "13748:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13739:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "13739:3:7"
																},
																"nativeSrc": "13739:14:7",
																"nodeType": "YulFunctionCall",
																"src": "13739:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "13724:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "13724:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "13590:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13658:3:7",
														"nodeType": "YulTypedName",
														"src": "13658:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13663:6:7",
														"nodeType": "YulTypedName",
														"src": "13663:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "13674:11:7",
														"nodeType": "YulTypedName",
														"src": "13674:11:7",
														"type": ""
													}
												],
												"src": "13590:169:7"
											},
											{
												"body": {
													"nativeSrc": "13871:67:7",
													"nodeType": "YulBlock",
													"src": "13871:67:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13893:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "13893:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13901:1:7",
																				"nodeType": "YulLiteral",
																				"src": "13901:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13889:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "13889:3:7"
																		},
																		"nativeSrc": "13889:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "13889:14:7"
																	},
																	{
																		"hexValue": "496e76616c696420455243313135352061646472657373",
																		"kind": "string",
																		"nativeSrc": "13905:25:7",
																		"nodeType": "YulLiteral",
																		"src": "13905:25:7",
																		"type": "",
																		"value": "Invalid ERC1155 address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13882:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "13882:6:7"
																},
																"nativeSrc": "13882:49:7",
																"nodeType": "YulFunctionCall",
																"src": "13882:49:7"
															},
															"nativeSrc": "13882:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "13882:49:7"
														}
													]
												},
												"name": "store_literal_in_memory_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f",
												"nativeSrc": "13765:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13863:6:7",
														"nodeType": "YulTypedName",
														"src": "13863:6:7",
														"type": ""
													}
												],
												"src": "13765:173:7"
											},
											{
												"body": {
													"nativeSrc": "14090:220:7",
													"nodeType": "YulBlock",
													"src": "14090:220:7",
													"statements": [
														{
															"nativeSrc": "14100:74:7",
															"nodeType": "YulAssignment",
															"src": "14100:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14166:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14166:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14171:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14171:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14107:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "14107:58:7"
																},
																"nativeSrc": "14107:67:7",
																"nodeType": "YulFunctionCall",
																"src": "14107:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14100:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14100:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14272:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14272:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f",
																	"nativeSrc": "14183:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "14183:88:7"
																},
																"nativeSrc": "14183:93:7",
																"nodeType": "YulFunctionCall",
																"src": "14183:93:7"
															},
															"nativeSrc": "14183:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "14183:93:7"
														},
														{
															"nativeSrc": "14285:19:7",
															"nodeType": "YulAssignment",
															"src": "14285:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14296:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "14296:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14301:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14301:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14292:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14292:3:7"
																},
																"nativeSrc": "14292:12:7",
																"nodeType": "YulFunctionCall",
																"src": "14292:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14285:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14285:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13944:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14078:3:7",
														"nodeType": "YulTypedName",
														"src": "14078:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14086:3:7",
														"nodeType": "YulTypedName",
														"src": "14086:3:7",
														"type": ""
													}
												],
												"src": "13944:366:7"
											},
											{
												"body": {
													"nativeSrc": "14487:248:7",
													"nodeType": "YulBlock",
													"src": "14487:248:7",
													"statements": [
														{
															"nativeSrc": "14497:26:7",
															"nodeType": "YulAssignment",
															"src": "14497:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14509:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "14509:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14520:2:7",
																		"nodeType": "YulLiteral",
																		"src": "14520:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14505:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "14505:3:7"
																},
																"nativeSrc": "14505:18:7",
																"nodeType": "YulFunctionCall",
																"src": "14505:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14497:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14497:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14544:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14544:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14555:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14555:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14540:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14540:3:7"
																		},
																		"nativeSrc": "14540:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14540:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14563:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "14563:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14569:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "14569:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14559:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14559:3:7"
																		},
																		"nativeSrc": "14559:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14559:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14533:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14533:6:7"
																},
																"nativeSrc": "14533:47:7",
																"nodeType": "YulFunctionCall",
																"src": "14533:47:7"
															},
															"nativeSrc": "14533:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "14533:47:7"
														},
														{
															"nativeSrc": "14589:139:7",
															"nodeType": "YulAssignment",
															"src": "14589:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14723:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "14723:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14597:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "14597:124:7"
																},
																"nativeSrc": "14597:131:7",
																"nodeType": "YulFunctionCall",
																"src": "14597:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14589:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "14589:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14316:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14467:9:7",
														"nodeType": "YulTypedName",
														"src": "14467:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14482:4:7",
														"nodeType": "YulTypedName",
														"src": "14482:4:7",
														"type": ""
													}
												],
												"src": "14316:419:7"
											},
											{
												"body": {
													"nativeSrc": "14847:124:7",
													"nodeType": "YulBlock",
													"src": "14847:124:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14869:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14869:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14877:1:7",
																				"nodeType": "YulLiteral",
																				"src": "14877:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14865:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14865:3:7"
																		},
																		"nativeSrc": "14865:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14865:14:7"
																	},
																	{
																		"hexValue": "4f6e6c792074686520746f6b656e206f776e65722063616e2074726967676572",
																		"kind": "string",
																		"nativeSrc": "14881:34:7",
																		"nodeType": "YulLiteral",
																		"src": "14881:34:7",
																		"type": "",
																		"value": "Only the token owner can trigger"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14858:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14858:6:7"
																},
																"nativeSrc": "14858:58:7",
																"nodeType": "YulFunctionCall",
																"src": "14858:58:7"
															},
															"nativeSrc": "14858:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "14858:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14937:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "14937:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14945:2:7",
																				"nodeType": "YulLiteral",
																				"src": "14945:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14933:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "14933:3:7"
																		},
																		"nativeSrc": "14933:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "14933:15:7"
																	},
																	{
																		"hexValue": "20636f6e76657273696f6e",
																		"kind": "string",
																		"nativeSrc": "14950:13:7",
																		"nodeType": "YulLiteral",
																		"src": "14950:13:7",
																		"type": "",
																		"value": " conversion"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14926:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "14926:6:7"
																},
																"nativeSrc": "14926:38:7",
																"nodeType": "YulFunctionCall",
																"src": "14926:38:7"
															},
															"nativeSrc": "14926:38:7",
															"nodeType": "YulExpressionStatement",
															"src": "14926:38:7"
														}
													]
												},
												"name": "store_literal_in_memory_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46",
												"nativeSrc": "14741:230:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14839:6:7",
														"nodeType": "YulTypedName",
														"src": "14839:6:7",
														"type": ""
													}
												],
												"src": "14741:230:7"
											},
											{
												"body": {
													"nativeSrc": "15123:220:7",
													"nodeType": "YulBlock",
													"src": "15123:220:7",
													"statements": [
														{
															"nativeSrc": "15133:74:7",
															"nodeType": "YulAssignment",
															"src": "15133:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15199:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15199:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15204:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15204:2:7",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15140:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "15140:58:7"
																},
																"nativeSrc": "15140:67:7",
																"nodeType": "YulFunctionCall",
																"src": "15140:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15133:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15133:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15305:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15305:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46",
																	"nativeSrc": "15216:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "15216:88:7"
																},
																"nativeSrc": "15216:93:7",
																"nodeType": "YulFunctionCall",
																"src": "15216:93:7"
															},
															"nativeSrc": "15216:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "15216:93:7"
														},
														{
															"nativeSrc": "15318:19:7",
															"nodeType": "YulAssignment",
															"src": "15318:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15329:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "15329:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15334:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15334:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15325:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15325:3:7"
																},
																"nativeSrc": "15325:12:7",
																"nodeType": "YulFunctionCall",
																"src": "15325:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15318:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15318:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14977:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15111:3:7",
														"nodeType": "YulTypedName",
														"src": "15111:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15119:3:7",
														"nodeType": "YulTypedName",
														"src": "15119:3:7",
														"type": ""
													}
												],
												"src": "14977:366:7"
											},
											{
												"body": {
													"nativeSrc": "15520:248:7",
													"nodeType": "YulBlock",
													"src": "15520:248:7",
													"statements": [
														{
															"nativeSrc": "15530:26:7",
															"nodeType": "YulAssignment",
															"src": "15530:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15542:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "15542:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15553:2:7",
																		"nodeType": "YulLiteral",
																		"src": "15553:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15538:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "15538:3:7"
																},
																"nativeSrc": "15538:18:7",
																"nodeType": "YulFunctionCall",
																"src": "15538:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15530:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15530:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15577:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15577:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15588:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15588:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15573:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15573:3:7"
																		},
																		"nativeSrc": "15573:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15573:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15596:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "15596:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15602:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "15602:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15592:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15592:3:7"
																		},
																		"nativeSrc": "15592:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15592:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15566:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15566:6:7"
																},
																"nativeSrc": "15566:47:7",
																"nodeType": "YulFunctionCall",
																"src": "15566:47:7"
															},
															"nativeSrc": "15566:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "15566:47:7"
														},
														{
															"nativeSrc": "15622:139:7",
															"nodeType": "YulAssignment",
															"src": "15622:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15756:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "15756:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15630:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "15630:124:7"
																},
																"nativeSrc": "15630:131:7",
																"nodeType": "YulFunctionCall",
																"src": "15630:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15622:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "15622:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15349:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15500:9:7",
														"nodeType": "YulTypedName",
														"src": "15500:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15515:4:7",
														"nodeType": "YulTypedName",
														"src": "15515:4:7",
														"type": ""
													}
												],
												"src": "15349:419:7"
											},
											{
												"body": {
													"nativeSrc": "15880:74:7",
													"nodeType": "YulBlock",
													"src": "15880:74:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15902:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "15902:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15910:1:7",
																				"nodeType": "YulLiteral",
																				"src": "15910:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15898:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "15898:3:7"
																		},
																		"nativeSrc": "15898:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "15898:14:7"
																	},
																	{
																		"hexValue": "49447320616e642076616c756573206c656e677468206d69736d61746368",
																		"kind": "string",
																		"nativeSrc": "15914:32:7",
																		"nodeType": "YulLiteral",
																		"src": "15914:32:7",
																		"type": "",
																		"value": "IDs and values length mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15891:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "15891:6:7"
																},
																"nativeSrc": "15891:56:7",
																"nodeType": "YulFunctionCall",
																"src": "15891:56:7"
															},
															"nativeSrc": "15891:56:7",
															"nodeType": "YulExpressionStatement",
															"src": "15891:56:7"
														}
													]
												},
												"name": "store_literal_in_memory_84631b1411dfd30314397a1487d6a580e00f82562cae361125f25c598b227a6d",
												"nativeSrc": "15774:180:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15872:6:7",
														"nodeType": "YulTypedName",
														"src": "15872:6:7",
														"type": ""
													}
												],
												"src": "15774:180:7"
											},
											{
												"body": {
													"nativeSrc": "16106:220:7",
													"nodeType": "YulBlock",
													"src": "16106:220:7",
													"statements": [
														{
															"nativeSrc": "16116:74:7",
															"nodeType": "YulAssignment",
															"src": "16116:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16182:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16182:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16187:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16187:2:7",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16123:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "16123:58:7"
																},
																"nativeSrc": "16123:67:7",
																"nodeType": "YulFunctionCall",
																"src": "16123:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16116:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16116:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16288:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16288:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_84631b1411dfd30314397a1487d6a580e00f82562cae361125f25c598b227a6d",
																	"nativeSrc": "16199:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "16199:88:7"
																},
																"nativeSrc": "16199:93:7",
																"nodeType": "YulFunctionCall",
																"src": "16199:93:7"
															},
															"nativeSrc": "16199:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "16199:93:7"
														},
														{
															"nativeSrc": "16301:19:7",
															"nodeType": "YulAssignment",
															"src": "16301:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16312:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "16312:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16317:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16317:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16308:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16308:3:7"
																},
																"nativeSrc": "16308:12:7",
																"nodeType": "YulFunctionCall",
																"src": "16308:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16301:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16301:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_84631b1411dfd30314397a1487d6a580e00f82562cae361125f25c598b227a6d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15960:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16094:3:7",
														"nodeType": "YulTypedName",
														"src": "16094:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16102:3:7",
														"nodeType": "YulTypedName",
														"src": "16102:3:7",
														"type": ""
													}
												],
												"src": "15960:366:7"
											},
											{
												"body": {
													"nativeSrc": "16503:248:7",
													"nodeType": "YulBlock",
													"src": "16503:248:7",
													"statements": [
														{
															"nativeSrc": "16513:26:7",
															"nodeType": "YulAssignment",
															"src": "16513:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16525:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "16525:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16536:2:7",
																		"nodeType": "YulLiteral",
																		"src": "16536:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16521:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "16521:3:7"
																},
																"nativeSrc": "16521:18:7",
																"nodeType": "YulFunctionCall",
																"src": "16521:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16513:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16513:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16560:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16560:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16571:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16571:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16556:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16556:3:7"
																		},
																		"nativeSrc": "16556:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16556:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16579:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "16579:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16585:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "16585:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16575:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16575:3:7"
																		},
																		"nativeSrc": "16575:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16575:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16549:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16549:6:7"
																},
																"nativeSrc": "16549:47:7",
																"nodeType": "YulFunctionCall",
																"src": "16549:47:7"
															},
															"nativeSrc": "16549:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "16549:47:7"
														},
														{
															"nativeSrc": "16605:139:7",
															"nodeType": "YulAssignment",
															"src": "16605:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16739:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "16739:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_84631b1411dfd30314397a1487d6a580e00f82562cae361125f25c598b227a6d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16613:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "16613:124:7"
																},
																"nativeSrc": "16613:131:7",
																"nodeType": "YulFunctionCall",
																"src": "16613:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16605:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "16605:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_84631b1411dfd30314397a1487d6a580e00f82562cae361125f25c598b227a6d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16332:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16483:9:7",
														"nodeType": "YulTypedName",
														"src": "16483:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16498:4:7",
														"nodeType": "YulTypedName",
														"src": "16498:4:7",
														"type": ""
													}
												],
												"src": "16332:419:7"
											},
											{
												"body": {
													"nativeSrc": "16863:63:7",
													"nodeType": "YulBlock",
													"src": "16863:63:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16885:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "16885:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16893:1:7",
																				"nodeType": "YulLiteral",
																				"src": "16893:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16881:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "16881:3:7"
																		},
																		"nativeSrc": "16881:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "16881:14:7"
																	},
																	{
																		"hexValue": "455243323020746f6b656e206e6f7420736574",
																		"kind": "string",
																		"nativeSrc": "16897:21:7",
																		"nodeType": "YulLiteral",
																		"src": "16897:21:7",
																		"type": "",
																		"value": "ERC20 token not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16874:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "16874:6:7"
																},
																"nativeSrc": "16874:45:7",
																"nodeType": "YulFunctionCall",
																"src": "16874:45:7"
															},
															"nativeSrc": "16874:45:7",
															"nodeType": "YulExpressionStatement",
															"src": "16874:45:7"
														}
													]
												},
												"name": "store_literal_in_memory_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864",
												"nativeSrc": "16757:169:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16855:6:7",
														"nodeType": "YulTypedName",
														"src": "16855:6:7",
														"type": ""
													}
												],
												"src": "16757:169:7"
											},
											{
												"body": {
													"nativeSrc": "17078:220:7",
													"nodeType": "YulBlock",
													"src": "17078:220:7",
													"statements": [
														{
															"nativeSrc": "17088:74:7",
															"nodeType": "YulAssignment",
															"src": "17088:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17154:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17154:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17159:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17159:2:7",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17095:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "17095:58:7"
																},
																"nativeSrc": "17095:67:7",
																"nodeType": "YulFunctionCall",
																"src": "17095:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17088:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17088:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17260:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17260:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864",
																	"nativeSrc": "17171:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "17171:88:7"
																},
																"nativeSrc": "17171:93:7",
																"nodeType": "YulFunctionCall",
																"src": "17171:93:7"
															},
															"nativeSrc": "17171:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "17171:93:7"
														},
														{
															"nativeSrc": "17273:19:7",
															"nodeType": "YulAssignment",
															"src": "17273:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17284:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "17284:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17289:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17289:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17280:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17280:3:7"
																},
																"nativeSrc": "17280:12:7",
																"nodeType": "YulFunctionCall",
																"src": "17280:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17273:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17273:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16932:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17066:3:7",
														"nodeType": "YulTypedName",
														"src": "17066:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17074:3:7",
														"nodeType": "YulTypedName",
														"src": "17074:3:7",
														"type": ""
													}
												],
												"src": "16932:366:7"
											},
											{
												"body": {
													"nativeSrc": "17475:248:7",
													"nodeType": "YulBlock",
													"src": "17475:248:7",
													"statements": [
														{
															"nativeSrc": "17485:26:7",
															"nodeType": "YulAssignment",
															"src": "17485:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17497:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "17497:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17508:2:7",
																		"nodeType": "YulLiteral",
																		"src": "17508:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17493:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "17493:3:7"
																},
																"nativeSrc": "17493:18:7",
																"nodeType": "YulFunctionCall",
																"src": "17493:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17485:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17485:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17532:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17532:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17543:1:7",
																				"nodeType": "YulLiteral",
																				"src": "17543:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17528:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17528:3:7"
																		},
																		"nativeSrc": "17528:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17528:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17551:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "17551:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17557:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "17557:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17547:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "17547:3:7"
																		},
																		"nativeSrc": "17547:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "17547:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17521:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17521:6:7"
																},
																"nativeSrc": "17521:47:7",
																"nodeType": "YulFunctionCall",
																"src": "17521:47:7"
															},
															"nativeSrc": "17521:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "17521:47:7"
														},
														{
															"nativeSrc": "17577:139:7",
															"nodeType": "YulAssignment",
															"src": "17577:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17711:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "17711:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17585:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "17585:124:7"
																},
																"nativeSrc": "17585:131:7",
																"nodeType": "YulFunctionCall",
																"src": "17585:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17577:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "17577:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17304:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17455:9:7",
														"nodeType": "YulTypedName",
														"src": "17455:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17470:4:7",
														"nodeType": "YulTypedName",
														"src": "17470:4:7",
														"type": ""
													}
												],
												"src": "17304:419:7"
											},
											{
												"body": {
													"nativeSrc": "17757:152:7",
													"nodeType": "YulBlock",
													"src": "17757:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17774:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17774:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17777:77:7",
																		"nodeType": "YulLiteral",
																		"src": "17777:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17767:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17767:6:7"
																},
																"nativeSrc": "17767:88:7",
																"nodeType": "YulFunctionCall",
																"src": "17767:88:7"
															},
															"nativeSrc": "17767:88:7",
															"nodeType": "YulExpressionStatement",
															"src": "17767:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17871:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17871:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17874:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17874:4:7",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17864:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17864:6:7"
																},
																"nativeSrc": "17864:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17864:15:7"
															},
															"nativeSrc": "17864:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "17864:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17895:1:7",
																		"nodeType": "YulLiteral",
																		"src": "17895:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17898:4:7",
																		"nodeType": "YulLiteral",
																		"src": "17898:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17888:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "17888:6:7"
																},
																"nativeSrc": "17888:15:7",
																"nodeType": "YulFunctionCall",
																"src": "17888:15:7"
															},
															"nativeSrc": "17888:15:7",
															"nodeType": "YulExpressionStatement",
															"src": "17888:15:7"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "17729:180:7",
												"nodeType": "YulFunctionDefinition",
												"src": "17729:180:7"
											},
											{
												"body": {
													"nativeSrc": "18021:134:7",
													"nodeType": "YulBlock",
													"src": "18021:134:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18043:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18043:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18051:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18051:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18039:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18039:3:7"
																		},
																		"nativeSrc": "18039:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18039:14:7"
																	},
																	{
																		"hexValue": "4f6e65206f72206d6f7265204552433131353520746f6b656e73206e6f742061",
																		"kind": "string",
																		"nativeSrc": "18055:34:7",
																		"nodeType": "YulLiteral",
																		"src": "18055:34:7",
																		"type": "",
																		"value": "One or more ERC1155 tokens not a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18032:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18032:6:7"
																},
																"nativeSrc": "18032:58:7",
																"nodeType": "YulFunctionCall",
																"src": "18032:58:7"
															},
															"nativeSrc": "18032:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "18032:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18111:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "18111:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18119:2:7",
																				"nodeType": "YulLiteral",
																				"src": "18119:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18107:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18107:3:7"
																		},
																		"nativeSrc": "18107:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18107:15:7"
																	},
																	{
																		"hexValue": "6c6c6f77656420666f7220636f6e76657273696f6e",
																		"kind": "string",
																		"nativeSrc": "18124:23:7",
																		"nodeType": "YulLiteral",
																		"src": "18124:23:7",
																		"type": "",
																		"value": "llowed for conversion"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18100:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18100:6:7"
																},
																"nativeSrc": "18100:48:7",
																"nodeType": "YulFunctionCall",
																"src": "18100:48:7"
															},
															"nativeSrc": "18100:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "18100:48:7"
														}
													]
												},
												"name": "store_literal_in_memory_c0d4a5a669671359d552798a9c7b93fa91d0a30f0daac20e66258a9b728d0684",
												"nativeSrc": "17915:240:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18013:6:7",
														"nodeType": "YulTypedName",
														"src": "18013:6:7",
														"type": ""
													}
												],
												"src": "17915:240:7"
											},
											{
												"body": {
													"nativeSrc": "18307:220:7",
													"nodeType": "YulBlock",
													"src": "18307:220:7",
													"statements": [
														{
															"nativeSrc": "18317:74:7",
															"nodeType": "YulAssignment",
															"src": "18317:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18383:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18383:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18388:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18388:2:7",
																		"type": "",
																		"value": "53"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18324:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "18324:58:7"
																},
																"nativeSrc": "18324:67:7",
																"nodeType": "YulFunctionCall",
																"src": "18324:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18317:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18317:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18489:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18489:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c0d4a5a669671359d552798a9c7b93fa91d0a30f0daac20e66258a9b728d0684",
																	"nativeSrc": "18400:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "18400:88:7"
																},
																"nativeSrc": "18400:93:7",
																"nodeType": "YulFunctionCall",
																"src": "18400:93:7"
															},
															"nativeSrc": "18400:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "18400:93:7"
														},
														{
															"nativeSrc": "18502:19:7",
															"nodeType": "YulAssignment",
															"src": "18502:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18513:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "18513:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18518:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18518:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18509:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18509:3:7"
																},
																"nativeSrc": "18509:12:7",
																"nodeType": "YulFunctionCall",
																"src": "18509:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18502:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18502:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c0d4a5a669671359d552798a9c7b93fa91d0a30f0daac20e66258a9b728d0684_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18161:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18295:3:7",
														"nodeType": "YulTypedName",
														"src": "18295:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18303:3:7",
														"nodeType": "YulTypedName",
														"src": "18303:3:7",
														"type": ""
													}
												],
												"src": "18161:366:7"
											},
											{
												"body": {
													"nativeSrc": "18704:248:7",
													"nodeType": "YulBlock",
													"src": "18704:248:7",
													"statements": [
														{
															"nativeSrc": "18714:26:7",
															"nodeType": "YulAssignment",
															"src": "18714:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18726:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "18726:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18737:2:7",
																		"nodeType": "YulLiteral",
																		"src": "18737:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18722:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "18722:3:7"
																},
																"nativeSrc": "18722:18:7",
																"nodeType": "YulFunctionCall",
																"src": "18722:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18714:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18714:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18761:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18761:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18772:1:7",
																				"nodeType": "YulLiteral",
																				"src": "18772:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18757:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18757:3:7"
																		},
																		"nativeSrc": "18757:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18757:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18780:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "18780:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18786:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "18786:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18776:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "18776:3:7"
																		},
																		"nativeSrc": "18776:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "18776:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18750:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "18750:6:7"
																},
																"nativeSrc": "18750:47:7",
																"nodeType": "YulFunctionCall",
																"src": "18750:47:7"
															},
															"nativeSrc": "18750:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "18750:47:7"
														},
														{
															"nativeSrc": "18806:139:7",
															"nodeType": "YulAssignment",
															"src": "18806:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18940:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "18940:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c0d4a5a669671359d552798a9c7b93fa91d0a30f0daac20e66258a9b728d0684_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18814:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "18814:124:7"
																},
																"nativeSrc": "18814:131:7",
																"nodeType": "YulFunctionCall",
																"src": "18814:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18806:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "18806:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c0d4a5a669671359d552798a9c7b93fa91d0a30f0daac20e66258a9b728d0684__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18533:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18684:9:7",
														"nodeType": "YulTypedName",
														"src": "18684:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18699:4:7",
														"nodeType": "YulTypedName",
														"src": "18699:4:7",
														"type": ""
													}
												],
												"src": "18533:419:7"
											},
											{
												"body": {
													"nativeSrc": "19084:206:7",
													"nodeType": "YulBlock",
													"src": "19084:206:7",
													"statements": [
														{
															"nativeSrc": "19094:26:7",
															"nodeType": "YulAssignment",
															"src": "19094:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19106:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19106:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19117:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19117:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19102:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19102:3:7"
																},
																"nativeSrc": "19102:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19102:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19094:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19094:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19174:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19174:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19187:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19187:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19198:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19198:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19183:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19183:3:7"
																		},
																		"nativeSrc": "19183:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19183:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19130:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19130:43:7"
																},
																"nativeSrc": "19130:71:7",
																"nodeType": "YulFunctionCall",
																"src": "19130:71:7"
															},
															"nativeSrc": "19130:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "19130:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19255:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19255:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19268:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19268:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19279:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19279:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19264:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19264:3:7"
																		},
																		"nativeSrc": "19264:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19264:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19211:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19211:43:7"
																},
																"nativeSrc": "19211:72:7",
																"nodeType": "YulFunctionCall",
																"src": "19211:72:7"
															},
															"nativeSrc": "19211:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "19211:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18958:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19048:9:7",
														"nodeType": "YulTypedName",
														"src": "19048:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19060:6:7",
														"nodeType": "YulTypedName",
														"src": "19060:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19068:6:7",
														"nodeType": "YulTypedName",
														"src": "19068:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19079:4:7",
														"nodeType": "YulTypedName",
														"src": "19079:4:7",
														"type": ""
													}
												],
												"src": "18958:332:7"
											},
											{
												"body": {
													"nativeSrc": "19422:206:7",
													"nodeType": "YulBlock",
													"src": "19422:206:7",
													"statements": [
														{
															"nativeSrc": "19432:26:7",
															"nodeType": "YulAssignment",
															"src": "19432:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19444:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "19444:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19455:2:7",
																		"nodeType": "YulLiteral",
																		"src": "19455:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19440:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19440:3:7"
																},
																"nativeSrc": "19440:18:7",
																"nodeType": "YulFunctionCall",
																"src": "19440:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19432:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "19432:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19512:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19512:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19525:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19525:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19536:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19536:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19521:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19521:3:7"
																		},
																		"nativeSrc": "19521:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19521:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19468:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19468:43:7"
																},
																"nativeSrc": "19468:71:7",
																"nodeType": "YulFunctionCall",
																"src": "19468:71:7"
															},
															"nativeSrc": "19468:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "19468:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19593:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "19593:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19606:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "19606:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19617:2:7",
																				"nodeType": "YulLiteral",
																				"src": "19617:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19602:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19602:3:7"
																		},
																		"nativeSrc": "19602:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19602:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19549:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "19549:43:7"
																},
																"nativeSrc": "19549:72:7",
																"nodeType": "YulFunctionCall",
																"src": "19549:72:7"
															},
															"nativeSrc": "19549:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "19549:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19296:332:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19386:9:7",
														"nodeType": "YulTypedName",
														"src": "19386:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19398:6:7",
														"nodeType": "YulTypedName",
														"src": "19398:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19406:6:7",
														"nodeType": "YulTypedName",
														"src": "19406:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19417:4:7",
														"nodeType": "YulTypedName",
														"src": "19417:4:7",
														"type": ""
													}
												],
												"src": "19296:332:7"
											},
											{
												"body": {
													"nativeSrc": "19740:71:7",
													"nodeType": "YulBlock",
													"src": "19740:71:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19762:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "19762:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19770:1:7",
																				"nodeType": "YulLiteral",
																				"src": "19770:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19758:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "19758:3:7"
																		},
																		"nativeSrc": "19758:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "19758:14:7"
																	},
																	{
																		"hexValue": "496e76616c696420455243323020746f6b656e2061646472657373",
																		"kind": "string",
																		"nativeSrc": "19774:29:7",
																		"nodeType": "YulLiteral",
																		"src": "19774:29:7",
																		"type": "",
																		"value": "Invalid ERC20 token address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19751:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "19751:6:7"
																},
																"nativeSrc": "19751:53:7",
																"nodeType": "YulFunctionCall",
																"src": "19751:53:7"
															},
															"nativeSrc": "19751:53:7",
															"nodeType": "YulExpressionStatement",
															"src": "19751:53:7"
														}
													]
												},
												"name": "store_literal_in_memory_ff8d7d3c8e5d5b3e00927ee71ae0a0948bfd5868c97a0626d24744807cda4270",
												"nativeSrc": "19634:177:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19732:6:7",
														"nodeType": "YulTypedName",
														"src": "19732:6:7",
														"type": ""
													}
												],
												"src": "19634:177:7"
											},
											{
												"body": {
													"nativeSrc": "19963:220:7",
													"nodeType": "YulBlock",
													"src": "19963:220:7",
													"statements": [
														{
															"nativeSrc": "19973:74:7",
															"nodeType": "YulAssignment",
															"src": "19973:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20039:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20039:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20044:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20044:2:7",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19980:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "19980:58:7"
																},
																"nativeSrc": "19980:67:7",
																"nodeType": "YulFunctionCall",
																"src": "19980:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19973:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "19973:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20145:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20145:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ff8d7d3c8e5d5b3e00927ee71ae0a0948bfd5868c97a0626d24744807cda4270",
																	"nativeSrc": "20056:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "20056:88:7"
																},
																"nativeSrc": "20056:93:7",
																"nodeType": "YulFunctionCall",
																"src": "20056:93:7"
															},
															"nativeSrc": "20056:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "20056:93:7"
														},
														{
															"nativeSrc": "20158:19:7",
															"nodeType": "YulAssignment",
															"src": "20158:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20169:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "20169:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20174:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20174:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20165:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20165:3:7"
																},
																"nativeSrc": "20165:12:7",
																"nodeType": "YulFunctionCall",
																"src": "20165:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20158:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20158:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ff8d7d3c8e5d5b3e00927ee71ae0a0948bfd5868c97a0626d24744807cda4270_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19817:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19951:3:7",
														"nodeType": "YulTypedName",
														"src": "19951:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19959:3:7",
														"nodeType": "YulTypedName",
														"src": "19959:3:7",
														"type": ""
													}
												],
												"src": "19817:366:7"
											},
											{
												"body": {
													"nativeSrc": "20360:248:7",
													"nodeType": "YulBlock",
													"src": "20360:248:7",
													"statements": [
														{
															"nativeSrc": "20370:26:7",
															"nodeType": "YulAssignment",
															"src": "20370:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20382:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "20382:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20393:2:7",
																		"nodeType": "YulLiteral",
																		"src": "20393:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20378:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "20378:3:7"
																},
																"nativeSrc": "20378:18:7",
																"nodeType": "YulFunctionCall",
																"src": "20378:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20370:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20370:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20417:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20417:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20428:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20428:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20413:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20413:3:7"
																		},
																		"nativeSrc": "20413:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20413:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20436:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "20436:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20442:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "20442:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20432:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20432:3:7"
																		},
																		"nativeSrc": "20432:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20432:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20406:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20406:6:7"
																},
																"nativeSrc": "20406:47:7",
																"nodeType": "YulFunctionCall",
																"src": "20406:47:7"
															},
															"nativeSrc": "20406:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "20406:47:7"
														},
														{
															"nativeSrc": "20462:139:7",
															"nodeType": "YulAssignment",
															"src": "20462:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20596:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "20596:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ff8d7d3c8e5d5b3e00927ee71ae0a0948bfd5868c97a0626d24744807cda4270_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20470:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "20470:124:7"
																},
																"nativeSrc": "20470:131:7",
																"nodeType": "YulFunctionCall",
																"src": "20470:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20462:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "20462:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ff8d7d3c8e5d5b3e00927ee71ae0a0948bfd5868c97a0626d24744807cda4270__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20189:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20340:9:7",
														"nodeType": "YulTypedName",
														"src": "20340:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20355:4:7",
														"nodeType": "YulTypedName",
														"src": "20355:4:7",
														"type": ""
													}
												],
												"src": "20189:419:7"
											},
											{
												"body": {
													"nativeSrc": "20720:126:7",
													"nodeType": "YulBlock",
													"src": "20720:126:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20742:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "20742:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20750:1:7",
																				"nodeType": "YulLiteral",
																				"src": "20750:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20738:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20738:3:7"
																		},
																		"nativeSrc": "20738:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20738:14:7"
																	},
																	{
																		"hexValue": "436f6e76657273696f6e206e6f7420616c6c6f77656420666f72207468697320",
																		"kind": "string",
																		"nativeSrc": "20754:34:7",
																		"nodeType": "YulLiteral",
																		"src": "20754:34:7",
																		"type": "",
																		"value": "Conversion not allowed for this "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20731:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20731:6:7"
																},
																"nativeSrc": "20731:58:7",
																"nodeType": "YulFunctionCall",
																"src": "20731:58:7"
															},
															"nativeSrc": "20731:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "20731:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20810:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "20810:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20818:2:7",
																				"nodeType": "YulLiteral",
																				"src": "20818:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20806:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "20806:3:7"
																		},
																		"nativeSrc": "20806:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "20806:15:7"
																	},
																	{
																		"hexValue": "4552433131353520746f6b656e",
																		"kind": "string",
																		"nativeSrc": "20823:15:7",
																		"nodeType": "YulLiteral",
																		"src": "20823:15:7",
																		"type": "",
																		"value": "ERC1155 token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20799:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "20799:6:7"
																},
																"nativeSrc": "20799:40:7",
																"nodeType": "YulFunctionCall",
																"src": "20799:40:7"
															},
															"nativeSrc": "20799:40:7",
															"nodeType": "YulExpressionStatement",
															"src": "20799:40:7"
														}
													]
												},
												"name": "store_literal_in_memory_5238d4aee652249c28c9c7bb32e69a1db5c4a1216b30e22cedb7385260ff4d6a",
												"nativeSrc": "20614:232:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20712:6:7",
														"nodeType": "YulTypedName",
														"src": "20712:6:7",
														"type": ""
													}
												],
												"src": "20614:232:7"
											},
											{
												"body": {
													"nativeSrc": "20998:220:7",
													"nodeType": "YulBlock",
													"src": "20998:220:7",
													"statements": [
														{
															"nativeSrc": "21008:74:7",
															"nodeType": "YulAssignment",
															"src": "21008:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21074:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21074:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21079:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21079:2:7",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21015:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "21015:58:7"
																},
																"nativeSrc": "21015:67:7",
																"nodeType": "YulFunctionCall",
																"src": "21015:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21008:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21008:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21180:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21180:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5238d4aee652249c28c9c7bb32e69a1db5c4a1216b30e22cedb7385260ff4d6a",
																	"nativeSrc": "21091:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "21091:88:7"
																},
																"nativeSrc": "21091:93:7",
																"nodeType": "YulFunctionCall",
																"src": "21091:93:7"
															},
															"nativeSrc": "21091:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "21091:93:7"
														},
														{
															"nativeSrc": "21193:19:7",
															"nodeType": "YulAssignment",
															"src": "21193:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21204:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "21204:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21209:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21209:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21200:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21200:3:7"
																},
																"nativeSrc": "21200:12:7",
																"nodeType": "YulFunctionCall",
																"src": "21200:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21193:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21193:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5238d4aee652249c28c9c7bb32e69a1db5c4a1216b30e22cedb7385260ff4d6a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20852:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20986:3:7",
														"nodeType": "YulTypedName",
														"src": "20986:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20994:3:7",
														"nodeType": "YulTypedName",
														"src": "20994:3:7",
														"type": ""
													}
												],
												"src": "20852:366:7"
											},
											{
												"body": {
													"nativeSrc": "21395:248:7",
													"nodeType": "YulBlock",
													"src": "21395:248:7",
													"statements": [
														{
															"nativeSrc": "21405:26:7",
															"nodeType": "YulAssignment",
															"src": "21405:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21417:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "21417:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21428:2:7",
																		"nodeType": "YulLiteral",
																		"src": "21428:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21413:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21413:3:7"
																},
																"nativeSrc": "21413:18:7",
																"nodeType": "YulFunctionCall",
																"src": "21413:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21405:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21405:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21452:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "21452:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21463:1:7",
																				"nodeType": "YulLiteral",
																				"src": "21463:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21448:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21448:3:7"
																		},
																		"nativeSrc": "21448:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21448:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21471:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "21471:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21477:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "21477:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21467:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21467:3:7"
																		},
																		"nativeSrc": "21467:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21467:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21441:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21441:6:7"
																},
																"nativeSrc": "21441:47:7",
																"nodeType": "YulFunctionCall",
																"src": "21441:47:7"
															},
															"nativeSrc": "21441:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "21441:47:7"
														},
														{
															"nativeSrc": "21497:139:7",
															"nodeType": "YulAssignment",
															"src": "21497:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21631:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "21631:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5238d4aee652249c28c9c7bb32e69a1db5c4a1216b30e22cedb7385260ff4d6a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21505:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "21505:124:7"
																},
																"nativeSrc": "21505:131:7",
																"nodeType": "YulFunctionCall",
																"src": "21505:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21497:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "21497:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5238d4aee652249c28c9c7bb32e69a1db5c4a1216b30e22cedb7385260ff4d6a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21224:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21375:9:7",
														"nodeType": "YulTypedName",
														"src": "21375:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21390:4:7",
														"nodeType": "YulTypedName",
														"src": "21390:4:7",
														"type": ""
													}
												],
												"src": "21224:419:7"
											},
											{
												"body": {
													"nativeSrc": "21755:76:7",
													"nodeType": "YulBlock",
													"src": "21755:76:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21777:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "21777:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21785:1:7",
																				"nodeType": "YulLiteral",
																				"src": "21785:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21773:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "21773:3:7"
																		},
																		"nativeSrc": "21773:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "21773:14:7"
																	},
																	{
																		"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
																		"kind": "string",
																		"nativeSrc": "21789:34:7",
																		"nodeType": "YulLiteral",
																		"src": "21789:34:7",
																		"type": "",
																		"value": "Amount must be greater than zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21766:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "21766:6:7"
																},
																"nativeSrc": "21766:58:7",
																"nodeType": "YulFunctionCall",
																"src": "21766:58:7"
															},
															"nativeSrc": "21766:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "21766:58:7"
														}
													]
												},
												"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
												"nativeSrc": "21649:182:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21747:6:7",
														"nodeType": "YulTypedName",
														"src": "21747:6:7",
														"type": ""
													}
												],
												"src": "21649:182:7"
											},
											{
												"body": {
													"nativeSrc": "21983:220:7",
													"nodeType": "YulBlock",
													"src": "21983:220:7",
													"statements": [
														{
															"nativeSrc": "21993:74:7",
															"nodeType": "YulAssignment",
															"src": "21993:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22059:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "22059:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22064:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22064:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22000:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "22000:58:7"
																},
																"nativeSrc": "22000:67:7",
																"nodeType": "YulFunctionCall",
																"src": "22000:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21993:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "21993:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22165:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "22165:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																	"nativeSrc": "22076:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "22076:88:7"
																},
																"nativeSrc": "22076:93:7",
																"nodeType": "YulFunctionCall",
																"src": "22076:93:7"
															},
															"nativeSrc": "22076:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "22076:93:7"
														},
														{
															"nativeSrc": "22178:19:7",
															"nodeType": "YulAssignment",
															"src": "22178:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22189:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "22189:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22194:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22194:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22185:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22185:3:7"
																},
																"nativeSrc": "22185:12:7",
																"nodeType": "YulFunctionCall",
																"src": "22185:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22178:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22178:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21837:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21971:3:7",
														"nodeType": "YulTypedName",
														"src": "21971:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21979:3:7",
														"nodeType": "YulTypedName",
														"src": "21979:3:7",
														"type": ""
													}
												],
												"src": "21837:366:7"
											},
											{
												"body": {
													"nativeSrc": "22380:248:7",
													"nodeType": "YulBlock",
													"src": "22380:248:7",
													"statements": [
														{
															"nativeSrc": "22390:26:7",
															"nodeType": "YulAssignment",
															"src": "22390:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22402:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "22402:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22413:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22413:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22398:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22398:3:7"
																},
																"nativeSrc": "22398:18:7",
																"nodeType": "YulFunctionCall",
																"src": "22398:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22390:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "22390:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22437:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22437:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22448:1:7",
																				"nodeType": "YulLiteral",
																				"src": "22448:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22433:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22433:3:7"
																		},
																		"nativeSrc": "22433:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22433:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22456:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "22456:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22462:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22462:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22452:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22452:3:7"
																		},
																		"nativeSrc": "22452:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22452:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22426:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "22426:6:7"
																},
																"nativeSrc": "22426:47:7",
																"nodeType": "YulFunctionCall",
																"src": "22426:47:7"
															},
															"nativeSrc": "22426:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "22426:47:7"
														},
														{
															"nativeSrc": "22482:139:7",
															"nodeType": "YulAssignment",
															"src": "22482:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22616:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "22616:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22490:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "22490:124:7"
																},
																"nativeSrc": "22490:131:7",
																"nodeType": "YulFunctionCall",
																"src": "22490:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22482:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "22482:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22209:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22360:9:7",
														"nodeType": "YulTypedName",
														"src": "22360:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22375:4:7",
														"nodeType": "YulTypedName",
														"src": "22375:4:7",
														"type": ""
													}
												],
												"src": "22209:419:7"
											},
											{
												"body": {
													"nativeSrc": "22788:288:7",
													"nodeType": "YulBlock",
													"src": "22788:288:7",
													"statements": [
														{
															"nativeSrc": "22798:26:7",
															"nodeType": "YulAssignment",
															"src": "22798:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22810:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "22810:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22821:2:7",
																		"nodeType": "YulLiteral",
																		"src": "22821:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22806:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "22806:3:7"
																},
																"nativeSrc": "22806:18:7",
																"nodeType": "YulFunctionCall",
																"src": "22806:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22798:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "22798:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22878:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22878:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22891:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22891:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22902:1:7",
																				"nodeType": "YulLiteral",
																				"src": "22902:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22887:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22887:3:7"
																		},
																		"nativeSrc": "22887:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22887:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22834:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22834:43:7"
																},
																"nativeSrc": "22834:71:7",
																"nodeType": "YulFunctionCall",
																"src": "22834:71:7"
															},
															"nativeSrc": "22834:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "22834:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22959:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "22959:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22972:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "22972:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22983:2:7",
																				"nodeType": "YulLiteral",
																				"src": "22983:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22968:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "22968:3:7"
																		},
																		"nativeSrc": "22968:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "22968:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22915:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22915:43:7"
																},
																"nativeSrc": "22915:72:7",
																"nodeType": "YulFunctionCall",
																"src": "22915:72:7"
															},
															"nativeSrc": "22915:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "22915:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23041:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "23041:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23054:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "23054:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23065:2:7",
																				"nodeType": "YulLiteral",
																				"src": "23065:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23050:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23050:3:7"
																		},
																		"nativeSrc": "23050:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23050:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22997:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "22997:43:7"
																},
																"nativeSrc": "22997:72:7",
																"nodeType": "YulFunctionCall",
																"src": "22997:72:7"
															},
															"nativeSrc": "22997:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "22997:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "22634:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22744:9:7",
														"nodeType": "YulTypedName",
														"src": "22744:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22756:6:7",
														"nodeType": "YulTypedName",
														"src": "22756:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22764:6:7",
														"nodeType": "YulTypedName",
														"src": "22764:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22772:6:7",
														"nodeType": "YulTypedName",
														"src": "22772:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22783:4:7",
														"nodeType": "YulTypedName",
														"src": "22783:4:7",
														"type": ""
													}
												],
												"src": "22634:442:7"
											},
											{
												"body": {
													"nativeSrc": "23122:76:7",
													"nodeType": "YulBlock",
													"src": "23122:76:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "23176:16:7",
																"nodeType": "YulBlock",
																"src": "23176:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "23185:1:7",
																					"nodeType": "YulLiteral",
																					"src": "23185:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "23188:1:7",
																					"nodeType": "YulLiteral",
																					"src": "23188:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "23178:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "23178:6:7"
																			},
																			"nativeSrc": "23178:12:7",
																			"nodeType": "YulFunctionCall",
																			"src": "23178:12:7"
																		},
																		"nativeSrc": "23178:12:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "23178:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "23145:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "23145:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "23167:5:7",
																						"nodeType": "YulIdentifier",
																						"src": "23167:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "23152:14:7",
																					"nodeType": "YulIdentifier",
																					"src": "23152:14:7"
																				},
																				"nativeSrc": "23152:21:7",
																				"nodeType": "YulFunctionCall",
																				"src": "23152:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "23142:2:7",
																			"nodeType": "YulIdentifier",
																			"src": "23142:2:7"
																		},
																		"nativeSrc": "23142:32:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23142:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "23135:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "23135:6:7"
																},
																"nativeSrc": "23135:40:7",
																"nodeType": "YulFunctionCall",
																"src": "23135:40:7"
															},
															"nativeSrc": "23132:60:7",
															"nodeType": "YulIf",
															"src": "23132:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "23082:116:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23115:5:7",
														"nodeType": "YulTypedName",
														"src": "23115:5:7",
														"type": ""
													}
												],
												"src": "23082:116:7"
											},
											{
												"body": {
													"nativeSrc": "23264:77:7",
													"nodeType": "YulBlock",
													"src": "23264:77:7",
													"statements": [
														{
															"nativeSrc": "23274:22:7",
															"nodeType": "YulAssignment",
															"src": "23274:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "23289:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "23289:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "23283:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "23283:5:7"
																},
																"nativeSrc": "23283:13:7",
																"nodeType": "YulFunctionCall",
																"src": "23283:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "23274:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "23274:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "23329:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "23329:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "23305:23:7",
																	"nodeType": "YulIdentifier",
																	"src": "23305:23:7"
																},
																"nativeSrc": "23305:30:7",
																"nodeType": "YulFunctionCall",
																"src": "23305:30:7"
															},
															"nativeSrc": "23305:30:7",
															"nodeType": "YulExpressionStatement",
															"src": "23305:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "23204:137:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "23242:6:7",
														"nodeType": "YulTypedName",
														"src": "23242:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "23250:3:7",
														"nodeType": "YulTypedName",
														"src": "23250:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "23258:5:7",
														"nodeType": "YulTypedName",
														"src": "23258:5:7",
														"type": ""
													}
												],
												"src": "23204:137:7"
											},
											{
												"body": {
													"nativeSrc": "23421:271:7",
													"nodeType": "YulBlock",
													"src": "23421:271:7",
													"statements": [
														{
															"body": {
																"nativeSrc": "23467:83:7",
																"nodeType": "YulBlock",
																"src": "23467:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "23469:77:7",
																				"nodeType": "YulIdentifier",
																				"src": "23469:77:7"
																			},
																			"nativeSrc": "23469:79:7",
																			"nodeType": "YulFunctionCall",
																			"src": "23469:79:7"
																		},
																		"nativeSrc": "23469:79:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "23469:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23442:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "23442:7:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23451:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "23451:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23438:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23438:3:7"
																		},
																		"nativeSrc": "23438:23:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23438:23:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23463:2:7",
																		"nodeType": "YulLiteral",
																		"src": "23463:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "23434:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "23434:3:7"
																},
																"nativeSrc": "23434:32:7",
																"nodeType": "YulFunctionCall",
																"src": "23434:32:7"
															},
															"nativeSrc": "23431:119:7",
															"nodeType": "YulIf",
															"src": "23431:119:7"
														},
														{
															"nativeSrc": "23560:125:7",
															"nodeType": "YulBlock",
															"src": "23560:125:7",
															"statements": [
																{
																	"nativeSrc": "23575:15:7",
																	"nodeType": "YulVariableDeclaration",
																	"src": "23575:15:7",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "23589:1:7",
																		"nodeType": "YulLiteral",
																		"src": "23589:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "23579:6:7",
																			"nodeType": "YulTypedName",
																			"src": "23579:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "23604:71:7",
																	"nodeType": "YulAssignment",
																	"src": "23604:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "23647:9:7",
																						"nodeType": "YulIdentifier",
																						"src": "23647:9:7"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "23658:6:7",
																						"nodeType": "YulIdentifier",
																						"src": "23658:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "23643:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "23643:3:7"
																				},
																				"nativeSrc": "23643:22:7",
																				"nodeType": "YulFunctionCall",
																				"src": "23643:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "23667:7:7",
																				"nodeType": "YulIdentifier",
																				"src": "23667:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "23614:28:7",
																			"nodeType": "YulIdentifier",
																			"src": "23614:28:7"
																		},
																		"nativeSrc": "23614:61:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23614:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "23604:6:7",
																			"nodeType": "YulIdentifier",
																			"src": "23604:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "23347:345:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23391:9:7",
														"nodeType": "YulTypedName",
														"src": "23391:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "23402:7:7",
														"nodeType": "YulTypedName",
														"src": "23402:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "23414:6:7",
														"nodeType": "YulTypedName",
														"src": "23414:6:7",
														"type": ""
													}
												],
												"src": "23347:345:7"
											},
											{
												"body": {
													"nativeSrc": "23804:65:7",
													"nodeType": "YulBlock",
													"src": "23804:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23826:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "23826:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23834:1:7",
																				"nodeType": "YulLiteral",
																				"src": "23834:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23822:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "23822:3:7"
																		},
																		"nativeSrc": "23822:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "23822:14:7"
																	},
																	{
																		"hexValue": "4552433230207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "23838:23:7",
																		"nodeType": "YulLiteral",
																		"src": "23838:23:7",
																		"type": "",
																		"value": "ERC20 transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23815:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "23815:6:7"
																},
																"nativeSrc": "23815:47:7",
																"nodeType": "YulFunctionCall",
																"src": "23815:47:7"
															},
															"nativeSrc": "23815:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "23815:47:7"
														}
													]
												},
												"name": "store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
												"nativeSrc": "23698:171:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23796:6:7",
														"nodeType": "YulTypedName",
														"src": "23796:6:7",
														"type": ""
													}
												],
												"src": "23698:171:7"
											},
											{
												"body": {
													"nativeSrc": "24021:220:7",
													"nodeType": "YulBlock",
													"src": "24021:220:7",
													"statements": [
														{
															"nativeSrc": "24031:74:7",
															"nodeType": "YulAssignment",
															"src": "24031:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24097:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "24097:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24102:2:7",
																		"nodeType": "YulLiteral",
																		"src": "24102:2:7",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24038:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "24038:58:7"
																},
																"nativeSrc": "24038:67:7",
																"nodeType": "YulFunctionCall",
																"src": "24038:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24031:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24031:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24203:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "24203:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
																	"nativeSrc": "24114:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "24114:88:7"
																},
																"nativeSrc": "24114:93:7",
																"nodeType": "YulFunctionCall",
																"src": "24114:93:7"
															},
															"nativeSrc": "24114:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "24114:93:7"
														},
														{
															"nativeSrc": "24216:19:7",
															"nodeType": "YulAssignment",
															"src": "24216:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24227:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "24227:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24232:2:7",
																		"nodeType": "YulLiteral",
																		"src": "24232:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24223:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24223:3:7"
																},
																"nativeSrc": "24223:12:7",
																"nodeType": "YulFunctionCall",
																"src": "24223:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24216:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24216:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23875:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24009:3:7",
														"nodeType": "YulTypedName",
														"src": "24009:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24017:3:7",
														"nodeType": "YulTypedName",
														"src": "24017:3:7",
														"type": ""
													}
												],
												"src": "23875:366:7"
											},
											{
												"body": {
													"nativeSrc": "24418:248:7",
													"nodeType": "YulBlock",
													"src": "24418:248:7",
													"statements": [
														{
															"nativeSrc": "24428:26:7",
															"nodeType": "YulAssignment",
															"src": "24428:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24440:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "24440:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24451:2:7",
																		"nodeType": "YulLiteral",
																		"src": "24451:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24436:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24436:3:7"
																},
																"nativeSrc": "24436:18:7",
																"nodeType": "YulFunctionCall",
																"src": "24436:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24428:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "24428:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24475:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24475:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24486:1:7",
																				"nodeType": "YulLiteral",
																				"src": "24486:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24471:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24471:3:7"
																		},
																		"nativeSrc": "24471:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24471:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24494:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "24494:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24500:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24500:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24490:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24490:3:7"
																		},
																		"nativeSrc": "24490:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24490:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24464:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "24464:6:7"
																},
																"nativeSrc": "24464:47:7",
																"nodeType": "YulFunctionCall",
																"src": "24464:47:7"
															},
															"nativeSrc": "24464:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "24464:47:7"
														},
														{
															"nativeSrc": "24520:139:7",
															"nodeType": "YulAssignment",
															"src": "24520:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24654:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "24654:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24528:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "24528:124:7"
																},
																"nativeSrc": "24528:131:7",
																"nodeType": "YulFunctionCall",
																"src": "24528:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24520:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "24520:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24247:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24398:9:7",
														"nodeType": "YulTypedName",
														"src": "24398:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24413:4:7",
														"nodeType": "YulTypedName",
														"src": "24413:4:7",
														"type": ""
													}
												],
												"src": "24247:419:7"
											},
											{
												"body": {
													"nativeSrc": "24770:124:7",
													"nodeType": "YulBlock",
													"src": "24770:124:7",
													"statements": [
														{
															"nativeSrc": "24780:26:7",
															"nodeType": "YulAssignment",
															"src": "24780:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24792:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "24792:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24803:2:7",
																		"nodeType": "YulLiteral",
																		"src": "24803:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24788:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "24788:3:7"
																},
																"nativeSrc": "24788:18:7",
																"nodeType": "YulFunctionCall",
																"src": "24788:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24780:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "24780:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24860:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "24860:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24873:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "24873:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24884:1:7",
																				"nodeType": "YulLiteral",
																				"src": "24884:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24869:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "24869:3:7"
																		},
																		"nativeSrc": "24869:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "24869:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24816:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "24816:43:7"
																},
																"nativeSrc": "24816:71:7",
																"nodeType": "YulFunctionCall",
																"src": "24816:71:7"
															},
															"nativeSrc": "24816:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "24816:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "24672:222:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24742:9:7",
														"nodeType": "YulTypedName",
														"src": "24742:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24754:6:7",
														"nodeType": "YulTypedName",
														"src": "24754:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24765:4:7",
														"nodeType": "YulTypedName",
														"src": "24765:4:7",
														"type": ""
													}
												],
												"src": "24672:222:7"
											},
											{
												"body": {
													"nativeSrc": "24995:73:7",
													"nodeType": "YulBlock",
													"src": "24995:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25012:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "25012:3:7"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25017:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "25017:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25005:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "25005:6:7"
																},
																"nativeSrc": "25005:19:7",
																"nodeType": "YulFunctionCall",
																"src": "25005:19:7"
															},
															"nativeSrc": "25005:19:7",
															"nodeType": "YulExpressionStatement",
															"src": "25005:19:7"
														},
														{
															"nativeSrc": "25033:29:7",
															"nodeType": "YulAssignment",
															"src": "25033:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25052:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "25052:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25057:4:7",
																		"nodeType": "YulLiteral",
																		"src": "25057:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25048:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "25048:3:7"
																},
																"nativeSrc": "25048:14:7",
																"nodeType": "YulFunctionCall",
																"src": "25048:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "25033:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "25033:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "24900:168:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24967:3:7",
														"nodeType": "YulTypedName",
														"src": "24967:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "24972:6:7",
														"nodeType": "YulTypedName",
														"src": "24972:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "24983:11:7",
														"nodeType": "YulTypedName",
														"src": "24983:11:7",
														"type": ""
													}
												],
												"src": "24900:168:7"
											},
											{
												"body": {
													"nativeSrc": "25180:8:7",
													"nodeType": "YulBlock",
													"src": "25180:8:7",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "25074:114:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25172:6:7",
														"nodeType": "YulTypedName",
														"src": "25172:6:7",
														"type": ""
													}
												],
												"src": "25074:114:7"
											},
											{
												"body": {
													"nativeSrc": "25339:217:7",
													"nodeType": "YulBlock",
													"src": "25339:217:7",
													"statements": [
														{
															"nativeSrc": "25349:72:7",
															"nodeType": "YulAssignment",
															"src": "25349:72:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25414:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "25414:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25419:1:7",
																		"nodeType": "YulLiteral",
																		"src": "25419:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "25356:57:7",
																	"nodeType": "YulIdentifier",
																	"src": "25356:57:7"
																},
																"nativeSrc": "25356:65:7",
																"nodeType": "YulFunctionCall",
																"src": "25356:65:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25349:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "25349:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25519:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "25519:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "25430:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "25430:88:7"
																},
																"nativeSrc": "25430:93:7",
																"nodeType": "YulFunctionCall",
																"src": "25430:93:7"
															},
															"nativeSrc": "25430:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "25430:93:7"
														},
														{
															"nativeSrc": "25532:18:7",
															"nodeType": "YulAssignment",
															"src": "25532:18:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25543:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "25543:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25548:1:7",
																		"nodeType": "YulLiteral",
																		"src": "25548:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25539:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "25539:3:7"
																},
																"nativeSrc": "25539:11:7",
																"nodeType": "YulFunctionCall",
																"src": "25539:11:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25532:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "25532:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "25194:362:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25327:3:7",
														"nodeType": "YulTypedName",
														"src": "25327:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25335:3:7",
														"nodeType": "YulTypedName",
														"src": "25335:3:7",
														"type": ""
													}
												],
												"src": "25194:362:7"
											},
											{
												"body": {
													"nativeSrc": "25816:494:7",
													"nodeType": "YulBlock",
													"src": "25816:494:7",
													"statements": [
														{
															"nativeSrc": "25826:27:7",
															"nodeType": "YulAssignment",
															"src": "25826:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25838:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "25838:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25849:3:7",
																		"nodeType": "YulLiteral",
																		"src": "25849:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25834:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "25834:3:7"
																},
																"nativeSrc": "25834:19:7",
																"nodeType": "YulFunctionCall",
																"src": "25834:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25826:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "25826:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25907:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "25907:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25920:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "25920:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25931:1:7",
																				"nodeType": "YulLiteral",
																				"src": "25931:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25916:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "25916:3:7"
																		},
																		"nativeSrc": "25916:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "25916:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25863:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "25863:43:7"
																},
																"nativeSrc": "25863:71:7",
																"nodeType": "YulFunctionCall",
																"src": "25863:71:7"
															},
															"nativeSrc": "25863:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "25863:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25988:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "25988:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26001:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "26001:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26012:2:7",
																				"nodeType": "YulLiteral",
																				"src": "26012:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25997:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "25997:3:7"
																		},
																		"nativeSrc": "25997:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "25997:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25944:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "25944:43:7"
																},
																"nativeSrc": "25944:72:7",
																"nodeType": "YulFunctionCall",
																"src": "25944:72:7"
															},
															"nativeSrc": "25944:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "25944:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "26070:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "26070:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26083:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "26083:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26094:2:7",
																				"nodeType": "YulLiteral",
																				"src": "26094:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26079:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "26079:3:7"
																		},
																		"nativeSrc": "26079:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "26079:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "26026:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "26026:43:7"
																},
																"nativeSrc": "26026:72:7",
																"nodeType": "YulFunctionCall",
																"src": "26026:72:7"
															},
															"nativeSrc": "26026:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "26026:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26119:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "26119:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26130:2:7",
																				"nodeType": "YulLiteral",
																				"src": "26130:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26115:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "26115:3:7"
																		},
																		"nativeSrc": "26115:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "26115:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26139:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "26139:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26145:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "26145:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26135:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "26135:3:7"
																		},
																		"nativeSrc": "26135:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "26135:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26108:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "26108:6:7"
																},
																"nativeSrc": "26108:48:7",
																"nodeType": "YulFunctionCall",
																"src": "26108:48:7"
															},
															"nativeSrc": "26108:48:7",
															"nodeType": "YulExpressionStatement",
															"src": "26108:48:7"
														},
														{
															"nativeSrc": "26165:138:7",
															"nodeType": "YulAssignment",
															"src": "26165:138:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26298:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "26298:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "26173:123:7",
																	"nodeType": "YulIdentifier",
																	"src": "26173:123:7"
																},
																"nativeSrc": "26173:130:7",
																"nodeType": "YulFunctionCall",
																"src": "26173:130:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26165:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "26165:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "25562:748:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25772:9:7",
														"nodeType": "YulTypedName",
														"src": "25772:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "25784:6:7",
														"nodeType": "YulTypedName",
														"src": "25784:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25792:6:7",
														"nodeType": "YulTypedName",
														"src": "25792:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25800:6:7",
														"nodeType": "YulTypedName",
														"src": "25800:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25811:4:7",
														"nodeType": "YulTypedName",
														"src": "25811:4:7",
														"type": ""
													}
												],
												"src": "25562:748:7"
											},
											{
												"body": {
													"nativeSrc": "26422:121:7",
													"nodeType": "YulBlock",
													"src": "26422:121:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26444:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "26444:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26452:1:7",
																				"nodeType": "YulLiteral",
																				"src": "26452:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26440:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "26440:3:7"
																		},
																		"nativeSrc": "26440:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "26440:14:7"
																	},
																	{
																		"hexValue": "4552433131353520746f6b656e206e6f7420616c6c6f77656420666f7220636f",
																		"kind": "string",
																		"nativeSrc": "26456:34:7",
																		"nodeType": "YulLiteral",
																		"src": "26456:34:7",
																		"type": "",
																		"value": "ERC1155 token not allowed for co"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26433:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "26433:6:7"
																},
																"nativeSrc": "26433:58:7",
																"nodeType": "YulFunctionCall",
																"src": "26433:58:7"
															},
															"nativeSrc": "26433:58:7",
															"nodeType": "YulExpressionStatement",
															"src": "26433:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26512:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "26512:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26520:2:7",
																				"nodeType": "YulLiteral",
																				"src": "26520:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26508:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "26508:3:7"
																		},
																		"nativeSrc": "26508:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "26508:15:7"
																	},
																	{
																		"hexValue": "6e76657273696f6e",
																		"kind": "string",
																		"nativeSrc": "26525:10:7",
																		"nodeType": "YulLiteral",
																		"src": "26525:10:7",
																		"type": "",
																		"value": "nversion"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26501:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "26501:6:7"
																},
																"nativeSrc": "26501:35:7",
																"nodeType": "YulFunctionCall",
																"src": "26501:35:7"
															},
															"nativeSrc": "26501:35:7",
															"nodeType": "YulExpressionStatement",
															"src": "26501:35:7"
														}
													]
												},
												"name": "store_literal_in_memory_949e1d5c123b43c1e53a5b0a92a3be85e872ff6095aceb39ae946a881017b2a1",
												"nativeSrc": "26316:227:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "26414:6:7",
														"nodeType": "YulTypedName",
														"src": "26414:6:7",
														"type": ""
													}
												],
												"src": "26316:227:7"
											},
											{
												"body": {
													"nativeSrc": "26695:220:7",
													"nodeType": "YulBlock",
													"src": "26695:220:7",
													"statements": [
														{
															"nativeSrc": "26705:74:7",
															"nodeType": "YulAssignment",
															"src": "26705:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26771:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "26771:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26776:2:7",
																		"nodeType": "YulLiteral",
																		"src": "26776:2:7",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26712:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "26712:58:7"
																},
																"nativeSrc": "26712:67:7",
																"nodeType": "YulFunctionCall",
																"src": "26712:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26705:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "26705:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26877:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "26877:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_949e1d5c123b43c1e53a5b0a92a3be85e872ff6095aceb39ae946a881017b2a1",
																	"nativeSrc": "26788:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "26788:88:7"
																},
																"nativeSrc": "26788:93:7",
																"nodeType": "YulFunctionCall",
																"src": "26788:93:7"
															},
															"nativeSrc": "26788:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "26788:93:7"
														},
														{
															"nativeSrc": "26890:19:7",
															"nodeType": "YulAssignment",
															"src": "26890:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26901:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "26901:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26906:2:7",
																		"nodeType": "YulLiteral",
																		"src": "26906:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26897:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "26897:3:7"
																},
																"nativeSrc": "26897:12:7",
																"nodeType": "YulFunctionCall",
																"src": "26897:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26890:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "26890:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_949e1d5c123b43c1e53a5b0a92a3be85e872ff6095aceb39ae946a881017b2a1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26549:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26683:3:7",
														"nodeType": "YulTypedName",
														"src": "26683:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26691:3:7",
														"nodeType": "YulTypedName",
														"src": "26691:3:7",
														"type": ""
													}
												],
												"src": "26549:366:7"
											},
											{
												"body": {
													"nativeSrc": "27092:248:7",
													"nodeType": "YulBlock",
													"src": "27092:248:7",
													"statements": [
														{
															"nativeSrc": "27102:26:7",
															"nodeType": "YulAssignment",
															"src": "27102:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27114:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "27114:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27125:2:7",
																		"nodeType": "YulLiteral",
																		"src": "27125:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27110:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "27110:3:7"
																},
																"nativeSrc": "27110:18:7",
																"nodeType": "YulFunctionCall",
																"src": "27110:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27102:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "27102:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27149:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "27149:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27160:1:7",
																				"nodeType": "YulLiteral",
																				"src": "27160:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27145:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "27145:3:7"
																		},
																		"nativeSrc": "27145:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "27145:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27168:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "27168:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27174:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "27174:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27164:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "27164:3:7"
																		},
																		"nativeSrc": "27164:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "27164:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27138:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "27138:6:7"
																},
																"nativeSrc": "27138:47:7",
																"nodeType": "YulFunctionCall",
																"src": "27138:47:7"
															},
															"nativeSrc": "27138:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "27138:47:7"
														},
														{
															"nativeSrc": "27194:139:7",
															"nodeType": "YulAssignment",
															"src": "27194:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "27328:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "27328:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_949e1d5c123b43c1e53a5b0a92a3be85e872ff6095aceb39ae946a881017b2a1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27202:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "27202:124:7"
																},
																"nativeSrc": "27202:131:7",
																"nodeType": "YulFunctionCall",
																"src": "27202:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27194:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "27194:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_949e1d5c123b43c1e53a5b0a92a3be85e872ff6095aceb39ae946a881017b2a1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26921:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27072:9:7",
														"nodeType": "YulTypedName",
														"src": "27072:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27087:4:7",
														"nodeType": "YulTypedName",
														"src": "27087:4:7",
														"type": ""
													}
												],
												"src": "26921:419:7"
											},
											{
												"body": {
													"nativeSrc": "27452:67:7",
													"nodeType": "YulBlock",
													"src": "27452:67:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "27474:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "27474:6:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27482:1:7",
																				"nodeType": "YulLiteral",
																				"src": "27482:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27470:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "27470:3:7"
																		},
																		"nativeSrc": "27470:14:7",
																		"nodeType": "YulFunctionCall",
																		"src": "27470:14:7"
																	},
																	{
																		"hexValue": "455243323020746f6b656e206e6f7420646566696e6564",
																		"kind": "string",
																		"nativeSrc": "27486:25:7",
																		"nodeType": "YulLiteral",
																		"src": "27486:25:7",
																		"type": "",
																		"value": "ERC20 token not defined"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27463:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "27463:6:7"
																},
																"nativeSrc": "27463:49:7",
																"nodeType": "YulFunctionCall",
																"src": "27463:49:7"
															},
															"nativeSrc": "27463:49:7",
															"nodeType": "YulExpressionStatement",
															"src": "27463:49:7"
														}
													]
												},
												"name": "store_literal_in_memory_35d771638d1a130f886af59ec9ada5517bbcdb9238977046eee8481b852e0427",
												"nativeSrc": "27346:173:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "27444:6:7",
														"nodeType": "YulTypedName",
														"src": "27444:6:7",
														"type": ""
													}
												],
												"src": "27346:173:7"
											},
											{
												"body": {
													"nativeSrc": "27671:220:7",
													"nodeType": "YulBlock",
													"src": "27671:220:7",
													"statements": [
														{
															"nativeSrc": "27681:74:7",
															"nodeType": "YulAssignment",
															"src": "27681:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27747:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "27747:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27752:2:7",
																		"nodeType": "YulLiteral",
																		"src": "27752:2:7",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27688:58:7",
																	"nodeType": "YulIdentifier",
																	"src": "27688:58:7"
																},
																"nativeSrc": "27688:67:7",
																"nodeType": "YulFunctionCall",
																"src": "27688:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27681:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "27681:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27853:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "27853:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_35d771638d1a130f886af59ec9ada5517bbcdb9238977046eee8481b852e0427",
																	"nativeSrc": "27764:88:7",
																	"nodeType": "YulIdentifier",
																	"src": "27764:88:7"
																},
																"nativeSrc": "27764:93:7",
																"nodeType": "YulFunctionCall",
																"src": "27764:93:7"
															},
															"nativeSrc": "27764:93:7",
															"nodeType": "YulExpressionStatement",
															"src": "27764:93:7"
														},
														{
															"nativeSrc": "27866:19:7",
															"nodeType": "YulAssignment",
															"src": "27866:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27877:3:7",
																		"nodeType": "YulIdentifier",
																		"src": "27877:3:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27882:2:7",
																		"nodeType": "YulLiteral",
																		"src": "27882:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27873:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "27873:3:7"
																},
																"nativeSrc": "27873:12:7",
																"nodeType": "YulFunctionCall",
																"src": "27873:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27866:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "27866:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_35d771638d1a130f886af59ec9ada5517bbcdb9238977046eee8481b852e0427_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "27525:366:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27659:3:7",
														"nodeType": "YulTypedName",
														"src": "27659:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27667:3:7",
														"nodeType": "YulTypedName",
														"src": "27667:3:7",
														"type": ""
													}
												],
												"src": "27525:366:7"
											},
											{
												"body": {
													"nativeSrc": "28068:248:7",
													"nodeType": "YulBlock",
													"src": "28068:248:7",
													"statements": [
														{
															"nativeSrc": "28078:26:7",
															"nodeType": "YulAssignment",
															"src": "28078:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28090:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "28090:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28101:2:7",
																		"nodeType": "YulLiteral",
																		"src": "28101:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28086:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "28086:3:7"
																},
																"nativeSrc": "28086:18:7",
																"nodeType": "YulFunctionCall",
																"src": "28086:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28078:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "28078:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28125:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "28125:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28136:1:7",
																				"nodeType": "YulLiteral",
																				"src": "28136:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28121:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "28121:3:7"
																		},
																		"nativeSrc": "28121:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "28121:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28144:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "28144:4:7"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28150:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "28150:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28140:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "28140:3:7"
																		},
																		"nativeSrc": "28140:20:7",
																		"nodeType": "YulFunctionCall",
																		"src": "28140:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28114:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "28114:6:7"
																},
																"nativeSrc": "28114:47:7",
																"nodeType": "YulFunctionCall",
																"src": "28114:47:7"
															},
															"nativeSrc": "28114:47:7",
															"nodeType": "YulExpressionStatement",
															"src": "28114:47:7"
														},
														{
															"nativeSrc": "28170:139:7",
															"nodeType": "YulAssignment",
															"src": "28170:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "28304:4:7",
																		"nodeType": "YulIdentifier",
																		"src": "28304:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_35d771638d1a130f886af59ec9ada5517bbcdb9238977046eee8481b852e0427_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28178:124:7",
																	"nodeType": "YulIdentifier",
																	"src": "28178:124:7"
																},
																"nativeSrc": "28178:131:7",
																"nodeType": "YulFunctionCall",
																"src": "28178:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28170:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "28170:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_35d771638d1a130f886af59ec9ada5517bbcdb9238977046eee8481b852e0427__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27897:419:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28048:9:7",
														"nodeType": "YulTypedName",
														"src": "28048:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28063:4:7",
														"nodeType": "YulTypedName",
														"src": "28063:4:7",
														"type": ""
													}
												],
												"src": "27897:419:7"
											},
											{
												"body": {
													"nativeSrc": "28476:288:7",
													"nodeType": "YulBlock",
													"src": "28476:288:7",
													"statements": [
														{
															"nativeSrc": "28486:26:7",
															"nodeType": "YulAssignment",
															"src": "28486:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28498:9:7",
																		"nodeType": "YulIdentifier",
																		"src": "28498:9:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28509:2:7",
																		"nodeType": "YulLiteral",
																		"src": "28509:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28494:3:7",
																	"nodeType": "YulIdentifier",
																	"src": "28494:3:7"
																},
																"nativeSrc": "28494:18:7",
																"nodeType": "YulFunctionCall",
																"src": "28494:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28486:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "28486:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28566:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "28566:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28579:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "28579:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28590:1:7",
																				"nodeType": "YulLiteral",
																				"src": "28590:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28575:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "28575:3:7"
																		},
																		"nativeSrc": "28575:17:7",
																		"nodeType": "YulFunctionCall",
																		"src": "28575:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28522:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "28522:43:7"
																},
																"nativeSrc": "28522:71:7",
																"nodeType": "YulFunctionCall",
																"src": "28522:71:7"
															},
															"nativeSrc": "28522:71:7",
															"nodeType": "YulExpressionStatement",
															"src": "28522:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28647:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "28647:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28660:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "28660:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28671:2:7",
																				"nodeType": "YulLiteral",
																				"src": "28671:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28656:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "28656:3:7"
																		},
																		"nativeSrc": "28656:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "28656:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28603:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "28603:43:7"
																},
																"nativeSrc": "28603:72:7",
																"nodeType": "YulFunctionCall",
																"src": "28603:72:7"
															},
															"nativeSrc": "28603:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "28603:72:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "28729:6:7",
																		"nodeType": "YulIdentifier",
																		"src": "28729:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28742:9:7",
																				"nodeType": "YulIdentifier",
																				"src": "28742:9:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28753:2:7",
																				"nodeType": "YulLiteral",
																				"src": "28753:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28738:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "28738:3:7"
																		},
																		"nativeSrc": "28738:18:7",
																		"nodeType": "YulFunctionCall",
																		"src": "28738:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28685:43:7",
																	"nodeType": "YulIdentifier",
																	"src": "28685:43:7"
																},
																"nativeSrc": "28685:72:7",
																"nodeType": "YulFunctionCall",
																"src": "28685:72:7"
															},
															"nativeSrc": "28685:72:7",
															"nodeType": "YulExpressionStatement",
															"src": "28685:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "28322:442:7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28432:9:7",
														"nodeType": "YulTypedName",
														"src": "28432:9:7",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "28444:6:7",
														"nodeType": "YulTypedName",
														"src": "28444:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28452:6:7",
														"nodeType": "YulTypedName",
														"src": "28452:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28460:6:7",
														"nodeType": "YulTypedName",
														"src": "28460:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28471:4:7",
														"nodeType": "YulTypedName",
														"src": "28471:4:7",
														"type": ""
													}
												],
												"src": "28322:442:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20MintableBurnable_$365_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20MintableBurnable_$365_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20MintableBurnable_$365_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20MintableBurnable_$365__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20MintableBurnable_$365_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid ERC1155 address\")\n\n    }\n\n    function abi_encode_t_stringliteral_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the token owner can trigger\")\n\n        mstore(add(memPtr, 32), \" conversion\")\n\n    }\n\n    function abi_encode_t_stringliteral_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_84631b1411dfd30314397a1487d6a580e00f82562cae361125f25c598b227a6d(memPtr) {\n\n        mstore(add(memPtr, 0), \"IDs and values length mismatch\")\n\n    }\n\n    function abi_encode_t_stringliteral_84631b1411dfd30314397a1487d6a580e00f82562cae361125f25c598b227a6d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_84631b1411dfd30314397a1487d6a580e00f82562cae361125f25c598b227a6d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_84631b1411dfd30314397a1487d6a580e00f82562cae361125f25c598b227a6d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_84631b1411dfd30314397a1487d6a580e00f82562cae361125f25c598b227a6d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20 token not set\")\n\n    }\n\n    function abi_encode_t_stringliteral_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_c0d4a5a669671359d552798a9c7b93fa91d0a30f0daac20e66258a9b728d0684(memPtr) {\n\n        mstore(add(memPtr, 0), \"One or more ERC1155 tokens not a\")\n\n        mstore(add(memPtr, 32), \"llowed for conversion\")\n\n    }\n\n    function abi_encode_t_stringliteral_c0d4a5a669671359d552798a9c7b93fa91d0a30f0daac20e66258a9b728d0684_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 53)\n        store_literal_in_memory_c0d4a5a669671359d552798a9c7b93fa91d0a30f0daac20e66258a9b728d0684(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c0d4a5a669671359d552798a9c7b93fa91d0a30f0daac20e66258a9b728d0684__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c0d4a5a669671359d552798a9c7b93fa91d0a30f0daac20e66258a9b728d0684_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ff8d7d3c8e5d5b3e00927ee71ae0a0948bfd5868c97a0626d24744807cda4270(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid ERC20 token address\")\n\n    }\n\n    function abi_encode_t_stringliteral_ff8d7d3c8e5d5b3e00927ee71ae0a0948bfd5868c97a0626d24744807cda4270_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_ff8d7d3c8e5d5b3e00927ee71ae0a0948bfd5868c97a0626d24744807cda4270(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ff8d7d3c8e5d5b3e00927ee71ae0a0948bfd5868c97a0626d24744807cda4270__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ff8d7d3c8e5d5b3e00927ee71ae0a0948bfd5868c97a0626d24744807cda4270_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_5238d4aee652249c28c9c7bb32e69a1db5c4a1216b30e22cedb7385260ff4d6a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Conversion not allowed for this \")\n\n        mstore(add(memPtr, 32), \"ERC1155 token\")\n\n    }\n\n    function abi_encode_t_stringliteral_5238d4aee652249c28c9c7bb32e69a1db5c4a1216b30e22cedb7385260ff4d6a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_5238d4aee652249c28c9c7bb32e69a1db5c4a1216b30e22cedb7385260ff4d6a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5238d4aee652249c28c9c7bb32e69a1db5c4a1216b30e22cedb7385260ff4d6a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5238d4aee652249c28c9c7bb32e69a1db5c4a1216b30e22cedb7385260ff4d6a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be greater than zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20 transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_949e1d5c123b43c1e53a5b0a92a3be85e872ff6095aceb39ae946a881017b2a1(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC1155 token not allowed for co\")\n\n        mstore(add(memPtr, 32), \"nversion\")\n\n    }\n\n    function abi_encode_t_stringliteral_949e1d5c123b43c1e53a5b0a92a3be85e872ff6095aceb39ae946a881017b2a1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_949e1d5c123b43c1e53a5b0a92a3be85e872ff6095aceb39ae946a881017b2a1(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_949e1d5c123b43c1e53a5b0a92a3be85e872ff6095aceb39ae946a881017b2a1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_949e1d5c123b43c1e53a5b0a92a3be85e872ff6095aceb39ae946a881017b2a1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_35d771638d1a130f886af59ec9ada5517bbcdb9238977046eee8481b852e0427(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20 token not defined\")\n\n    }\n\n    function abi_encode_t_stringliteral_35d771638d1a130f886af59ec9ada5517bbcdb9238977046eee8481b852e0427_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_35d771638d1a130f886af59ec9ada5517bbcdb9238977046eee8481b852e0427(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_35d771638d1a130f886af59ec9ada5517bbcdb9238977046eee8481b852e0427__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_35d771638d1a130f886af59ec9ada5517bbcdb9238977046eee8481b852e0427_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061011f575f3560e01c80639c3c4345116100ab578063df84aae91161006f578063df84aae914610334578063ea6a5b0e14610350578063f23a6e611461036c578063f2fde38b1461039c578063fce3fb2f146103b85761011f565b80639c3c43451461027c578063b1fd0a4214610298578063bc197c81146102cc578063c953e56e146102fc578063de562487146103185761011f565b806358be702f116100f257806358be702f146101ea578063652ca87e1461021a578063715018a6146102365780638a13eea7146102405780638da5cb5b1461025e5761011f565b806301ffc9a7146101235780630fcd1e841461015357806315614d5d14610183578063453a1e75146101b7575b5f80fd5b61013d60048036038101906101389190611bfa565b6103eb565b60405161014a9190611c3f565b60405180910390f35b61016d60048036038101906101689190611ce5565b610464565b60405161017a9190611c3f565b60405180910390f35b61019d60048036038101906101989190611d23565b61048e565b6040516101ae959493929190611d6c565b60405180910390f35b6101d160048036038101906101cc9190611d23565b61050d565b6040516101e19493929190611dbd565b60405180910390f35b61020460048036038101906101ff9190611ce5565b610548565b6040516102119190611c3f565b60405180910390f35b610234600480360381019061022f9190611ce5565b610572565b005b61023e6106b7565b005b6102486106ca565b6040516102559190611e5b565b60405180910390f35b6102666106ef565b6040516102739190611e74565b60405180910390f35b61029660048036038101906102919190611ce5565b610716565b005b6102b260048036038101906102ad9190611ce5565b61085b565b6040516102c3959493929190611d6c565b60405180910390f35b6102e660048036038101906102e1919061208d565b6108e5565b6040516102f39190612167565b60405180910390f35b61031660048036038101906103119190611ce5565b610c44565b005b610332600480360381019061032d9190612180565b610cf7565b005b61034e600480360381019061034991906121ab565b610e53565b005b61036a60048036038101906103659190611ce5565b611434565b005b610386600480360381019061038191906121fb565b6114e7565b6040516103939190612167565b60405180910390f35b6103b660048036038101906103b19190612180565b61169b565b005b6103d260048036038101906103cd9190611ce5565b61171f565b6040516103e29493929190611dbd565b60405180910390f35b5f7f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061045d575061045c82611765565b5b9050919050565b6003602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b6006818154811061049d575f80fd5b905f5260205f2090600502015f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154905085565b6005818154811061051c575f80fd5b905f5260205f2090600402015f91509050805f0154908060010154908060020154908060030154905084565b6002602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b61057a6117ce565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141580156105cc57505f8273ffffffffffffffffffffffffffffffffffffffff163b115b61060b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610602906122e8565b60405180910390fd5b600160035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f6101000a81548160ff021916908315150217905550808273ffffffffffffffffffffffffffffffffffffffff167f7a7a4e4c606c134c123ed1f1b82ad01ac98f1262f47e4768a5f0f588da717e8f60405160405180910390a35050565b6106bf6117ce565b6106c85f611855565b565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61071e6117ce565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415801561077057505f8273ffffffffffffffffffffffffffffffffffffffff163b115b6107af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a6906122e8565b60405180910390fd5b600160025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f6101000a81548160ff021916908315150217905550808273ffffffffffffffffffffffffffffffffffffffff167f25a602cd77d0dcd2d9a9271c81530ca6b2befdc1b20ff547cdb34bd1093804b360405160405180910390a35050565b6007602052815f5260405f208181548110610874575f80fd5b905f5260205f2090600502015f9150915050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154905085565b5f8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614610954576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094b90612376565b60405180910390fd5b8251845114610998576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098f906123de565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610a27576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1e90612446565b60405180910390fd5b5f5b8451811015610c305760025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f868381518110610a8357610a82612464565b5b602002602001015181526020019081526020015f205f9054906101000a900460ff16610ae4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adb90612501565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1987868481518110610b3557610b34612464565b5b60200260200101516040518363ffffffff1660e01b8152600401610b5a92919061251f565b5f604051808303815f87803b158015610b71575f80fd5b505af1158015610b83573d5f803e3d5ffd5b50505050848181518110610b9a57610b99612464565b5b60200260200101513373ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f40ba10935627ab450dd36afe32f52afa35f94d71a0c577e5b5b655d05ff6d0ef878581518110610c0457610c03612464565b5b602002602001015142604051610c1b929190612546565b60405180910390a48080600101915050610a29565b5063bc197c8160e01b905095945050505050565b610c4c6117ce565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f6101000a81548160ff021916908315150217905550808273ffffffffffffffffffffffffffffffffffffffff167f7cdf80461ab5065b7b1c6ae92ce85d5d3fd752930ff8c76a2c5f0288648e5b2360405160405180910390a35050565b610cff6117ce565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015610d5157505f8173ffffffffffffffffffffffffffffffffffffffff163b115b610d90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d87906125b7565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f3225966cbaae2904ba12a4821319a2efec8fe5313e9e3376037823b52ab32cf160405160405180910390a35050565b60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f9054906101000a900460ff16610eeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ee290612645565b60405180910390fd5b5f8111610f2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f24906126ad565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610fbc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fb390612446565b60405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161101b939291906126cb565b6020604051808303815f875af1158015611037573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061105b919061272a565b90508061109d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110949061279f565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68836040518263ffffffff1660e01b81526004016110f791906127bd565b5f604051808303815f87803b15801561110e575f80fd5b505af1158015611120573d5f803e3d5ffd5b505050508373ffffffffffffffffffffffffffffffffffffffff1663731133e93385856040518463ffffffff1660e01b815260040161116193929190612809565b5f604051808303815f87803b158015611178575f80fd5b505af115801561118a573d5f803e3d5ffd5b505050505f6040518060a001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001848152602001428152509050600681908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003015560808201518160040155505060075f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030155608082015181600401555050838573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1ca57d76d7b91ecc6a90677f1b8eb7d995f934eda6364134e6021dbba757241e8642604051611425929190612546565b60405180910390a45050505050565b61143c6117ce565b5f60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8381526020019081526020015f205f6101000a81548160ff021916908315150217905550808273ffffffffffffffffffffffffffffffffffffffff167fdf3a4de361f566c7b82e2670c9f25deb777b8a9c5c03e949b07f8932f7cbed3e60405160405180910390a35050565b5f8473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614611556576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154d90612376565b60405180910390fd5b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8581526020019081526020015f205f9054906101000a900460ff166115ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e5906128c1565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff160361167d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167490612446565b60405180910390fd5b611688858585611916565b63f23a6e6160e01b905095945050505050565b6116a36117ce565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611713575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161170a9190611e74565b60405180910390fd5b61171c81611855565b50565b6004602052815f5260405f208181548110611738575f80fd5b905f5260205f2090600402015f9150915050805f0154908060010154908060020154908060030154905084565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6117d6611b8d565b73ffffffffffffffffffffffffffffffffffffffff166117f46106ef565b73ffffffffffffffffffffffffffffffffffffffff161461185357611817611b8d565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161184a9190611e74565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f8190505f73ffffffffffffffffffffffffffffffffffffffff1660015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036119a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a090612929565b60405180910390fd5b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1985836040518363ffffffff1660e01b8152600401611a0592919061251f565b5f604051808303815f87803b158015611a1c575f80fd5b505af1158015611a2e573d5f803e3d5ffd5b505050505f6040518060800160405280858152602001848152602001838152602001428152509050600581908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f0155602082015181600101556040820151816002015560608201518160030155505060045f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f01556020820151816001015560408201518160020155606082015181600301555050838573ffffffffffffffffffffffffffffffffffffffff167f8207f4cc66476fc751f9fa47f50e7bdf31b03fad34f997e73ef4a8c554992647858542604051611b7e93929190612947565b60405180910390a35050505050565b5f33905090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611bd981611ba5565b8114611be3575f80fd5b50565b5f81359050611bf481611bd0565b92915050565b5f60208284031215611c0f57611c0e611b9d565b5b5f611c1c84828501611be6565b91505092915050565b5f8115159050919050565b611c3981611c25565b82525050565b5f602082019050611c525f830184611c30565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c8182611c58565b9050919050565b611c9181611c77565b8114611c9b575f80fd5b50565b5f81359050611cac81611c88565b92915050565b5f819050919050565b611cc481611cb2565b8114611cce575f80fd5b50565b5f81359050611cdf81611cbb565b92915050565b5f8060408385031215611cfb57611cfa611b9d565b5b5f611d0885828601611c9e565b9250506020611d1985828601611cd1565b9150509250929050565b5f60208284031215611d3857611d37611b9d565b5b5f611d4584828501611cd1565b91505092915050565b611d5781611c77565b82525050565b611d6681611cb2565b82525050565b5f60a082019050611d7f5f830188611d4e565b611d8c6020830187611d4e565b611d996040830186611d5d565b611da66060830185611d5d565b611db36080830184611d5d565b9695505050505050565b5f608082019050611dd05f830187611d5d565b611ddd6020830186611d5d565b611dea6040830185611d5d565b611df76060830184611d5d565b95945050505050565b5f819050919050565b5f611e23611e1e611e1984611c58565b611e00565b611c58565b9050919050565b5f611e3482611e09565b9050919050565b5f611e4582611e2a565b9050919050565b611e5581611e3b565b82525050565b5f602082019050611e6e5f830184611e4c565b92915050565b5f602082019050611e875f830184611d4e565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611ed782611e91565b810181811067ffffffffffffffff82111715611ef657611ef5611ea1565b5b80604052505050565b5f611f08611b94565b9050611f148282611ece565b919050565b5f67ffffffffffffffff821115611f3357611f32611ea1565b5b602082029050602081019050919050565b5f80fd5b5f611f5a611f5584611f19565b611eff565b90508083825260208201905060208402830185811115611f7d57611f7c611f44565b5b835b81811015611fa65780611f928882611cd1565b845260208401935050602081019050611f7f565b5050509392505050565b5f82601f830112611fc457611fc3611e8d565b5b8135611fd4848260208601611f48565b91505092915050565b5f80fd5b5f67ffffffffffffffff821115611ffb57611ffa611ea1565b5b61200482611e91565b9050602081019050919050565b828183375f83830152505050565b5f61203161202c84611fe1565b611eff565b90508281526020810184848401111561204d5761204c611fdd565b5b612058848285612011565b509392505050565b5f82601f83011261207457612073611e8d565b5b813561208484826020860161201f565b91505092915050565b5f805f805f60a086880312156120a6576120a5611b9d565b5b5f6120b388828901611c9e565b95505060206120c488828901611c9e565b945050604086013567ffffffffffffffff8111156120e5576120e4611ba1565b5b6120f188828901611fb0565b935050606086013567ffffffffffffffff81111561211257612111611ba1565b5b61211e88828901611fb0565b925050608086013567ffffffffffffffff81111561213f5761213e611ba1565b5b61214b88828901612060565b9150509295509295909350565b61216181611ba5565b82525050565b5f60208201905061217a5f830184612158565b92915050565b5f6020828403121561219557612194611b9d565b5b5f6121a284828501611c9e565b91505092915050565b5f805f606084860312156121c2576121c1611b9d565b5b5f6121cf86828701611c9e565b93505060206121e086828701611cd1565b92505060406121f186828701611cd1565b9150509250925092565b5f805f805f60a0868803121561221457612213611b9d565b5b5f61222188828901611c9e565b955050602061223288828901611c9e565b945050604061224388828901611cd1565b935050606061225488828901611cd1565b925050608086013567ffffffffffffffff81111561227557612274611ba1565b5b61228188828901612060565b9150509295509295909350565b5f82825260208201905092915050565b7f496e76616c6964204552433131353520616464726573730000000000000000005f82015250565b5f6122d260178361228e565b91506122dd8261229e565b602082019050919050565b5f6020820190508181035f8301526122ff816122c6565b9050919050565b7f4f6e6c792074686520746f6b656e206f776e65722063616e20747269676765725f8201527f20636f6e76657273696f6e000000000000000000000000000000000000000000602082015250565b5f612360602b8361228e565b915061236b82612306565b604082019050919050565b5f6020820190508181035f83015261238d81612354565b9050919050565b7f49447320616e642076616c756573206c656e677468206d69736d6174636800005f82015250565b5f6123c8601e8361228e565b91506123d382612394565b602082019050919050565b5f6020820190508181035f8301526123f5816123bc565b9050919050565b7f455243323020746f6b656e206e6f7420736574000000000000000000000000005f82015250565b5f61243060138361228e565b915061243b826123fc565b602082019050919050565b5f6020820190508181035f83015261245d81612424565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4f6e65206f72206d6f7265204552433131353520746f6b656e73206e6f7420615f8201527f6c6c6f77656420666f7220636f6e76657273696f6e0000000000000000000000602082015250565b5f6124eb60358361228e565b91506124f682612491565b604082019050919050565b5f6020820190508181035f830152612518816124df565b9050919050565b5f6040820190506125325f830185611d4e565b61253f6020830184611d5d565b9392505050565b5f6040820190506125595f830185611d5d565b6125666020830184611d5d565b9392505050565b7f496e76616c696420455243323020746f6b656e206164647265737300000000005f82015250565b5f6125a1601b8361228e565b91506125ac8261256d565b602082019050919050565b5f6020820190508181035f8301526125ce81612595565b9050919050565b7f436f6e76657273696f6e206e6f7420616c6c6f77656420666f722074686973205f8201527f4552433131353520746f6b656e00000000000000000000000000000000000000602082015250565b5f61262f602d8361228e565b915061263a826125d5565b604082019050919050565b5f6020820190508181035f83015261265c81612623565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f5f82015250565b5f61269760208361228e565b91506126a282612663565b602082019050919050565b5f6020820190508181035f8301526126c48161268b565b9050919050565b5f6060820190506126de5f830186611d4e565b6126eb6020830185611d4e565b6126f86040830184611d5d565b949350505050565b61270981611c25565b8114612713575f80fd5b50565b5f8151905061272481612700565b92915050565b5f6020828403121561273f5761273e611b9d565b5b5f61274c84828501612716565b91505092915050565b7f4552433230207472616e73666572206661696c656400000000000000000000005f82015250565b5f61278960158361228e565b915061279482612755565b602082019050919050565b5f6020820190508181035f8301526127b68161277d565b9050919050565b5f6020820190506127d05f830184611d5d565b92915050565b5f82825260208201905092915050565b50565b5f6127f45f836127d6565b91506127ff826127e6565b5f82019050919050565b5f60808201905061281c5f830186611d4e565b6128296020830185611d5d565b6128366040830184611d5d565b8181036060830152612847816127e9565b9050949350505050565b7f4552433131353520746f6b656e206e6f7420616c6c6f77656420666f7220636f5f8201527f6e76657273696f6e000000000000000000000000000000000000000000000000602082015250565b5f6128ab60288361228e565b91506128b682612851565b604082019050919050565b5f6020820190508181035f8301526128d88161289f565b9050919050565b7f455243323020746f6b656e206e6f7420646566696e65640000000000000000005f82015250565b5f61291360178361228e565b915061291e826128df565b602082019050919050565b5f6020820190508181035f83015261294081612907565b9050919050565b5f60608201905061295a5f830186611d5d565b6129676020830185611d5d565b6129746040830184611d5d565b94935050505056fea26469706673582212200b65ff57e9097ea226c6a0cec728df58cd48db633b020281aa076e66d9250d2664736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x9C3C4345 GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDF84AAE9 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xDF84AAE9 EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0xEA6A5B0E EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x39C JUMPI DUP1 PUSH4 0xFCE3FB2F EQ PUSH2 0x3B8 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x9C3C4345 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xB1FD0A42 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0xC953E56E EQ PUSH2 0x2FC JUMPI DUP1 PUSH4 0xDE562487 EQ PUSH2 0x318 JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x58BE702F GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x58BE702F EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0x652CA87E EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0x8A13EEA7 EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25E JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0xFCD1E84 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x15614D5D EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x453A1E75 EQ PUSH2 0x1B7 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1BFA JUMP JUMPDEST PUSH2 0x3EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x464 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17A SWAP2 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x198 SWAP2 SWAP1 PUSH2 0x1D23 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x1D23 JUMP JUMPDEST PUSH2 0x50D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x1C3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x572 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23E PUSH2 0x6B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x248 PUSH2 0x6CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x266 PUSH2 0x6EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x1E74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x296 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x291 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2AD SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x85B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D6C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x208D JUMP JUMPDEST PUSH2 0x8E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F3 SWAP2 SWAP1 PUSH2 0x2167 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x311 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x2180 JUMP JUMPDEST PUSH2 0xCF7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x21AB JUMP JUMPDEST PUSH2 0xE53 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x1434 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x386 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x381 SWAP2 SWAP1 PUSH2 0x21FB JUMP JUMPDEST PUSH2 0x14E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0x2167 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B1 SWAP2 SWAP1 PUSH2 0x2180 JUMP JUMPDEST PUSH2 0x169B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3CD SWAP2 SWAP1 PUSH2 0x1CE5 JUMP JUMPDEST PUSH2 0x171F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x45D JUMPI POP PUSH2 0x45C DUP3 PUSH2 0x1765 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x49D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x51C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x57A PUSH2 0x17CE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x5CC JUMPI POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT JUMPDEST PUSH2 0x60B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x602 SWAP1 PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7A7A4E4C606C134C123ED1F1B82AD01AC98F1262F47E4768A5F0F588DA717E8F PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x6BF PUSH2 0x17CE JUMP JUMPDEST PUSH2 0x6C8 PUSH0 PUSH2 0x1855 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x71E PUSH2 0x17CE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x770 JUMPI POP PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT JUMPDEST PUSH2 0x7AF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A6 SWAP1 PUSH2 0x22E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x25A602CD77D0DCD2D9A9271C81530CA6B2BEFDC1B20FF547CDB34BD1093804B3 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x874 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x94B SWAP1 PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 MLOAD DUP5 MLOAD EQ PUSH2 0x998 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98F SWAP1 PUSH2 0x23DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA27 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA1E SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xC30 JUMPI PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xA83 JUMPI PUSH2 0xA82 PUSH2 0x2464 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xAE4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADB SWAP1 PUSH2 0x2501 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP8 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xB35 JUMPI PUSH2 0xB34 PUSH2 0x2464 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB5A SWAP3 SWAP2 SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB71 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB83 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP5 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xB9A JUMPI PUSH2 0xB99 PUSH2 0x2464 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x40BA10935627AB450DD36AFE32F52AFA35F94D71A0C577E5B5B655D05FF6D0EF DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0xC04 JUMPI PUSH2 0xC03 PUSH2 0x2464 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0xC1B SWAP3 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xA29 JUMP JUMPDEST POP PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xC4C PUSH2 0x17CE JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7CDF80461AB5065B7B1C6AE92CE85D5D3FD752930FF8C76A2C5F0288648E5B23 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xCFF PUSH2 0x17CE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0xD51 JUMPI POP PUSH0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT JUMPDEST PUSH2 0xD90 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD87 SWAP1 PUSH2 0x25B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3225966CBAAE2904BA12A4821319A2EFEC8FE5313E9E3376037823B52AB32CF1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xEEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEE2 SWAP1 PUSH2 0x2645 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0xF2D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF24 SWAP1 PUSH2 0x26AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFBC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB3 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x101B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x26CB JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1037 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x105B SWAP2 SWAP1 PUSH2 0x272A JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x109D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1094 SWAP1 PUSH2 0x279F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x42966C68 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10F7 SWAP2 SWAP1 PUSH2 0x27BD JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x110E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1120 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x731133E9 CALLER DUP6 DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1161 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2809 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1178 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x118A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP PUSH1 0x6 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP PUSH1 0x7 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1CA57D76D7B91ECC6A90677F1B8EB7D995F934EDA6364134E6021DBBA757241E DUP7 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1425 SWAP3 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x143C PUSH2 0x17CE JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDF3A4DE361F566C7B82E2670C9F25DEB777B8A9C5C03E949B07F8932F7CBED3E PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1556 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x154D SWAP1 PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E5 SWAP1 PUSH2 0x28C1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x167D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1674 SWAP1 PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1688 DUP6 DUP6 DUP6 PUSH2 0x1916 JUMP JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16A3 PUSH2 0x17CE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1713 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x170A SWAP2 SWAP1 PUSH2 0x1E74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x171C DUP2 PUSH2 0x1855 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1738 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17D6 PUSH2 0x1B8D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17F4 PUSH2 0x6EF JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1853 JUMPI PUSH2 0x1817 PUSH2 0x1B8D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x184A SWAP2 SWAP1 PUSH2 0x1E74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x19A0 SWAP1 PUSH2 0x2929 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP6 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A05 SWAP3 SWAP2 SWAP1 PUSH2 0x251F JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1A1C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A2E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP PUSH1 0x5 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP PUSH1 0x4 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE POP POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8207F4CC66476FC751F9FA47F50E7BDF31B03FAD34F997E73EF4A8C554992647 DUP6 DUP6 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1B7E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2947 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BD9 DUP2 PUSH2 0x1BA5 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BE3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BF4 DUP2 PUSH2 0x1BD0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C0F JUMPI PUSH2 0x1C0E PUSH2 0x1B9D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C1C DUP5 DUP3 DUP6 ADD PUSH2 0x1BE6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C39 DUP2 PUSH2 0x1C25 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C52 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C30 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1C81 DUP3 PUSH2 0x1C58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C91 DUP2 PUSH2 0x1C77 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C9B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CAC DUP2 PUSH2 0x1C88 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CC4 DUP2 PUSH2 0x1CB2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1CCE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CDF DUP2 PUSH2 0x1CBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CFB JUMPI PUSH2 0x1CFA PUSH2 0x1B9D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D08 DUP6 DUP3 DUP7 ADD PUSH2 0x1C9E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D19 DUP6 DUP3 DUP7 ADD PUSH2 0x1CD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D38 JUMPI PUSH2 0x1D37 PUSH2 0x1B9D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D45 DUP5 DUP3 DUP6 ADD PUSH2 0x1CD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D57 DUP2 PUSH2 0x1C77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1D66 DUP2 PUSH2 0x1CB2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x1D7F PUSH0 DUP4 ADD DUP9 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x1D8C PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x1D99 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x1DA6 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x1DB3 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1DD0 PUSH0 DUP4 ADD DUP8 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x1DDD PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x1DEA PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x1DF7 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E23 PUSH2 0x1E1E PUSH2 0x1E19 DUP5 PUSH2 0x1C58 JUMP JUMPDEST PUSH2 0x1E00 JUMP JUMPDEST PUSH2 0x1C58 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E34 DUP3 PUSH2 0x1E09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E45 DUP3 PUSH2 0x1E2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E55 DUP2 PUSH2 0x1E3B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E6E PUSH0 DUP4 ADD DUP5 PUSH2 0x1E4C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E87 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D4E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1ED7 DUP3 PUSH2 0x1E91 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1EF6 JUMPI PUSH2 0x1EF5 PUSH2 0x1EA1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1F08 PUSH2 0x1B94 JUMP JUMPDEST SWAP1 POP PUSH2 0x1F14 DUP3 DUP3 PUSH2 0x1ECE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1F33 JUMPI PUSH2 0x1F32 PUSH2 0x1EA1 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x1F5A PUSH2 0x1F55 DUP5 PUSH2 0x1F19 JUMP JUMPDEST PUSH2 0x1EFF JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x1F7D JUMPI PUSH2 0x1F7C PUSH2 0x1F44 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1FA6 JUMPI DUP1 PUSH2 0x1F92 DUP9 DUP3 PUSH2 0x1CD1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1F7F JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FC4 JUMPI PUSH2 0x1FC3 PUSH2 0x1E8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1FD4 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1F48 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1FFB JUMPI PUSH2 0x1FFA PUSH2 0x1EA1 JUMP JUMPDEST JUMPDEST PUSH2 0x2004 DUP3 PUSH2 0x1E91 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2031 PUSH2 0x202C DUP5 PUSH2 0x1FE1 JUMP JUMPDEST PUSH2 0x1EFF JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x204D JUMPI PUSH2 0x204C PUSH2 0x1FDD JUMP JUMPDEST JUMPDEST PUSH2 0x2058 DUP5 DUP3 DUP6 PUSH2 0x2011 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2074 JUMPI PUSH2 0x2073 PUSH2 0x1E8D JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2084 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x201F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x20A6 JUMPI PUSH2 0x20A5 PUSH2 0x1B9D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20B3 DUP9 DUP3 DUP10 ADD PUSH2 0x1C9E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x20C4 DUP9 DUP3 DUP10 ADD PUSH2 0x1C9E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20E5 JUMPI PUSH2 0x20E4 PUSH2 0x1BA1 JUMP JUMPDEST JUMPDEST PUSH2 0x20F1 DUP9 DUP3 DUP10 ADD PUSH2 0x1FB0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2112 JUMPI PUSH2 0x2111 PUSH2 0x1BA1 JUMP JUMPDEST JUMPDEST PUSH2 0x211E DUP9 DUP3 DUP10 ADD PUSH2 0x1FB0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x213F JUMPI PUSH2 0x213E PUSH2 0x1BA1 JUMP JUMPDEST JUMPDEST PUSH2 0x214B DUP9 DUP3 DUP10 ADD PUSH2 0x2060 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x2161 DUP2 PUSH2 0x1BA5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x217A PUSH0 DUP4 ADD DUP5 PUSH2 0x2158 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2195 JUMPI PUSH2 0x2194 PUSH2 0x1B9D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21A2 DUP5 DUP3 DUP6 ADD PUSH2 0x1C9E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x21C2 JUMPI PUSH2 0x21C1 PUSH2 0x1B9D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21CF DUP7 DUP3 DUP8 ADD PUSH2 0x1C9E JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x21E0 DUP7 DUP3 DUP8 ADD PUSH2 0x1CD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x21F1 DUP7 DUP3 DUP8 ADD PUSH2 0x1CD1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2214 JUMPI PUSH2 0x2213 PUSH2 0x1B9D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2221 DUP9 DUP3 DUP10 ADD PUSH2 0x1C9E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2232 DUP9 DUP3 DUP10 ADD PUSH2 0x1C9E JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2243 DUP9 DUP3 DUP10 ADD PUSH2 0x1CD1 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2254 DUP9 DUP3 DUP10 ADD PUSH2 0x1CD1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2275 JUMPI PUSH2 0x2274 PUSH2 0x1BA1 JUMP JUMPDEST JUMPDEST PUSH2 0x2281 DUP9 DUP3 DUP10 ADD PUSH2 0x2060 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420455243313135352061646472657373000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x22D2 PUSH1 0x17 DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x22DD DUP3 PUSH2 0x229E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x22FF DUP2 PUSH2 0x22C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C792074686520746F6B656E206F776E65722063616E2074726967676572 PUSH0 DUP3 ADD MSTORE PUSH32 0x20636F6E76657273696F6E000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2360 PUSH1 0x2B DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x236B DUP3 PUSH2 0x2306 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x238D DUP2 PUSH2 0x2354 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x49447320616E642076616C756573206C656E677468206D69736D617463680000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23C8 PUSH1 0x1E DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x23D3 DUP3 PUSH2 0x2394 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23F5 DUP2 PUSH2 0x23BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243323020746F6B656E206E6F742073657400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2430 PUSH1 0x13 DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x243B DUP3 PUSH2 0x23FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x245D DUP2 PUSH2 0x2424 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4F6E65206F72206D6F7265204552433131353520746F6B656E73206E6F742061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6C6C6F77656420666F7220636F6E76657273696F6E0000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24EB PUSH1 0x35 DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x24F6 DUP3 PUSH2 0x2491 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2518 DUP2 PUSH2 0x24DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2532 PUSH0 DUP4 ADD DUP6 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x253F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2559 PUSH0 DUP4 ADD DUP6 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x2566 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420455243323020746F6B656E20616464726573730000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x25A1 PUSH1 0x1B DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x25AC DUP3 PUSH2 0x256D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25CE DUP2 PUSH2 0x2595 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E76657273696F6E206E6F7420616C6C6F77656420666F72207468697320 PUSH0 DUP3 ADD MSTORE PUSH32 0x4552433131353520746F6B656E00000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x262F PUSH1 0x2D DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x263A DUP3 PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x265C DUP2 PUSH2 0x2623 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2697 PUSH1 0x20 DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x26A2 DUP3 PUSH2 0x2663 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26C4 DUP2 PUSH2 0x268B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26DE PUSH0 DUP4 ADD DUP7 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x26EB PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x26F8 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2709 DUP2 PUSH2 0x1C25 JUMP JUMPDEST DUP2 EQ PUSH2 0x2713 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2724 DUP2 PUSH2 0x2700 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x273F JUMPI PUSH2 0x273E PUSH2 0x1B9D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x274C DUP5 DUP3 DUP6 ADD PUSH2 0x2716 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433230207472616E73666572206661696C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2789 PUSH1 0x15 DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x2794 DUP3 PUSH2 0x2755 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x27B6 DUP2 PUSH2 0x277D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27D0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x27F4 PUSH0 DUP4 PUSH2 0x27D6 JUMP JUMPDEST SWAP2 POP PUSH2 0x27FF DUP3 PUSH2 0x27E6 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x281C PUSH0 DUP4 ADD DUP7 PUSH2 0x1D4E JUMP JUMPDEST PUSH2 0x2829 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x2836 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x2847 DUP2 PUSH2 0x27E9 JUMP JUMPDEST SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433131353520746F6B656E206E6F7420616C6C6F77656420666F7220636F PUSH0 DUP3 ADD MSTORE PUSH32 0x6E76657273696F6E000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28AB PUSH1 0x28 DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x28B6 DUP3 PUSH2 0x2851 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28D8 DUP2 PUSH2 0x289F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x455243323020746F6B656E206E6F7420646566696E6564000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2913 PUSH1 0x17 DUP4 PUSH2 0x228E JUMP JUMPDEST SWAP2 POP PUSH2 0x291E DUP3 PUSH2 0x28DF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2940 DUP2 PUSH2 0x2907 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x295A PUSH0 DUP4 ADD DUP7 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x2967 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1D5D JUMP JUMPDEST PUSH2 0x2974 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1D5D JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND PUSH6 0xFF57E9097EA2 0x26 0xC6 LOG0 0xCE 0xC7 0x28 0xDF PC 0xCD BASEFEE 0xDB PUSH4 0x3B020281 0xAA SMOD PUSH15 0x66D9250D2664736F6C634300081900 CALLER ",
							"sourceMap": "1442:11481:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;650:221:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2166:73:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3202:61;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;2849:43;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1893:73;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6472:343;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1561:40:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5469:343:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3367:97;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;10129:832;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6024:239;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4923:337;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11630:1291;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7027:239;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7815:546;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2716:71:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;650:221:2;752:4;790:34;775:49;;;:11;:49;;;;:89;;;;828:36;852:11;828:23;:36::i;:::-;775:89;768:96;;650:221;;;:::o;2166:73:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3202:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2849:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1893:73::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6472:343::-;1531:13:0;:11;:13::i;:::-;6612:1:6::1;6585:29;;:15;:29;;;;:64;;;;;6648:1;6618:15;:27;;;:31;6585:64;6577:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;6737:4;6687:21;:38;6709:15;6687:38;;;;;;;;;;;;;;;:47;6726:7;6687:47;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;6800:7;6783:15;6756:52;;;;;;;;;;;;6472:343:::0;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1561:40:6:-;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;5469:343:6:-;1531:13:0;:11;:13::i;:::-;5609:1:6::1;5582:29;;:15;:29;;;;:64;;;;;5645:1;5615:15;:27;;;:31;5582:64;5574:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;5734:4;5684:21;:38;5706:15;5684:38;;;;;;;;;;;;;;;:47;5723:7;5684:47;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;5797:7;5780:15;5753:52;;;;;;;;;;;;5469:343:::0;;:::o;3367:97::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;10129:832::-;10330:6;10368:4;10356:16;;:8;:16;;;10348:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;10452:6;:13;10438:3;:10;:27;10430:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;10549:1;10518:33;;10526:10;;;;;;;;;;;10518:33;;;10510:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10591:9;10586:316;10610:3;:10;10606:1;:14;10586:316;;;10649:21;:33;10671:10;10649:33;;;;;;;;;;;;;;;:41;10683:3;10687:1;10683:6;;;;;;;;:::i;:::-;;;;;;;;10649:41;;;;;;;;;;;;;;;;;;;;;10641:107;;;;;;;;;;;;:::i;:::-;;;;;;;;;10762:10;;;;;;;;;;;:15;;;10778:4;10784:6;10791:1;10784:9;;;;;;;;:::i;:::-;;;;;;;;10762:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10856:3;10860:1;10856:6;;;;;;;;:::i;:::-;;;;;;;;10844:10;10813:78;;10838:4;10813:78;;;10864:6;10871:1;10864:9;;;;;;;;:::i;:::-;;;;;;;;10875:15;10813:78;;;;;;;:::i;:::-;;;;;;;;10622:3;;;;;;;10586:316;;;;10918:36;;;10911:43;;10129:832;;;;;;;:::o;6024:239::-;1531:13:0;:11;:13::i;:::-;6182:5:6::1;6132:21;:38;6154:15;6132:38;;;;;;;;;;;;;;;:47;6171:7;6132:47;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;6248:7;6231:15;6202:54;;;;;;;;;;;;6024:239:::0;;:::o;4923:337::-;1531:13:0;:11;:13::i;:::-;5027:1:6::1;5004:25;;:11;:25;;;;:56;;;;;5059:1;5033:11;:23;;;:27;5004:56;4996:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;5102:16;5129:10;;;;;;;;;;;5102:38;;5186:11;5150:10;;:48;;;;;;;;;;;;;;;;;;5241:11;5213:40;;5231:8;5213:40;;;;;;;;;;;;4986:274;4923:337:::0;:::o;11630:1291::-;11741:21;:38;11763:15;11741:38;;;;;;;;;;;;;;;:47;11780:7;11741:47;;;;;;;;;;;;;;;;;;;;;11733:105;;;;;;;;;;;;:::i;:::-;;;;;;;;;11865:1;11856:6;:10;11848:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;11952:1;11921:33;;11929:10;;;;;;;;;;;11921:33;;;11913:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;12054:12;12069:10;;;;;;;;;;;:23;;;12093:10;12113:4;12120:6;12069:58;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12054:73;;12145:7;12137:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;12223:10;;;;;;;;;;;:15;;;12239:6;12223:23;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12320:15;12305:36;;;12342:10;12354:7;12363:6;12305:69;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12428:44;12475:216;;;;;;;;12526:10;12475:216;;;;;;12567:15;12475:216;;;;;;12605:7;12475:216;;;;12634:6;12475:216;;;;12665:15;12475:216;;;12428:263;;12701:21;12728:6;12701:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12745:37;:49;12783:10;12745:49;;;;;;;;;;;;;;;12800:6;12745:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12881:7;12864:15;12827:87;;12852:10;12827:87;;;12890:6;12898:15;12827:87;;;;;;;:::i;:::-;;;;;;;;11723:1198;;11630:1291;;;:::o;7027:239::-;1531:13:0;:11;:13::i;:::-;7185:5:6::1;7135:21;:38;7157:15;7135:38;;;;;;;;;;;;;;;:47;7174:7;7135:47;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;7251:7;7234:15;7205:54;;;;;;;;;;;;7027:239:::0;;:::o;7815:546::-;7991:6;8029:4;8017:16;;:8;:16;;;8009:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;8099:21;:33;8121:10;8099:33;;;;;;;;;;;;;;;:37;8133:2;8099:37;;;;;;;;;;;;;;;;;;;;;8091:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;8230:1;8199:33;;8207:10;;;;;;;;;;;8199:33;;;8191:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8267:39;8290:4;8296:2;8300:5;8267:22;:39::i;:::-;8323:31;;;8316:38;;7815:546;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2716:71:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;763:146:4:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;8926:889:6:-;9129:19;9151:13;9129:35;;9213:1;9182:33;;9190:10;;;;;;;;;;;9182:33;;;9174:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;9302:10;;;;;;;;;;;:15;;;9318:6;9326:11;9302:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9383:30;9416:192;;;;;;;;9463:14;9416:192;;;;9506:13;9416:192;;;;9546:11;9416:192;;;;9582:15;9416:192;;;9383:225;;9618:17;9641:6;9618:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9658:25;:33;9684:6;9658:33;;;;;;;;;;;;;;;9697:6;9658:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9748:14;9740:6;9720:88;;;9764:13;9779:11;9792:15;9720:88;;;;;;;;:::i;:::-;;;;;;;;9060:755;;8926:889;;;:::o;656:96:3:-;709:7;735:10;728:17;;656:96;:::o;7:75:7:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:126::-;1555:7;1595:42;1588:5;1584:54;1573:65;;1518:126;;;:::o;1650:96::-;1687:7;1716:24;1734:5;1716:24;:::i;:::-;1705:35;;1650:96;;;:::o;1752:122::-;1825:24;1843:5;1825:24;:::i;:::-;1818:5;1815:35;1805:63;;1864:1;1861;1854:12;1805:63;1752:122;:::o;1880:139::-;1926:5;1964:6;1951:20;1942:29;;1980:33;2007:5;1980:33;:::i;:::-;1880:139;;;;:::o;2025:77::-;2062:7;2091:5;2080:16;;2025:77;;;:::o;2108:122::-;2181:24;2199:5;2181:24;:::i;:::-;2174:5;2171:35;2161:63;;2220:1;2217;2210:12;2161:63;2108:122;:::o;2236:139::-;2282:5;2320:6;2307:20;2298:29;;2336:33;2363:5;2336:33;:::i;:::-;2236:139;;;;:::o;2381:474::-;2449:6;2457;2506:2;2494:9;2485:7;2481:23;2477:32;2474:119;;;2512:79;;:::i;:::-;2474:119;2632:1;2657:53;2702:7;2693:6;2682:9;2678:22;2657:53;:::i;:::-;2647:63;;2603:117;2759:2;2785:53;2830:7;2821:6;2810:9;2806:22;2785:53;:::i;:::-;2775:63;;2730:118;2381:474;;;;;:::o;2861:329::-;2920:6;2969:2;2957:9;2948:7;2944:23;2940:32;2937:119;;;2975:79;;:::i;:::-;2937:119;3095:1;3120:53;3165:7;3156:6;3145:9;3141:22;3120:53;:::i;:::-;3110:63;;3066:117;2861:329;;;;:::o;3196:118::-;3283:24;3301:5;3283:24;:::i;:::-;3278:3;3271:37;3196:118;;:::o;3320:::-;3407:24;3425:5;3407:24;:::i;:::-;3402:3;3395:37;3320:118;;:::o;3444:664::-;3649:4;3687:3;3676:9;3672:19;3664:27;;3701:71;3769:1;3758:9;3754:17;3745:6;3701:71;:::i;:::-;3782:72;3850:2;3839:9;3835:18;3826:6;3782:72;:::i;:::-;3864;3932:2;3921:9;3917:18;3908:6;3864:72;:::i;:::-;3946;4014:2;4003:9;3999:18;3990:6;3946:72;:::i;:::-;4028:73;4096:3;4085:9;4081:19;4072:6;4028:73;:::i;:::-;3444:664;;;;;;;;:::o;4114:553::-;4291:4;4329:3;4318:9;4314:19;4306:27;;4343:71;4411:1;4400:9;4396:17;4387:6;4343:71;:::i;:::-;4424:72;4492:2;4481:9;4477:18;4468:6;4424:72;:::i;:::-;4506;4574:2;4563:9;4559:18;4550:6;4506:72;:::i;:::-;4588;4656:2;4645:9;4641:18;4632:6;4588:72;:::i;:::-;4114:553;;;;;;;:::o;4673:60::-;4701:3;4722:5;4715:12;;4673:60;;;:::o;4739:142::-;4789:9;4822:53;4840:34;4849:24;4867:5;4849:24;:::i;:::-;4840:34;:::i;:::-;4822:53;:::i;:::-;4809:66;;4739:142;;;:::o;4887:126::-;4937:9;4970:37;5001:5;4970:37;:::i;:::-;4957:50;;4887:126;;;:::o;5019:156::-;5099:9;5132:37;5163:5;5132:37;:::i;:::-;5119:50;;5019:156;;;:::o;5181:191::-;5298:67;5359:5;5298:67;:::i;:::-;5293:3;5286:80;5181:191;;:::o;5378:282::-;5501:4;5539:2;5528:9;5524:18;5516:26;;5552:101;5650:1;5639:9;5635:17;5626:6;5552:101;:::i;:::-;5378:282;;;;:::o;5666:222::-;5759:4;5797:2;5786:9;5782:18;5774:26;;5810:71;5878:1;5867:9;5863:17;5854:6;5810:71;:::i;:::-;5666:222;;;;:::o;5894:117::-;6003:1;6000;5993:12;6017:102;6058:6;6109:2;6105:7;6100:2;6093:5;6089:14;6085:28;6075:38;;6017:102;;;:::o;6125:180::-;6173:77;6170:1;6163:88;6270:4;6267:1;6260:15;6294:4;6291:1;6284:15;6311:281;6394:27;6416:4;6394:27;:::i;:::-;6386:6;6382:40;6524:6;6512:10;6509:22;6488:18;6476:10;6473:34;6470:62;6467:88;;;6535:18;;:::i;:::-;6467:88;6575:10;6571:2;6564:22;6354:238;6311:281;;:::o;6598:129::-;6632:6;6659:20;;:::i;:::-;6649:30;;6688:33;6716:4;6708:6;6688:33;:::i;:::-;6598:129;;;:::o;6733:311::-;6810:4;6900:18;6892:6;6889:30;6886:56;;;6922:18;;:::i;:::-;6886:56;6972:4;6964:6;6960:17;6952:25;;7032:4;7026;7022:15;7014:23;;6733:311;;;:::o;7050:117::-;7159:1;7156;7149:12;7190:710;7286:5;7311:81;7327:64;7384:6;7327:64;:::i;:::-;7311:81;:::i;:::-;7302:90;;7412:5;7441:6;7434:5;7427:21;7475:4;7468:5;7464:16;7457:23;;7528:4;7520:6;7516:17;7508:6;7504:30;7557:3;7549:6;7546:15;7543:122;;;7576:79;;:::i;:::-;7543:122;7691:6;7674:220;7708:6;7703:3;7700:15;7674:220;;;7783:3;7812:37;7845:3;7833:10;7812:37;:::i;:::-;7807:3;7800:50;7879:4;7874:3;7870:14;7863:21;;7750:144;7734:4;7729:3;7725:14;7718:21;;7674:220;;;7678:21;7292:608;;7190:710;;;;;:::o;7923:370::-;7994:5;8043:3;8036:4;8028:6;8024:17;8020:27;8010:122;;8051:79;;:::i;:::-;8010:122;8168:6;8155:20;8193:94;8283:3;8275:6;8268:4;8260:6;8256:17;8193:94;:::i;:::-;8184:103;;8000:293;7923:370;;;;:::o;8299:117::-;8408:1;8405;8398:12;8422:307;8483:4;8573:18;8565:6;8562:30;8559:56;;;8595:18;;:::i;:::-;8559:56;8633:29;8655:6;8633:29;:::i;:::-;8625:37;;8717:4;8711;8707:15;8699:23;;8422:307;;;:::o;8735:148::-;8833:6;8828:3;8823;8810:30;8874:1;8865:6;8860:3;8856:16;8849:27;8735:148;;;:::o;8889:423::-;8966:5;8991:65;9007:48;9048:6;9007:48;:::i;:::-;8991:65;:::i;:::-;8982:74;;9079:6;9072:5;9065:21;9117:4;9110:5;9106:16;9155:3;9146:6;9141:3;9137:16;9134:25;9131:112;;;9162:79;;:::i;:::-;9131:112;9252:54;9299:6;9294:3;9289;9252:54;:::i;:::-;8972:340;8889:423;;;;;:::o;9331:338::-;9386:5;9435:3;9428:4;9420:6;9416:17;9412:27;9402:122;;9443:79;;:::i;:::-;9402:122;9560:6;9547:20;9585:78;9659:3;9651:6;9644:4;9636:6;9632:17;9585:78;:::i;:::-;9576:87;;9392:277;9331:338;;;;:::o;9675:1509::-;9829:6;9837;9845;9853;9861;9910:3;9898:9;9889:7;9885:23;9881:33;9878:120;;;9917:79;;:::i;:::-;9878:120;10037:1;10062:53;10107:7;10098:6;10087:9;10083:22;10062:53;:::i;:::-;10052:63;;10008:117;10164:2;10190:53;10235:7;10226:6;10215:9;10211:22;10190:53;:::i;:::-;10180:63;;10135:118;10320:2;10309:9;10305:18;10292:32;10351:18;10343:6;10340:30;10337:117;;;10373:79;;:::i;:::-;10337:117;10478:78;10548:7;10539:6;10528:9;10524:22;10478:78;:::i;:::-;10468:88;;10263:303;10633:2;10622:9;10618:18;10605:32;10664:18;10656:6;10653:30;10650:117;;;10686:79;;:::i;:::-;10650:117;10791:78;10861:7;10852:6;10841:9;10837:22;10791:78;:::i;:::-;10781:88;;10576:303;10946:3;10935:9;10931:19;10918:33;10978:18;10970:6;10967:30;10964:117;;;11000:79;;:::i;:::-;10964:117;11105:62;11159:7;11150:6;11139:9;11135:22;11105:62;:::i;:::-;11095:72;;10889:288;9675:1509;;;;;;;;:::o;11190:115::-;11275:23;11292:5;11275:23;:::i;:::-;11270:3;11263:36;11190:115;;:::o;11311:218::-;11402:4;11440:2;11429:9;11425:18;11417:26;;11453:69;11519:1;11508:9;11504:17;11495:6;11453:69;:::i;:::-;11311:218;;;;:::o;11535:329::-;11594:6;11643:2;11631:9;11622:7;11618:23;11614:32;11611:119;;;11649:79;;:::i;:::-;11611:119;11769:1;11794:53;11839:7;11830:6;11819:9;11815:22;11794:53;:::i;:::-;11784:63;;11740:117;11535:329;;;;:::o;11870:619::-;11947:6;11955;11963;12012:2;12000:9;11991:7;11987:23;11983:32;11980:119;;;12018:79;;:::i;:::-;11980:119;12138:1;12163:53;12208:7;12199:6;12188:9;12184:22;12163:53;:::i;:::-;12153:63;;12109:117;12265:2;12291:53;12336:7;12327:6;12316:9;12312:22;12291:53;:::i;:::-;12281:63;;12236:118;12393:2;12419:53;12464:7;12455:6;12444:9;12440:22;12419:53;:::i;:::-;12409:63;;12364:118;11870:619;;;;;:::o;12495:1089::-;12599:6;12607;12615;12623;12631;12680:3;12668:9;12659:7;12655:23;12651:33;12648:120;;;12687:79;;:::i;:::-;12648:120;12807:1;12832:53;12877:7;12868:6;12857:9;12853:22;12832:53;:::i;:::-;12822:63;;12778:117;12934:2;12960:53;13005:7;12996:6;12985:9;12981:22;12960:53;:::i;:::-;12950:63;;12905:118;13062:2;13088:53;13133:7;13124:6;13113:9;13109:22;13088:53;:::i;:::-;13078:63;;13033:118;13190:2;13216:53;13261:7;13252:6;13241:9;13237:22;13216:53;:::i;:::-;13206:63;;13161:118;13346:3;13335:9;13331:19;13318:33;13378:18;13370:6;13367:30;13364:117;;;13400:79;;:::i;:::-;13364:117;13505:62;13559:7;13550:6;13539:9;13535:22;13505:62;:::i;:::-;13495:72;;13289:288;12495:1089;;;;;;;;:::o;13590:169::-;13674:11;13708:6;13703:3;13696:19;13748:4;13743:3;13739:14;13724:29;;13590:169;;;;:::o;13765:173::-;13905:25;13901:1;13893:6;13889:14;13882:49;13765:173;:::o;13944:366::-;14086:3;14107:67;14171:2;14166:3;14107:67;:::i;:::-;14100:74;;14183:93;14272:3;14183:93;:::i;:::-;14301:2;14296:3;14292:12;14285:19;;13944:366;;;:::o;14316:419::-;14482:4;14520:2;14509:9;14505:18;14497:26;;14569:9;14563:4;14559:20;14555:1;14544:9;14540:17;14533:47;14597:131;14723:4;14597:131;:::i;:::-;14589:139;;14316:419;;;:::o;14741:230::-;14881:34;14877:1;14869:6;14865:14;14858:58;14950:13;14945:2;14937:6;14933:15;14926:38;14741:230;:::o;14977:366::-;15119:3;15140:67;15204:2;15199:3;15140:67;:::i;:::-;15133:74;;15216:93;15305:3;15216:93;:::i;:::-;15334:2;15329:3;15325:12;15318:19;;14977:366;;;:::o;15349:419::-;15515:4;15553:2;15542:9;15538:18;15530:26;;15602:9;15596:4;15592:20;15588:1;15577:9;15573:17;15566:47;15630:131;15756:4;15630:131;:::i;:::-;15622:139;;15349:419;;;:::o;15774:180::-;15914:32;15910:1;15902:6;15898:14;15891:56;15774:180;:::o;15960:366::-;16102:3;16123:67;16187:2;16182:3;16123:67;:::i;:::-;16116:74;;16199:93;16288:3;16199:93;:::i;:::-;16317:2;16312:3;16308:12;16301:19;;15960:366;;;:::o;16332:419::-;16498:4;16536:2;16525:9;16521:18;16513:26;;16585:9;16579:4;16575:20;16571:1;16560:9;16556:17;16549:47;16613:131;16739:4;16613:131;:::i;:::-;16605:139;;16332:419;;;:::o;16757:169::-;16897:21;16893:1;16885:6;16881:14;16874:45;16757:169;:::o;16932:366::-;17074:3;17095:67;17159:2;17154:3;17095:67;:::i;:::-;17088:74;;17171:93;17260:3;17171:93;:::i;:::-;17289:2;17284:3;17280:12;17273:19;;16932:366;;;:::o;17304:419::-;17470:4;17508:2;17497:9;17493:18;17485:26;;17557:9;17551:4;17547:20;17543:1;17532:9;17528:17;17521:47;17585:131;17711:4;17585:131;:::i;:::-;17577:139;;17304:419;;;:::o;17729:180::-;17777:77;17774:1;17767:88;17874:4;17871:1;17864:15;17898:4;17895:1;17888:15;17915:240;18055:34;18051:1;18043:6;18039:14;18032:58;18124:23;18119:2;18111:6;18107:15;18100:48;17915:240;:::o;18161:366::-;18303:3;18324:67;18388:2;18383:3;18324:67;:::i;:::-;18317:74;;18400:93;18489:3;18400:93;:::i;:::-;18518:2;18513:3;18509:12;18502:19;;18161:366;;;:::o;18533:419::-;18699:4;18737:2;18726:9;18722:18;18714:26;;18786:9;18780:4;18776:20;18772:1;18761:9;18757:17;18750:47;18814:131;18940:4;18814:131;:::i;:::-;18806:139;;18533:419;;;:::o;18958:332::-;19079:4;19117:2;19106:9;19102:18;19094:26;;19130:71;19198:1;19187:9;19183:17;19174:6;19130:71;:::i;:::-;19211:72;19279:2;19268:9;19264:18;19255:6;19211:72;:::i;:::-;18958:332;;;;;:::o;19296:::-;19417:4;19455:2;19444:9;19440:18;19432:26;;19468:71;19536:1;19525:9;19521:17;19512:6;19468:71;:::i;:::-;19549:72;19617:2;19606:9;19602:18;19593:6;19549:72;:::i;:::-;19296:332;;;;;:::o;19634:177::-;19774:29;19770:1;19762:6;19758:14;19751:53;19634:177;:::o;19817:366::-;19959:3;19980:67;20044:2;20039:3;19980:67;:::i;:::-;19973:74;;20056:93;20145:3;20056:93;:::i;:::-;20174:2;20169:3;20165:12;20158:19;;19817:366;;;:::o;20189:419::-;20355:4;20393:2;20382:9;20378:18;20370:26;;20442:9;20436:4;20432:20;20428:1;20417:9;20413:17;20406:47;20470:131;20596:4;20470:131;:::i;:::-;20462:139;;20189:419;;;:::o;20614:232::-;20754:34;20750:1;20742:6;20738:14;20731:58;20823:15;20818:2;20810:6;20806:15;20799:40;20614:232;:::o;20852:366::-;20994:3;21015:67;21079:2;21074:3;21015:67;:::i;:::-;21008:74;;21091:93;21180:3;21091:93;:::i;:::-;21209:2;21204:3;21200:12;21193:19;;20852:366;;;:::o;21224:419::-;21390:4;21428:2;21417:9;21413:18;21405:26;;21477:9;21471:4;21467:20;21463:1;21452:9;21448:17;21441:47;21505:131;21631:4;21505:131;:::i;:::-;21497:139;;21224:419;;;:::o;21649:182::-;21789:34;21785:1;21777:6;21773:14;21766:58;21649:182;:::o;21837:366::-;21979:3;22000:67;22064:2;22059:3;22000:67;:::i;:::-;21993:74;;22076:93;22165:3;22076:93;:::i;:::-;22194:2;22189:3;22185:12;22178:19;;21837:366;;;:::o;22209:419::-;22375:4;22413:2;22402:9;22398:18;22390:26;;22462:9;22456:4;22452:20;22448:1;22437:9;22433:17;22426:47;22490:131;22616:4;22490:131;:::i;:::-;22482:139;;22209:419;;;:::o;22634:442::-;22783:4;22821:2;22810:9;22806:18;22798:26;;22834:71;22902:1;22891:9;22887:17;22878:6;22834:71;:::i;:::-;22915:72;22983:2;22972:9;22968:18;22959:6;22915:72;:::i;:::-;22997;23065:2;23054:9;23050:18;23041:6;22997:72;:::i;:::-;22634:442;;;;;;:::o;23082:116::-;23152:21;23167:5;23152:21;:::i;:::-;23145:5;23142:32;23132:60;;23188:1;23185;23178:12;23132:60;23082:116;:::o;23204:137::-;23258:5;23289:6;23283:13;23274:22;;23305:30;23329:5;23305:30;:::i;:::-;23204:137;;;;:::o;23347:345::-;23414:6;23463:2;23451:9;23442:7;23438:23;23434:32;23431:119;;;23469:79;;:::i;:::-;23431:119;23589:1;23614:61;23667:7;23658:6;23647:9;23643:22;23614:61;:::i;:::-;23604:71;;23560:125;23347:345;;;;:::o;23698:171::-;23838:23;23834:1;23826:6;23822:14;23815:47;23698:171;:::o;23875:366::-;24017:3;24038:67;24102:2;24097:3;24038:67;:::i;:::-;24031:74;;24114:93;24203:3;24114:93;:::i;:::-;24232:2;24227:3;24223:12;24216:19;;23875:366;;;:::o;24247:419::-;24413:4;24451:2;24440:9;24436:18;24428:26;;24500:9;24494:4;24490:20;24486:1;24475:9;24471:17;24464:47;24528:131;24654:4;24528:131;:::i;:::-;24520:139;;24247:419;;;:::o;24672:222::-;24765:4;24803:2;24792:9;24788:18;24780:26;;24816:71;24884:1;24873:9;24869:17;24860:6;24816:71;:::i;:::-;24672:222;;;;:::o;24900:168::-;24983:11;25017:6;25012:3;25005:19;25057:4;25052:3;25048:14;25033:29;;24900:168;;;;:::o;25074:114::-;;:::o;25194:362::-;25335:3;25356:65;25419:1;25414:3;25356:65;:::i;:::-;25349:72;;25430:93;25519:3;25430:93;:::i;:::-;25548:1;25543:3;25539:11;25532:18;;25194:362;;;:::o;25562:748::-;25811:4;25849:3;25838:9;25834:19;25826:27;;25863:71;25931:1;25920:9;25916:17;25907:6;25863:71;:::i;:::-;25944:72;26012:2;26001:9;25997:18;25988:6;25944:72;:::i;:::-;26026;26094:2;26083:9;26079:18;26070:6;26026:72;:::i;:::-;26145:9;26139:4;26135:20;26130:2;26119:9;26115:18;26108:48;26173:130;26298:4;26173:130;:::i;:::-;26165:138;;25562:748;;;;;;:::o;26316:227::-;26456:34;26452:1;26444:6;26440:14;26433:58;26525:10;26520:2;26512:6;26508:15;26501:35;26316:227;:::o;26549:366::-;26691:3;26712:67;26776:2;26771:3;26712:67;:::i;:::-;26705:74;;26788:93;26877:3;26788:93;:::i;:::-;26906:2;26901:3;26897:12;26890:19;;26549:366;;;:::o;26921:419::-;27087:4;27125:2;27114:9;27110:18;27102:26;;27174:9;27168:4;27164:20;27160:1;27149:9;27145:17;27138:47;27202:131;27328:4;27202:131;:::i;:::-;27194:139;;26921:419;;;:::o;27346:173::-;27486:25;27482:1;27474:6;27470:14;27463:49;27346:173;:::o;27525:366::-;27667:3;27688:67;27752:2;27747:3;27688:67;:::i;:::-;27681:74;;27764:93;27853:3;27764:93;:::i;:::-;27882:2;27877:3;27873:12;27866:19;;27525:366;;;:::o;27897:419::-;28063:4;28101:2;28090:9;28086:18;28078:26;;28150:9;28144:4;28140:20;28136:1;28125:9;28121:17;28114:47;28178:131;28304:4;28178:131;:::i;:::-;28170:139;;27897:419;;;:::o;28322:442::-;28471:4;28509:2;28498:9;28494:18;28486:26;;28522:71;28590:1;28579:9;28575:17;28566:6;28522:71;:::i;:::-;28603:72;28671:2;28660:9;28656:18;28647:6;28603:72;:::i;:::-;28685;28753:2;28742:9;28738:18;28729:6;28685:72;:::i;:::-;28322:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2134800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addAllowedERC1155Forward(address,uint256)": "infinite",
								"addAllowedERC1155Reverse(address,uint256)": "infinite",
								"allowedERC1155Forward(address,uint256)": "3094",
								"allowedERC1155Reverse(address,uint256)": "3117",
								"conversionHistory(uint256)": "infinite",
								"conversionRecordsBySender(address,uint256)": "infinite",
								"conversionRecordsERC20ToERC1155ByUser(address,uint256)": "infinite",
								"convertToERC1155(address,uint256,uint256)": "infinite",
								"erc20ToErc1155History(uint256)": "infinite",
								"erc20Token()": "infinite",
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"owner()": "2626",
								"removeAllowedERC1155Forward(address,uint256)": "infinite",
								"removeAllowedERC1155Reverse(address,uint256)": "infinite",
								"renounceOwnership()": "infinite",
								"setERC20Token(address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"transferOwnership(address)": "infinite"
							},
							"internal": {
								"_convertERC1155ToERC20(address,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1442,
									"end": 12923,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 1442,
									"end": 12923,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1442,
									"end": 12923,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "CALLVALUE",
									"source": 6
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4699,
									"end": 4735,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4721,
									"end": 4731,
									"name": "CALLER",
									"source": 6
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1442,
									"end": 12923,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1442,
									"end": 12923,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 133,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 133,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 44,
									"end": 51,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 84,
									"end": 126,
									"name": "PUSH",
									"source": 7,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 77,
									"end": 82,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 73,
									"end": 127,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 62,
									"end": 127,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 62,
									"end": 127,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 7,
									"end": 133,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 7,
									"end": 133,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 7,
									"end": 133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 139,
									"end": 235,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 139,
									"end": 235,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 176,
									"end": 183,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 223,
									"end": 228,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 205,
									"end": 229,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 205,
									"end": 229,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 205,
									"end": 229,
									"name": "tag",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 205,
									"end": 229,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 194,
									"end": 229,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 194,
									"end": 229,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 139,
									"end": 235,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 139,
									"end": 235,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 139,
									"end": 235,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 241,
									"end": 359,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 241,
									"end": 359,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 346,
									"end": 351,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 328,
									"end": 352,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 328,
									"end": 352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 328,
									"end": 352,
									"name": "tag",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 328,
									"end": 352,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 323,
									"end": 326,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 316,
									"end": 353,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 241,
									"end": 359,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 241,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"name": "tag",
									"source": 7,
									"value": "7"
								},
								{
									"begin": 365,
									"end": 587,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 458,
									"end": 462,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 496,
									"end": 498,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 485,
									"end": 494,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 481,
									"end": 499,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 473,
									"end": 499,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 473,
									"end": 499,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 577,
									"end": 578,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 566,
									"end": 575,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 562,
									"end": 579,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 553,
									"end": 559,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 509,
									"end": 580,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 509,
									"end": 580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 509,
									"end": 580,
									"name": "tag",
									"source": 7,
									"value": "23"
								},
								{
									"begin": 509,
									"end": 580,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 365,
									"end": 587,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 1442,
									"end": 12923,
									"name": "tag",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 1442,
									"end": 12923,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1442,
									"end": 12923,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1442,
									"end": 12923,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1442,
									"end": 12923,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1442,
									"end": 12923,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1442,
									"end": 12923,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 1442,
									"end": 12923,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1442,
									"end": 12923,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b65ff57e9097ea226c6a0cec728df58cd48db633b020281aa076e66d9250d2664736f6c63430008190033",
									".code": [
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "tag",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "SHR",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "9C3C4345"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "DF84AAE9"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "DF84AAE9"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "EA6A5B0E"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "F23A6E61"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "F2FDE38B"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "FCE3FB2F"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "9C3C4345"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "B1FD0A42"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "BC197C81"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "C953E56E"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "DE562487"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "tag",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "58BE702F"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "58BE702F"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "652CA87E"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "715018A6"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "9"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "8A13EEA7"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "tag",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A7"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "FCD1E84"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "15614D5D"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "453A1E75"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "tag",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 12923,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 650,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 650,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 650,
											"end": 871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "tag",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2166,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2166,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2166,
											"end": 2239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "tag",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 3202,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3202,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3202,
											"end": 3263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "tag",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 2849,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2849,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2849,
											"end": 2892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "tag",
											"source": 6,
											"value": "45"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "tag",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1893,
											"end": 1966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1893,
											"end": 1966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 1893,
											"end": 1966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "tag",
											"source": 6,
											"value": "50"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "tag",
											"source": 6,
											"value": "8"
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 6472,
											"end": 6815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "tag",
											"source": 6,
											"value": "52"
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 6472,
											"end": 6815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1561,
											"end": 1601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "tag",
											"source": 6,
											"value": "56"
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "59"
										},
										{
											"begin": 1561,
											"end": 1601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "tag",
											"source": 6,
											"value": "58"
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "tag",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 5469,
											"end": 5812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 5469,
											"end": 5812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "tag",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3367,
											"end": 3464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3367,
											"end": 3464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "tag",
											"source": 6,
											"value": "67"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 3367,
											"end": 3464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 10129,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 10129,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "tag",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 10129,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "tag",
											"source": 6,
											"value": "75"
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "tag",
											"source": 6,
											"value": "15"
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 6024,
											"end": 6263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 6024,
											"end": 6263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "tag",
											"source": 6,
											"value": "16"
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "82"
										},
										{
											"begin": 4923,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "tag",
											"source": 6,
											"value": "81"
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4923,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 11630,
											"end": 12921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 11630,
											"end": 12921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "tag",
											"source": 6,
											"value": "84"
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 7027,
											"end": 7266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 7027,
											"end": 7266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "tag",
											"source": 6,
											"value": "88"
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "STOP",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "93"
										},
										{
											"begin": 7815,
											"end": 8361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 7815,
											"end": 8361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "76"
										},
										{
											"begin": 7815,
											"end": 8361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "tag",
											"source": 6,
											"value": "95"
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "tag",
											"source": 6,
											"value": "21"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 2716,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "tag",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2716,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "tag",
											"source": 6,
											"value": "99"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 2716,
											"end": 2787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "tag",
											"source": 6,
											"value": "102"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "RETURN",
											"source": 6
										},
										{
											"begin": 650,
											"end": 871,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 650,
											"end": 871,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 752,
											"end": 756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 775,
											"end": 824,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 775,
											"end": 786,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 775,
											"end": 824,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 775,
											"end": 824,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 775,
											"end": 824,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 775,
											"end": 824,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 775,
											"end": 864,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 775,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 775,
											"end": 864,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 775,
											"end": 864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 828,
											"end": 864,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 852,
											"end": 863,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 828,
											"end": 851,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 828,
											"end": 864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 828,
											"end": 864,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 828,
											"end": 864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 775,
											"end": 864,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 775,
											"end": 864,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 768,
											"end": 864,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 768,
											"end": 864,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 650,
											"end": 871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "tag",
											"source": 6,
											"value": "34"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2166,
											"end": 2239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "tag",
											"source": 6,
											"value": "39"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "tag",
											"source": 6,
											"value": "109"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2849,
											"end": 2892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "tag",
											"source": 6,
											"value": "49"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1893,
											"end": 1966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6612,
											"end": 6613,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6585,
											"end": 6614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6585,
											"end": 6614,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6600,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6614,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6585,
											"end": 6614,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6614,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6614,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6649,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6649,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 6585,
											"end": 6649,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6649,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6648,
											"end": 6649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6633,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6618,
											"end": 6645,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6645,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 6618,
											"end": 6649,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6585,
											"end": 6649,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 6585,
											"end": 6649,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 6577,
											"end": 6677,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 6577,
											"end": 6677,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6737,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 6687,
											"end": 6708,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 6687,
											"end": 6725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6709,
											"end": 6724,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6687,
											"end": 6725,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6687,
											"end": 6725,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6725,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6687,
											"end": 6725,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6725,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6725,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6725,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6687,
											"end": 6725,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6725,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6726,
											"end": 6733,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6687,
											"end": 6741,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6800,
											"end": 6807,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6783,
											"end": 6798,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6756,
											"end": 6808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7A7A4E4C606C134C123ED1F1B82AD01AC98F1262F47E4768A5F0F588DA717E8F"
										},
										{
											"begin": 6756,
											"end": 6808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6756,
											"end": 6808,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6808,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6756,
											"end": 6808,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6808,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6808,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6808,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6756,
											"end": 6808,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6472,
											"end": 6815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1561,
											"end": 1601,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5582,
											"end": 5611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5582,
											"end": 5611,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5597,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5611,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5582,
											"end": 5611,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5611,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5611,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5646,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5646,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5646,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5582,
											"end": 5646,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5646,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5645,
											"end": 5646,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5615,
											"end": 5630,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5642,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5615,
											"end": 5642,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5642,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 5615,
											"end": 5646,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5582,
											"end": 5646,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 5582,
											"end": 5646,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 5574,
											"end": 5674,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 5574,
											"end": 5674,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5734,
											"end": 5738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5684,
											"end": 5705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5684,
											"end": 5722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5721,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5684,
											"end": 5722,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5684,
											"end": 5722,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5684,
											"end": 5722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5684,
											"end": 5722,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5684,
											"end": 5722,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5723,
											"end": 5730,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5731,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5684,
											"end": 5731,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5731,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5731,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5731,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5684,
											"end": 5731,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5684,
											"end": 5731,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5731,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5684,
											"end": 5738,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5797,
											"end": 5804,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5780,
											"end": 5795,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5753,
											"end": 5805,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "25A602CD77D0DCD2D9A9271C81530CA6B2BEFDC1B20FF547CDB34BD1093804B3"
										},
										{
											"begin": 5753,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5753,
											"end": 5805,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5805,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5753,
											"end": 5805,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5805,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5805,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5805,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5805,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5753,
											"end": 5805,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5812,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5469,
											"end": 5812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "tag",
											"source": 6,
											"value": "69"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3367,
											"end": 3464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10330,
											"end": 10336,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10368,
											"end": 10372,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10372,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10356,
											"end": 10372,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10364,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10372,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10356,
											"end": 10372,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10356,
											"end": 10372,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 10348,
											"end": 10420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "tag",
											"source": 6,
											"value": "135"
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 10348,
											"end": 10420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10452,
											"end": 10458,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10452,
											"end": 10465,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10438,
											"end": 10441,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10438,
											"end": 10448,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10438,
											"end": 10465,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 10430,
											"end": 10500,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 10430,
											"end": 10500,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10549,
											"end": 10550,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10518,
											"end": 10551,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10518,
											"end": 10551,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10526,
											"end": 10536,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10526,
											"end": 10536,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10526,
											"end": 10536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10526,
											"end": 10536,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10526,
											"end": 10536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10526,
											"end": 10536,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10526,
											"end": 10536,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10526,
											"end": 10536,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10526,
											"end": 10536,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10526,
											"end": 10536,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10526,
											"end": 10536,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10518,
											"end": 10551,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10518,
											"end": 10551,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10518,
											"end": 10551,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 10510,
											"end": 10575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 10510,
											"end": 10575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10591,
											"end": 10600,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10586,
											"end": 10902,
											"name": "tag",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 10586,
											"end": 10902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10613,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10610,
											"end": 10620,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10606,
											"end": 10607,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10606,
											"end": 10620,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10586,
											"end": 10902,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10586,
											"end": 10902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 10586,
											"end": 10902,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10670,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10671,
											"end": 10681,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10649,
											"end": 10682,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10686,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10687,
											"end": 10688,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 10683,
											"end": 10689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "tag",
											"source": 6,
											"value": "147"
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10683,
											"end": 10689,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 10649,
											"end": 10690,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 10641,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 10641,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10772,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10762,
											"end": 10772,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10762,
											"end": 10772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10772,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10772,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 10762,
											"end": 10772,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10772,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10772,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10772,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10762,
											"end": 10772,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10777,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10762,
											"end": 10777,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10777,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 10778,
											"end": 10782,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 10790,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 10791,
											"end": 10792,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 10784,
											"end": 10793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10784,
											"end": 10793,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 10762,
											"end": 10794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "tag",
											"source": 6,
											"value": "154"
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "tag",
											"source": 6,
											"value": "158"
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10762,
											"end": 10794,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10859,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10860,
											"end": 10861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 10856,
											"end": 10862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10856,
											"end": 10862,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10844,
											"end": 10854,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10838,
											"end": 10842,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "PUSH",
											"source": 6,
											"value": "40BA10935627AB450DD36AFE32F52AFA35F94D71A0C577E5B5B655D05FF6D0EF"
										},
										{
											"begin": 10864,
											"end": 10870,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 10871,
											"end": 10872,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "148"
										},
										{
											"begin": 10864,
											"end": 10873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "tag",
											"source": 6,
											"value": "162"
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10864,
											"end": 10873,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10875,
											"end": 10890,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 10813,
											"end": 10891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10813,
											"end": 10891,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10625,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10625,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10625,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 10622,
											"end": 10625,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10625,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10622,
											"end": 10625,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10586,
											"end": 10902,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "143"
										},
										{
											"begin": 10586,
											"end": 10902,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10586,
											"end": 10902,
											"name": "tag",
											"source": 6,
											"value": "144"
										},
										{
											"begin": 10586,
											"end": 10902,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10586,
											"end": 10902,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10918,
											"end": 10954,
											"name": "PUSH",
											"source": 6,
											"value": "BC197C81"
										},
										{
											"begin": 10918,
											"end": 10954,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 10918,
											"end": 10954,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 10911,
											"end": 10954,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10911,
											"end": 10954,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10129,
											"end": 10961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6182,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6132,
											"end": 6153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 6132,
											"end": 6170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6154,
											"end": 6169,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6132,
											"end": 6170,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6132,
											"end": 6170,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6170,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6132,
											"end": 6170,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6170,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6170,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6132,
											"end": 6170,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6170,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6132,
											"end": 6170,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6171,
											"end": 6178,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6179,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6179,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6132,
											"end": 6179,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6179,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6179,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6132,
											"end": 6179,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6132,
											"end": 6179,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 6132,
											"end": 6187,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6248,
											"end": 6255,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6231,
											"end": 6246,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6202,
											"end": 6256,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "7CDF80461AB5065B7B1C6AE92CE85D5D3FD752930FF8C76A2C5F0288648E5B23"
										},
										{
											"begin": 6202,
											"end": 6256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6202,
											"end": 6256,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 6202,
											"end": 6256,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6256,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6256,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6256,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6256,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6202,
											"end": 6256,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6024,
											"end": 6263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5027,
											"end": 5028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5004,
											"end": 5029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5004,
											"end": 5029,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5015,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5029,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5004,
											"end": 5029,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5029,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5029,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5060,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5060,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5060,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5004,
											"end": 5060,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5060,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5059,
											"end": 5060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5033,
											"end": 5044,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5033,
											"end": 5056,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5056,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 5033,
											"end": 5060,
											"modifierDepth": 1,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 5004,
											"end": 5060,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 5004,
											"end": 5060,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "174"
										},
										{
											"begin": 4996,
											"end": 5092,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 4996,
											"end": 5092,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5118,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5129,
											"end": 5139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5129,
											"end": 5139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5129,
											"end": 5139,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5139,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5139,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5129,
											"end": 5139,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5139,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5139,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5129,
											"end": 5139,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5129,
											"end": 5139,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5140,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5102,
											"end": 5140,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5186,
											"end": 5197,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5150,
											"end": 5160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 5150,
											"end": 5198,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5241,
											"end": 5252,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5213,
											"end": 5253,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5231,
											"end": 5239,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5213,
											"end": 5253,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3225966CBAAE2904BA12A4821319A2EFEC8FE5313E9E3376037823B52AB32CF1"
										},
										{
											"begin": 5213,
											"end": 5253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5213,
											"end": 5253,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5253,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5213,
											"end": 5253,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5253,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5253,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5253,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5253,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5213,
											"end": 5253,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 4986,
											"end": 5260,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4923,
											"end": 5260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11762,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 11741,
											"end": 11779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11763,
											"end": 11778,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11779,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11741,
											"end": 11779,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11779,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11741,
											"end": 11779,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11779,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11741,
											"end": 11779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11779,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11779,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11779,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11741,
											"end": 11779,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11741,
											"end": 11779,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11780,
											"end": 11787,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 11741,
											"end": 11788,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 11733,
											"end": 11838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 11733,
											"end": 11838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11865,
											"end": 11866,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11856,
											"end": 11862,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11856,
											"end": 11866,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "181"
										},
										{
											"begin": 11848,
											"end": 11903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "tag",
											"source": 6,
											"value": "180"
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "tag",
											"source": 6,
											"value": "179"
										},
										{
											"begin": 11848,
											"end": 11903,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11952,
											"end": 11953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11921,
											"end": 11954,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11921,
											"end": 11954,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11929,
											"end": 11939,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11929,
											"end": 11939,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11929,
											"end": 11939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11929,
											"end": 11939,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 11929,
											"end": 11939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11929,
											"end": 11939,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 11929,
											"end": 11939,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 11929,
											"end": 11939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11929,
											"end": 11939,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11929,
											"end": 11939,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11929,
											"end": 11939,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11921,
											"end": 11954,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11921,
											"end": 11954,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11921,
											"end": 11954,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 11913,
											"end": 11978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "tag",
											"source": 6,
											"value": "183"
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "tag",
											"source": 6,
											"value": "182"
										},
										{
											"begin": 11913,
											"end": 11978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12054,
											"end": 12066,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12069,
											"end": 12079,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12069,
											"end": 12079,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12069,
											"end": 12079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12079,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12079,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 12069,
											"end": 12079,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12079,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12079,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12079,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12069,
											"end": 12079,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12092,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12069,
											"end": 12092,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12092,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 12093,
											"end": 12103,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 12113,
											"end": 12117,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 12120,
											"end": 12126,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "185"
										},
										{
											"begin": 12069,
											"end": 12127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "tag",
											"source": 6,
											"value": "184"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "189"
										},
										{
											"begin": 12069,
											"end": 12127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "tag",
											"source": 6,
											"value": "188"
										},
										{
											"begin": 12069,
											"end": 12127,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12054,
											"end": 12127,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12054,
											"end": 12127,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12145,
											"end": 12152,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 12137,
											"end": 12178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "tag",
											"source": 6,
											"value": "191"
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "tag",
											"source": 6,
											"value": "190"
										},
										{
											"begin": 12137,
											"end": 12178,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12233,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12223,
											"end": 12233,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12223,
											"end": 12233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12233,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12233,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 12223,
											"end": 12233,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12233,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12233,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12233,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12223,
											"end": 12233,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12238,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12223,
											"end": 12238,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12238,
											"name": "PUSH",
											"source": 6,
											"value": "42966C68"
										},
										{
											"begin": 12239,
											"end": 12245,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "194"
										},
										{
											"begin": 12223,
											"end": 12246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12223,
											"end": 12246,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12320,
											"end": 12335,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12341,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12305,
											"end": 12341,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12341,
											"name": "PUSH",
											"source": 6,
											"value": "731133E9"
										},
										{
											"begin": 12342,
											"end": 12352,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 12354,
											"end": 12361,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12363,
											"end": 12369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 12305,
											"end": 12374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12305,
											"end": 12374,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12428,
											"end": 12472,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "PUSH",
											"source": 6,
											"value": "A0"
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12526,
											"end": 12536,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12567,
											"end": 12582,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12605,
											"end": 12612,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12634,
											"end": 12640,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12665,
											"end": 12680,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12475,
											"end": 12691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12428,
											"end": 12691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12428,
											"end": 12691,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12722,
											"name": "PUSH",
											"source": 6,
											"value": "6"
										},
										{
											"begin": 12728,
											"end": 12734,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12701,
											"end": 12735,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12782,
											"name": "PUSH",
											"source": 6,
											"value": "7"
										},
										{
											"begin": 12745,
											"end": 12794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12783,
											"end": 12793,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12794,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12745,
											"end": 12794,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12794,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12745,
											"end": 12794,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12794,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12794,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12745,
											"end": 12794,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12794,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12794,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12794,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12745,
											"end": 12794,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12794,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12745,
											"end": 12794,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12800,
											"end": 12806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12745,
											"end": 12807,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12881,
											"end": 12888,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12864,
											"end": 12879,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12852,
											"end": 12862,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "PUSH",
											"source": 6,
											"value": "1CA57D76D7B91ECC6A90677F1B8EB7D995F934EDA6364134E6021DBBA757241E"
										},
										{
											"begin": 12890,
											"end": 12896,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12898,
											"end": 12913,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "164"
										},
										{
											"begin": 12827,
											"end": 12914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12827,
											"end": 12914,
											"name": "LOG4",
											"source": 6
										},
										{
											"begin": 11723,
											"end": 12921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11723,
											"end": 12921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11630,
											"end": 12921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7185,
											"end": 7190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 7135,
											"end": 7173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7172,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7135,
											"end": 7173,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7135,
											"end": 7173,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7173,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7135,
											"end": 7173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7173,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7173,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7135,
											"end": 7173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7173,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7174,
											"end": 7181,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7182,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7182,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7135,
											"end": 7182,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7182,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7182,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7182,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7135,
											"end": 7182,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7182,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 7135,
											"end": 7190,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7251,
											"end": 7258,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7234,
											"end": 7249,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7205,
											"end": 7259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "DF3A4DE361F566C7B82E2670C9F25DEB777B8A9C5C03E949B07F8932F7CBED3E"
										},
										{
											"begin": 7205,
											"end": 7259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7205,
											"end": 7259,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7205,
											"end": 7259,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7259,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7259,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7259,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7205,
											"end": 7259,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7027,
											"end": 7266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7991,
											"end": 7997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8029,
											"end": 8033,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8017,
											"end": 8033,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8017,
											"end": 8033,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8017,
											"end": 8025,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8017,
											"end": 8033,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8017,
											"end": 8033,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8017,
											"end": 8033,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "136"
										},
										{
											"begin": 8009,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 8009,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8120,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8121,
											"end": 8131,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8132,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8133,
											"end": 8135,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 8099,
											"end": 8136,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 8091,
											"end": 8181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 8091,
											"end": 8181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8230,
											"end": 8231,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8199,
											"end": 8232,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8199,
											"end": 8232,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8217,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8207,
											"end": 8217,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8207,
											"end": 8217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8217,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8217,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 8207,
											"end": 8217,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8217,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8217,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 8207,
											"end": 8217,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8207,
											"end": 8217,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8199,
											"end": 8232,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8199,
											"end": 8232,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8199,
											"end": 8232,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 8191,
											"end": 8256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 8191,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8306,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 8290,
											"end": 8294,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8296,
											"end": 8298,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8300,
											"end": 8305,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 8267,
											"end": 8306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8267,
											"end": 8306,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 8267,
											"end": 8306,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8323,
											"end": 8354,
											"name": "PUSH",
											"source": 6,
											"value": "F23A6E61"
										},
										{
											"begin": 8323,
											"end": 8354,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 8323,
											"end": 8354,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8354,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8316,
											"end": 8354,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7815,
											"end": 8361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "tag",
											"source": 6,
											"value": "101"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2716,
											"end": 2787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 763,
											"end": 909,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 763,
											"end": 909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 839,
											"end": 843,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 877,
											"end": 902,
											"name": "PUSH",
											"source": 4,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 862,
											"end": 873,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 862,
											"end": 902,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 862,
											"end": 902,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 862,
											"end": 902,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 862,
											"end": 902,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 855,
											"end": 902,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 855,
											"end": 902,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 763,
											"end": 909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 763,
											"end": 909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8926,
											"end": 9815,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 8926,
											"end": 9815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9129,
											"end": 9148,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9151,
											"end": 9164,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9129,
											"end": 9164,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9129,
											"end": 9164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9213,
											"end": 9214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9182,
											"end": 9215,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9182,
											"end": 9215,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9200,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9190,
											"end": 9200,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9190,
											"end": 9200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9200,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9200,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9190,
											"end": 9200,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9200,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9200,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9190,
											"end": 9200,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9190,
											"end": 9200,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9182,
											"end": 9215,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9182,
											"end": 9215,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9182,
											"end": 9215,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 9174,
											"end": 9243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "tag",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 9174,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9312,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9302,
											"end": 9312,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9302,
											"end": 9312,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9312,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9312,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9312,
											"name": "PUSH",
											"source": 6,
											"value": "100"
										},
										{
											"begin": 9302,
											"end": 9312,
											"name": "EXP",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9312,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9312,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9312,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9302,
											"end": 9312,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9317,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9302,
											"end": 9317,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9317,
											"name": "PUSH",
											"source": 6,
											"value": "40C10F19"
										},
										{
											"begin": 9318,
											"end": 9324,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9326,
											"end": 9337,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 9302,
											"end": 9338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "tag",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "tag",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9302,
											"end": 9338,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9383,
											"end": 9413,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9463,
											"end": 9477,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9506,
											"end": 9519,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9546,
											"end": 9557,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9582,
											"end": 9597,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9416,
											"end": 9608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9383,
											"end": 9608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9383,
											"end": 9608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9635,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 9641,
											"end": 9647,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9618,
											"end": 9648,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9683,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9658,
											"end": 9691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9684,
											"end": 9690,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9691,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9658,
											"end": 9691,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9691,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9658,
											"end": 9691,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9658,
											"end": 9691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9691,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9691,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9691,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9691,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9658,
											"end": 9691,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9691,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9697,
											"end": 9703,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "KECCAK256",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "PUSH",
											"source": 6,
											"value": "3"
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9658,
											"end": 9704,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9748,
											"end": 9762,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9740,
											"end": 9746,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "PUSH",
											"source": 6,
											"value": "8207F4CC66476FC751F9FA47F50E7BDF31B03FAD34F997E73EF4A8C554992647"
										},
										{
											"begin": 9764,
											"end": 9777,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9779,
											"end": 9790,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9792,
											"end": 9807,
											"name": "TIMESTAMP",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "247"
										},
										{
											"begin": 9720,
											"end": 9808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9720,
											"end": 9808,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 9060,
											"end": 9815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9060,
											"end": 9815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8926,
											"end": 9815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8926,
											"end": 9815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8926,
											"end": 9815,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8926,
											"end": 9815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "253"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1637,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1588,
											"end": 1593,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1584,
											"end": 1638,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1573,
											"end": 1638,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1644,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1518,
											"end": 1644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1687,
											"end": 1694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1734,
											"end": 1739,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1716,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 1716,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1705,
											"end": 1740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1746,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1650,
											"end": 1746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 1843,
											"end": 1848,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1825,
											"end": 1849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 1825,
											"end": 1849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1818,
											"end": 1823,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1815,
											"end": 1850,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1864,
											"end": 1865,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1861,
											"end": 1862,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1854,
											"end": 1866,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 1805,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1752,
											"end": 1874,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1752,
											"end": 1874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1931,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1970,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1951,
											"end": 1971,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1942,
											"end": 1971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 2007,
											"end": 2012,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1980,
											"end": 2013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 1980,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 2019,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1880,
											"end": 2019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2062,
											"end": 2069,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2096,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2096,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2025,
											"end": 2102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "tag",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2199,
											"end": 2204,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2181,
											"end": 2205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 2181,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2179,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2206,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2220,
											"end": 2221,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2217,
											"end": 2218,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2210,
											"end": 2222,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 2161,
											"end": 2224,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2108,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2282,
											"end": 2287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2320,
											"end": 2326,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2307,
											"end": 2327,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2298,
											"end": 2327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 2363,
											"end": 2368,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "262"
										},
										{
											"begin": 2336,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 2336,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2236,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "tag",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2449,
											"end": 2455,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2457,
											"end": 2463,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2506,
											"end": 2508,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2494,
											"end": 2503,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2485,
											"end": 2492,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2481,
											"end": 2504,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2477,
											"end": 2509,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2512,
											"end": 2591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 2512,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "tag",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 2474,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2632,
											"end": 2633,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 2702,
											"end": 2709,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2693,
											"end": 2699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2682,
											"end": 2691,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2678,
											"end": 2700,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2657,
											"end": 2710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "tag",
											"source": 7,
											"value": "350"
										},
										{
											"begin": 2657,
											"end": 2710,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2647,
											"end": 2710,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2647,
											"end": 2710,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2603,
											"end": 2720,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2759,
											"end": 2761,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 2830,
											"end": 2837,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2821,
											"end": 2827,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2806,
											"end": 2828,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 2785,
											"end": 2838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 2785,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2838,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2775,
											"end": 2838,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2730,
											"end": 2848,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2381,
											"end": 2855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2381,
											"end": 2855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3190,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 2861,
											"end": 3190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2920,
											"end": 2926,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2969,
											"end": 2971,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2957,
											"end": 2966,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2948,
											"end": 2955,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2944,
											"end": 2967,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2940,
											"end": 2972,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 3056,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 3056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 2937,
											"end": 3056,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 2975,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 2975,
											"end": 3054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2975,
											"end": 3054,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 2975,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2937,
											"end": 3056,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 2937,
											"end": 3056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3095,
											"end": 3096,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3120,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3165,
											"end": 3172,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3145,
											"end": 3154,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3141,
											"end": 3163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3120,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 3120,
											"end": 3173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3120,
											"end": 3173,
											"name": "tag",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 3120,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3173,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3173,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3066,
											"end": 3183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3190,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2861,
											"end": 3190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3314,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3196,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 3301,
											"end": 3306,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3307,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 3283,
											"end": 3307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3307,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 3283,
											"end": 3307,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3278,
											"end": 3281,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3271,
											"end": 3308,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3196,
											"end": 3314,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3438,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3320,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 3425,
											"end": 3430,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 3407,
											"end": 3431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3407,
											"end": 3431,
											"name": "tag",
											"source": 7,
											"value": "359"
										},
										{
											"begin": 3407,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3402,
											"end": 3405,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3395,
											"end": 3432,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3438,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3320,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 4108,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 3444,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3653,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3687,
											"end": 3690,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 3676,
											"end": 3685,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3672,
											"end": 3691,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3691,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3691,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 3769,
											"end": 3770,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3758,
											"end": 3767,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3771,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3745,
											"end": 3751,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3701,
											"end": 3772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3701,
											"end": 3772,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 3701,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3782,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 3850,
											"end": 3852,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3839,
											"end": 3848,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3835,
											"end": 3853,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3782,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 3782,
											"end": 3854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3782,
											"end": 3854,
											"name": "tag",
											"source": 7,
											"value": "362"
										},
										{
											"begin": 3782,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3932,
											"end": 3934,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 3930,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3917,
											"end": 3935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3908,
											"end": 3914,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3864,
											"end": 3936,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 3864,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 4014,
											"end": 4016,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3999,
											"end": 4017,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4018,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 3946,
											"end": 4018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3946,
											"end": 4018,
											"name": "tag",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 3946,
											"end": 4018,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4028,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 4096,
											"end": 4099,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4085,
											"end": 4094,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4100,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4072,
											"end": 4078,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4028,
											"end": 4101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 4028,
											"end": 4101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4028,
											"end": 4101,
											"name": "tag",
											"source": 7,
											"value": "365"
										},
										{
											"begin": 4028,
											"end": 4101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 4108,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 4108,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 4108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 4108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 4108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 4108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 4108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 4108,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3444,
											"end": 4108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4667,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 4114,
											"end": 4667,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4291,
											"end": 4295,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4332,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4318,
											"end": 4327,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4314,
											"end": 4333,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4306,
											"end": 4333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4306,
											"end": 4333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 4411,
											"end": 4412,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4400,
											"end": 4409,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4396,
											"end": 4413,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4387,
											"end": 4393,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 4343,
											"end": 4414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4343,
											"end": 4414,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 4343,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4424,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 4492,
											"end": 4494,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4481,
											"end": 4490,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4477,
											"end": 4495,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4468,
											"end": 4474,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4424,
											"end": 4496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 4424,
											"end": 4496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4424,
											"end": 4496,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 4424,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4506,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 4574,
											"end": 4576,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 4572,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4577,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4550,
											"end": 4556,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4506,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 4506,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4506,
											"end": 4578,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 4506,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 4656,
											"end": 4658,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4645,
											"end": 4654,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4641,
											"end": 4659,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 4588,
											"end": 4660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4588,
											"end": 4660,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 4588,
											"end": 4660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4667,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4667,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4667,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4114,
											"end": 4667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 4733,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 4673,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4701,
											"end": 4704,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4727,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4715,
											"end": 4727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 4733,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 4733,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 4733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4673,
											"end": 4733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4881,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 4739,
											"end": 4881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4789,
											"end": 4798,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 4840,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 4867,
											"end": 4872,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 4849,
											"end": 4873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 4849,
											"end": 4873,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4840,
											"end": 4874,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 4840,
											"end": 4874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4840,
											"end": 4874,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 4840,
											"end": 4874,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 4822,
											"end": 4875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4822,
											"end": 4875,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 4822,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4809,
											"end": 4875,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4809,
											"end": 4875,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4881,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4881,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4881,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4739,
											"end": 4881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 5013,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 4887,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4937,
											"end": 4946,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 5001,
											"end": 5006,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4970,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 4970,
											"end": 5007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4970,
											"end": 5007,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 4970,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 5007,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4957,
											"end": 5007,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 5013,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 5013,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 5013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4887,
											"end": 5013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5019,
											"end": 5175,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 5019,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5099,
											"end": 5108,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5132,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 5163,
											"end": 5168,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 5132,
											"end": 5169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5132,
											"end": 5169,
											"name": "tag",
											"source": 7,
											"value": "379"
										},
										{
											"begin": 5132,
											"end": 5169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5119,
											"end": 5169,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5119,
											"end": 5169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5019,
											"end": 5175,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5019,
											"end": 5175,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5019,
											"end": 5175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5019,
											"end": 5175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5372,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 5181,
											"end": 5372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 5359,
											"end": 5364,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 5298,
											"end": 5365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5298,
											"end": 5365,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 5298,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5293,
											"end": 5296,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5286,
											"end": 5366,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5372,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5181,
											"end": 5372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5660,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 5378,
											"end": 5660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5501,
											"end": 5505,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5539,
											"end": 5541,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5528,
											"end": 5537,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5524,
											"end": 5542,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5542,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5516,
											"end": 5542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5552,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 5650,
											"end": 5651,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5639,
											"end": 5648,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5635,
											"end": 5652,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5626,
											"end": 5632,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5552,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 5552,
											"end": 5653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5552,
											"end": 5653,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 5552,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5660,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5660,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5660,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5378,
											"end": 5660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5888,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 5666,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5759,
											"end": 5763,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5797,
											"end": 5799,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5786,
											"end": 5795,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5782,
											"end": 5800,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5800,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5774,
											"end": 5800,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 5878,
											"end": 5879,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5867,
											"end": 5876,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5863,
											"end": 5880,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5854,
											"end": 5860,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 5810,
											"end": 5881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5810,
											"end": 5881,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 5810,
											"end": 5881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5888,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5888,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5888,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5888,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5666,
											"end": 5888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5894,
											"end": 6011,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 5894,
											"end": 6011,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6003,
											"end": 6004,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6000,
											"end": 6001,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5993,
											"end": 6005,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6119,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 6017,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6058,
											"end": 6064,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6111,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6105,
											"end": 6112,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 6100,
											"end": 6102,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6093,
											"end": 6098,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6089,
											"end": 6103,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6085,
											"end": 6113,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6075,
											"end": 6113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6075,
											"end": 6113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6119,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6119,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6119,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6017,
											"end": 6119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6125,
											"end": 6305,
											"name": "tag",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 6125,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6173,
											"end": 6250,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6170,
											"end": 6171,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6163,
											"end": 6251,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6270,
											"end": 6274,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 6267,
											"end": 6268,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6260,
											"end": 6275,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6294,
											"end": 6298,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 6291,
											"end": 6292,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6284,
											"end": 6299,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6311,
											"end": 6592,
											"name": "tag",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 6311,
											"end": 6592,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6394,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6416,
											"end": 6420,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6394,
											"end": 6421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 6394,
											"end": 6421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6394,
											"end": 6421,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 6394,
											"end": 6421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6386,
											"end": 6392,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6382,
											"end": 6422,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6524,
											"end": 6530,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6512,
											"end": 6522,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6509,
											"end": 6531,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6488,
											"end": 6506,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6476,
											"end": 6486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6473,
											"end": 6507,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6470,
											"end": 6532,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6555,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6555,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6467,
											"end": 6555,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 6535,
											"end": 6553,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 6535,
											"end": 6553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6553,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 6535,
											"end": 6553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6467,
											"end": 6555,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 6467,
											"end": 6555,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6575,
											"end": 6585,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6571,
											"end": 6573,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6564,
											"end": 6586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6354,
											"end": 6592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6311,
											"end": 6592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6311,
											"end": 6592,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6311,
											"end": 6592,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6727,
											"name": "tag",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 6598,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6632,
											"end": 6638,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6659,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6659,
											"end": 6679,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "249"
										},
										{
											"begin": 6659,
											"end": 6679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6659,
											"end": 6679,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6659,
											"end": 6679,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6649,
											"end": 6679,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6649,
											"end": 6679,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 6716,
											"end": 6720,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6708,
											"end": 6714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6721,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "274"
										},
										{
											"begin": 6688,
											"end": 6721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6688,
											"end": 6721,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 6688,
											"end": 6721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6598,
											"end": 6727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 7044,
											"name": "tag",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 6733,
											"end": 7044,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6810,
											"end": 6814,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6900,
											"end": 6918,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6892,
											"end": 6898,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6889,
											"end": 6919,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6886,
											"end": 6942,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6886,
											"end": 6942,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 6886,
											"end": 6942,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6922,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 6922,
											"end": 6940,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 6922,
											"end": 6940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6922,
											"end": 6940,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 6922,
											"end": 6940,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6886,
											"end": 6942,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 6886,
											"end": 6942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6972,
											"end": 6976,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6964,
											"end": 6970,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6960,
											"end": 6977,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 6977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6952,
											"end": 6977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7032,
											"end": 7036,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7026,
											"end": 7030,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7022,
											"end": 7037,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7014,
											"end": 7037,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7014,
											"end": 7037,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 7044,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 7044,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 7044,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6733,
											"end": 7044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7050,
											"end": 7167,
											"name": "tag",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 7050,
											"end": 7167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7159,
											"end": 7160,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7156,
											"end": 7157,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7149,
											"end": 7161,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 7190,
											"end": 7900,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 7190,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7291,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7311,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 7327,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 7384,
											"end": 7390,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7327,
											"end": 7391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "276"
										},
										{
											"begin": 7327,
											"end": 7391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7327,
											"end": 7391,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 7327,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7311,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 7311,
											"end": 7392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7311,
											"end": 7392,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 7311,
											"end": 7392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7302,
											"end": 7392,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7302,
											"end": 7392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7412,
											"end": 7417,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7441,
											"end": 7447,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7434,
											"end": 7439,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7427,
											"end": 7448,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7475,
											"end": 7479,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7468,
											"end": 7473,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7464,
											"end": 7480,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7457,
											"end": 7480,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7457,
											"end": 7480,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7528,
											"end": 7532,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7520,
											"end": 7526,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7516,
											"end": 7533,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7504,
											"end": 7534,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7557,
											"end": 7560,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7549,
											"end": 7555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7546,
											"end": 7561,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7665,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 7543,
											"end": 7665,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7576,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 7576,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "277"
										},
										{
											"begin": 7576,
											"end": 7655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7576,
											"end": 7655,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 7576,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7543,
											"end": 7665,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 7543,
											"end": 7665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7691,
											"end": 7697,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7674,
											"end": 7894,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 7674,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7703,
											"end": 7706,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7700,
											"end": 7715,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7674,
											"end": 7894,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7674,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 7674,
											"end": 7894,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7783,
											"end": 7786,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7812,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 7845,
											"end": 7848,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 7833,
											"end": 7843,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7812,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 7812,
											"end": 7849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7812,
											"end": 7849,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 7812,
											"end": 7849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7807,
											"end": 7810,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7800,
											"end": 7850,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7879,
											"end": 7883,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7874,
											"end": 7877,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7870,
											"end": 7884,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7863,
											"end": 7884,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7750,
											"end": 7894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7734,
											"end": 7738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7729,
											"end": 7732,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7725,
											"end": 7739,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7718,
											"end": 7739,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7718,
											"end": 7739,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7674,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 7674,
											"end": 7894,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7674,
											"end": 7894,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 7674,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7678,
											"end": 7699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7292,
											"end": 7900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7292,
											"end": 7900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7190,
											"end": 7900,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7190,
											"end": 7900,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7190,
											"end": 7900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7190,
											"end": 7900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7190,
											"end": 7900,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7190,
											"end": 7900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 8293,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 7923,
											"end": 8293,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7994,
											"end": 7999,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8043,
											"end": 8046,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8036,
											"end": 8040,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8028,
											"end": 8034,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8024,
											"end": 8041,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8020,
											"end": 8047,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8010,
											"end": 8132,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 8010,
											"end": 8132,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8051,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 8051,
											"end": 8130,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 8051,
											"end": 8130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8051,
											"end": 8130,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 8051,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8010,
											"end": 8132,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 8010,
											"end": 8132,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8168,
											"end": 8174,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8155,
											"end": 8175,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 8193,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 8283,
											"end": 8286,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8281,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8268,
											"end": 8272,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8260,
											"end": 8266,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8256,
											"end": 8273,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8193,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 8193,
											"end": 8287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8193,
											"end": 8287,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 8193,
											"end": 8287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8184,
											"end": 8287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8184,
											"end": 8287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8000,
											"end": 8293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 8293,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 8293,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 8293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 8293,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7923,
											"end": 8293,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8299,
											"end": 8416,
											"name": "tag",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 8299,
											"end": 8416,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8408,
											"end": 8409,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8405,
											"end": 8406,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8398,
											"end": 8410,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8729,
											"name": "tag",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 8422,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8483,
											"end": 8487,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8591,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8565,
											"end": 8571,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8562,
											"end": 8592,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 8559,
											"end": 8615,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8559,
											"end": 8615,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 8559,
											"end": 8615,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8595,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 8595,
											"end": 8613,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "273"
										},
										{
											"begin": 8595,
											"end": 8613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8595,
											"end": 8613,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 8595,
											"end": 8613,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8559,
											"end": 8615,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 8559,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 8662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 8655,
											"end": 8661,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 8662,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 8633,
											"end": 8662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8633,
											"end": 8662,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 8633,
											"end": 8662,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8662,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8625,
											"end": 8662,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8711,
											"end": 8715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8707,
											"end": 8722,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8699,
											"end": 8722,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8699,
											"end": 8722,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8729,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8729,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8729,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8422,
											"end": 8729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8735,
											"end": 8883,
											"name": "tag",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 8735,
											"end": 8883,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8833,
											"end": 8839,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8828,
											"end": 8831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8823,
											"end": 8826,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8810,
											"end": 8840,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 8874,
											"end": 8875,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8865,
											"end": 8871,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8860,
											"end": 8863,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8856,
											"end": 8872,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8849,
											"end": 8876,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8735,
											"end": 8883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8735,
											"end": 8883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8735,
											"end": 8883,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8735,
											"end": 8883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8889,
											"end": 9312,
											"name": "tag",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 8889,
											"end": 9312,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8966,
											"end": 8971,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8991,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 9007,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 9048,
											"end": 9054,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9007,
											"end": 9055,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "281"
										},
										{
											"begin": 9007,
											"end": 9055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9007,
											"end": 9055,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 9007,
											"end": 9055,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8991,
											"end": 9056,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "275"
										},
										{
											"begin": 8991,
											"end": 9056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8991,
											"end": 9056,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 8991,
											"end": 9056,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8982,
											"end": 9056,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8982,
											"end": 9056,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9079,
											"end": 9085,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9072,
											"end": 9077,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9065,
											"end": 9086,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9117,
											"end": 9121,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9110,
											"end": 9115,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9106,
											"end": 9122,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9155,
											"end": 9158,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9146,
											"end": 9152,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9141,
											"end": 9144,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9137,
											"end": 9153,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9134,
											"end": 9159,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9131,
											"end": 9243,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9131,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 9131,
											"end": 9243,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 9162,
											"end": 9241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 9162,
											"end": 9241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9241,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 9162,
											"end": 9241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9131,
											"end": 9243,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 9131,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9252,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 9299,
											"end": 9305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9294,
											"end": 9297,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9289,
											"end": 9292,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9252,
											"end": 9306,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "282"
										},
										{
											"begin": 9252,
											"end": 9306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9252,
											"end": 9306,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 9252,
											"end": 9306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8972,
											"end": 9312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8889,
											"end": 9312,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8889,
											"end": 9312,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8889,
											"end": 9312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8889,
											"end": 9312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8889,
											"end": 9312,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8889,
											"end": 9312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9669,
											"name": "tag",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 9331,
											"end": 9669,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9386,
											"end": 9391,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9435,
											"end": 9438,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9428,
											"end": 9432,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 9420,
											"end": 9426,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9416,
											"end": 9433,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9412,
											"end": 9439,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9402,
											"end": 9524,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 9402,
											"end": 9524,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9443,
											"end": 9522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 9443,
											"end": 9522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 9443,
											"end": 9522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9443,
											"end": 9522,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 9443,
											"end": 9522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9402,
											"end": 9524,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 9402,
											"end": 9524,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9560,
											"end": 9566,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9547,
											"end": 9567,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 9585,
											"end": 9663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 9659,
											"end": 9662,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9651,
											"end": 9657,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9644,
											"end": 9648,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9636,
											"end": 9642,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9632,
											"end": 9649,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9585,
											"end": 9663,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "283"
										},
										{
											"begin": 9585,
											"end": 9663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9585,
											"end": 9663,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 9585,
											"end": 9663,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9576,
											"end": 9663,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9576,
											"end": 9663,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9392,
											"end": 9669,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9669,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9669,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9669,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9669,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9331,
											"end": 9669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9675,
											"end": 11184,
											"name": "tag",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 9675,
											"end": 11184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9829,
											"end": 9835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9837,
											"end": 9843,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9845,
											"end": 9851,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9853,
											"end": 9859,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9861,
											"end": 9867,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9910,
											"end": 9913,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 9898,
											"end": 9907,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 9889,
											"end": 9896,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 9885,
											"end": 9908,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9881,
											"end": 9914,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9878,
											"end": 9998,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9878,
											"end": 9998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 9878,
											"end": 9998,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9917,
											"end": 9996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 9917,
											"end": 9996,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 9917,
											"end": 9996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9917,
											"end": 9996,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 9917,
											"end": 9996,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9878,
											"end": 9998,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 9878,
											"end": 9998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10037,
											"end": 10038,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10062,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 10107,
											"end": 10114,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10098,
											"end": 10104,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10087,
											"end": 10096,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 10083,
											"end": 10105,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10062,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 10062,
											"end": 10115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10062,
											"end": 10115,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 10062,
											"end": 10115,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10052,
											"end": 10115,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10052,
											"end": 10115,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10008,
											"end": 10125,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10166,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10190,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 10235,
											"end": 10242,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10226,
											"end": 10232,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10215,
											"end": 10224,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 10211,
											"end": 10233,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10190,
											"end": 10243,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 10190,
											"end": 10243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10190,
											"end": 10243,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 10190,
											"end": 10243,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10180,
											"end": 10243,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10180,
											"end": 10243,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10135,
											"end": 10253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10320,
											"end": 10322,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10309,
											"end": 10318,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10305,
											"end": 10323,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10292,
											"end": 10324,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 10351,
											"end": 10369,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10343,
											"end": 10349,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10340,
											"end": 10370,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10337,
											"end": 10454,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10337,
											"end": 10454,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 10337,
											"end": 10454,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10373,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 10373,
											"end": 10452,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 10373,
											"end": 10452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10373,
											"end": 10452,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 10373,
											"end": 10452,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10337,
											"end": 10454,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 10337,
											"end": 10454,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10478,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 10548,
											"end": 10555,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10539,
											"end": 10545,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10528,
											"end": 10537,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 10524,
											"end": 10546,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10478,
											"end": 10556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 10478,
											"end": 10556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10478,
											"end": 10556,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 10478,
											"end": 10556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10468,
											"end": 10556,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10468,
											"end": 10556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10263,
											"end": 10566,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10633,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10622,
											"end": 10631,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10618,
											"end": 10636,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10605,
											"end": 10637,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 10664,
											"end": 10682,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10656,
											"end": 10662,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10653,
											"end": 10683,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10650,
											"end": 10767,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10650,
											"end": 10767,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 10650,
											"end": 10767,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10686,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 10686,
											"end": 10765,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 10686,
											"end": 10765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10686,
											"end": 10765,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 10686,
											"end": 10765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10650,
											"end": 10767,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 10650,
											"end": 10767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10791,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 10861,
											"end": 10868,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10852,
											"end": 10858,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10841,
											"end": 10850,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 10837,
											"end": 10859,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10791,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 10791,
											"end": 10869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10791,
											"end": 10869,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 10791,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10781,
											"end": 10869,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10781,
											"end": 10869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10576,
											"end": 10879,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10946,
											"end": 10949,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 10935,
											"end": 10944,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 10931,
											"end": 10950,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10918,
											"end": 10951,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 10978,
											"end": 10996,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10970,
											"end": 10976,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10967,
											"end": 10997,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10964,
											"end": 11081,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10964,
											"end": 11081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 10964,
											"end": 11081,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11000,
											"end": 11079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 11000,
											"end": 11079,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 11000,
											"end": 11079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11000,
											"end": 11079,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 11000,
											"end": 11079,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10964,
											"end": 11081,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 10964,
											"end": 11081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11105,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 11159,
											"end": 11166,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 11150,
											"end": 11156,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11139,
											"end": 11148,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 11135,
											"end": 11157,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11105,
											"end": 11167,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 11105,
											"end": 11167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11105,
											"end": 11167,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 11105,
											"end": 11167,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11095,
											"end": 11167,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11095,
											"end": 11167,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10889,
											"end": 11177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9675,
											"end": 11184,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9675,
											"end": 11184,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 9675,
											"end": 11184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9675,
											"end": 11184,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9675,
											"end": 11184,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 9675,
											"end": 11184,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9675,
											"end": 11184,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9675,
											"end": 11184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9675,
											"end": 11184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11190,
											"end": 11305,
											"name": "tag",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 11190,
											"end": 11305,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11275,
											"end": 11298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 11292,
											"end": 11297,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11275,
											"end": 11298,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "252"
										},
										{
											"begin": 11275,
											"end": 11298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11275,
											"end": 11298,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 11275,
											"end": 11298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11270,
											"end": 11273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11263,
											"end": 11299,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11190,
											"end": 11305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11190,
											"end": 11305,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11190,
											"end": 11305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11529,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 11311,
											"end": 11529,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11402,
											"end": 11406,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11440,
											"end": 11442,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11429,
											"end": 11438,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11425,
											"end": 11443,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11417,
											"end": 11443,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11417,
											"end": 11443,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11519,
											"end": 11520,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11508,
											"end": 11517,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11504,
											"end": 11521,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11495,
											"end": 11501,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11522,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "285"
										},
										{
											"begin": 11453,
											"end": 11522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11453,
											"end": 11522,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 11453,
											"end": 11522,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11529,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11529,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11529,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11311,
											"end": 11529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11535,
											"end": 11864,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 11535,
											"end": 11864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11594,
											"end": 11600,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11643,
											"end": 11645,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 11631,
											"end": 11640,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11622,
											"end": 11629,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11618,
											"end": 11641,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11614,
											"end": 11646,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 11611,
											"end": 11730,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11611,
											"end": 11730,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 11611,
											"end": 11730,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11649,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11649,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 11649,
											"end": 11728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11649,
											"end": 11728,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 11649,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11611,
											"end": 11730,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 11611,
											"end": 11730,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11769,
											"end": 11770,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11794,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 11839,
											"end": 11846,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11830,
											"end": 11836,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11819,
											"end": 11828,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 11815,
											"end": 11837,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11794,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 11794,
											"end": 11847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11794,
											"end": 11847,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 11794,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11784,
											"end": 11847,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11784,
											"end": 11847,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11740,
											"end": 11857,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11535,
											"end": 11864,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11535,
											"end": 11864,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11535,
											"end": 11864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11535,
											"end": 11864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11535,
											"end": 11864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11870,
											"end": 12489,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 11870,
											"end": 12489,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11947,
											"end": 11953,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11955,
											"end": 11961,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11963,
											"end": 11969,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12012,
											"end": 12014,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 12000,
											"end": 12009,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11991,
											"end": 11998,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 11987,
											"end": 12010,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11983,
											"end": 12015,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 11980,
											"end": 12099,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11980,
											"end": 12099,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 11980,
											"end": 12099,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12018,
											"end": 12097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 12018,
											"end": 12097,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 12018,
											"end": 12097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12018,
											"end": 12097,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 12018,
											"end": 12097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11980,
											"end": 12099,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 11980,
											"end": 12099,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12138,
											"end": 12139,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12163,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 12208,
											"end": 12215,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12199,
											"end": 12205,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12188,
											"end": 12197,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12206,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12163,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 12163,
											"end": 12216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12163,
											"end": 12216,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 12163,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12153,
											"end": 12216,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12153,
											"end": 12216,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12109,
											"end": 12226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12265,
											"end": 12267,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12291,
											"end": 12344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 12336,
											"end": 12343,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12327,
											"end": 12333,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12316,
											"end": 12325,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 12312,
											"end": 12334,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12291,
											"end": 12344,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 12291,
											"end": 12344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12291,
											"end": 12344,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 12291,
											"end": 12344,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12281,
											"end": 12344,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12281,
											"end": 12344,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12236,
											"end": 12354,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12393,
											"end": 12395,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 12419,
											"end": 12472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 12464,
											"end": 12471,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12455,
											"end": 12461,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12444,
											"end": 12453,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 12440,
											"end": 12462,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12419,
											"end": 12472,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 12419,
											"end": 12472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12419,
											"end": 12472,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 12419,
											"end": 12472,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12409,
											"end": 12472,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12409,
											"end": 12472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12364,
											"end": 12482,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11870,
											"end": 12489,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11870,
											"end": 12489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11870,
											"end": 12489,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11870,
											"end": 12489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11870,
											"end": 12489,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11870,
											"end": 12489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12495,
											"end": 13584,
											"name": "tag",
											"source": 7,
											"value": "93"
										},
										{
											"begin": 12495,
											"end": 13584,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12599,
											"end": 12605,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12607,
											"end": 12613,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12615,
											"end": 12621,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12623,
											"end": 12629,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 12631,
											"end": 12637,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12680,
											"end": 12683,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 12668,
											"end": 12677,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 12659,
											"end": 12666,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 12655,
											"end": 12678,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12651,
											"end": 12684,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 12648,
											"end": 12768,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12648,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 12648,
											"end": 12768,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12687,
											"end": 12766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 12687,
											"end": 12766,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 12687,
											"end": 12766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12687,
											"end": 12766,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 12687,
											"end": 12766,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12648,
											"end": 12768,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 12648,
											"end": 12768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12807,
											"end": 12808,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12832,
											"end": 12885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 12877,
											"end": 12884,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 12868,
											"end": 12874,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12857,
											"end": 12866,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 12853,
											"end": 12875,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12832,
											"end": 12885,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 12832,
											"end": 12885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12832,
											"end": 12885,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 12832,
											"end": 12885,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12822,
											"end": 12885,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 12822,
											"end": 12885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12778,
											"end": 12895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12934,
											"end": 12936,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12960,
											"end": 13013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 13005,
											"end": 13012,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 12996,
											"end": 13002,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12985,
											"end": 12994,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 12981,
											"end": 13003,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12960,
											"end": 13013,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 12960,
											"end": 13013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12960,
											"end": 13013,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 12960,
											"end": 13013,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12950,
											"end": 13013,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 12950,
											"end": 13013,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12905,
											"end": 13023,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13062,
											"end": 13064,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13088,
											"end": 13141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 13133,
											"end": 13140,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 13124,
											"end": 13130,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13113,
											"end": 13122,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 13109,
											"end": 13131,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13088,
											"end": 13141,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 13088,
											"end": 13141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13088,
											"end": 13141,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 13088,
											"end": 13141,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13078,
											"end": 13141,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 13078,
											"end": 13141,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13033,
											"end": 13151,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13190,
											"end": 13192,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 13216,
											"end": 13269,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 13261,
											"end": 13268,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 13252,
											"end": 13258,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13241,
											"end": 13250,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 13237,
											"end": 13259,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13216,
											"end": 13269,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 13216,
											"end": 13269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13216,
											"end": 13269,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 13216,
											"end": 13269,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13206,
											"end": 13269,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13206,
											"end": 13269,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13161,
											"end": 13279,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13346,
											"end": 13349,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 13335,
											"end": 13344,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 13331,
											"end": 13350,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13318,
											"end": 13351,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 13378,
											"end": 13396,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13370,
											"end": 13376,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13367,
											"end": 13397,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 13364,
											"end": 13481,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 13364,
											"end": 13481,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 13364,
											"end": 13481,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13400,
											"end": 13479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 13400,
											"end": 13479,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 13400,
											"end": 13479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13400,
											"end": 13479,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 13400,
											"end": 13479,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13364,
											"end": 13481,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 13364,
											"end": 13481,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 13559,
											"end": 13566,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 13550,
											"end": 13556,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13539,
											"end": 13548,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 13535,
											"end": 13557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13567,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "284"
										},
										{
											"begin": 13505,
											"end": 13567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13505,
											"end": 13567,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 13505,
											"end": 13567,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13495,
											"end": 13567,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13495,
											"end": 13567,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13289,
											"end": 13577,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12495,
											"end": 13584,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12495,
											"end": 13584,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 12495,
											"end": 13584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12495,
											"end": 13584,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12495,
											"end": 13584,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 12495,
											"end": 13584,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12495,
											"end": 13584,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 12495,
											"end": 13584,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12495,
											"end": 13584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13759,
											"name": "tag",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 13590,
											"end": 13759,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13674,
											"end": 13685,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13708,
											"end": 13714,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13703,
											"end": 13706,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13696,
											"end": 13715,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13748,
											"end": 13752,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13743,
											"end": 13746,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13739,
											"end": 13753,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13724,
											"end": 13753,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13724,
											"end": 13753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13759,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13759,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13759,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13765,
											"end": 13938,
											"name": "tag",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 13765,
											"end": 13938,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13905,
											"end": 13930,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420455243313135352061646472657373000000000000000000"
										},
										{
											"begin": 13901,
											"end": 13902,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13893,
											"end": 13899,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13889,
											"end": 13903,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13882,
											"end": 13931,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13765,
											"end": 13938,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13765,
											"end": 13938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13944,
											"end": 14310,
											"name": "tag",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 13944,
											"end": 14310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14086,
											"end": 14089,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14107,
											"end": 14174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 14171,
											"end": 14173,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 14166,
											"end": 14169,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14107,
											"end": 14174,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 14107,
											"end": 14174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14107,
											"end": 14174,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 14107,
											"end": 14174,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14100,
											"end": 14174,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14100,
											"end": 14174,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14183,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 14272,
											"end": 14275,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14183,
											"end": 14276,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "287"
										},
										{
											"begin": 14183,
											"end": 14276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14183,
											"end": 14276,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 14183,
											"end": 14276,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14301,
											"end": 14303,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14296,
											"end": 14299,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14292,
											"end": 14304,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14285,
											"end": 14304,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14285,
											"end": 14304,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13944,
											"end": 14310,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13944,
											"end": 14310,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13944,
											"end": 14310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13944,
											"end": 14310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14316,
											"end": 14735,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 14316,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14482,
											"end": 14486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14520,
											"end": 14522,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14509,
											"end": 14518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14505,
											"end": 14523,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14497,
											"end": 14523,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14497,
											"end": 14523,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14569,
											"end": 14578,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14563,
											"end": 14567,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14559,
											"end": 14579,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14555,
											"end": 14556,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14544,
											"end": 14553,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14540,
											"end": 14557,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14533,
											"end": 14580,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14597,
											"end": 14728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 14723,
											"end": 14727,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14597,
											"end": 14728,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "288"
										},
										{
											"begin": 14597,
											"end": 14728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14597,
											"end": 14728,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 14597,
											"end": 14728,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14589,
											"end": 14728,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14589,
											"end": 14728,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14316,
											"end": 14735,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14316,
											"end": 14735,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14316,
											"end": 14735,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14316,
											"end": 14735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14741,
											"end": 14971,
											"name": "tag",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 14741,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14881,
											"end": 14915,
											"name": "PUSH",
											"source": 7,
											"value": "4F6E6C792074686520746F6B656E206F776E65722063616E2074726967676572"
										},
										{
											"begin": 14877,
											"end": 14878,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14869,
											"end": 14875,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14865,
											"end": 14879,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14858,
											"end": 14916,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14950,
											"end": 14963,
											"name": "PUSH",
											"source": 7,
											"value": "20636F6E76657273696F6E000000000000000000000000000000000000000000"
										},
										{
											"begin": 14945,
											"end": 14947,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14937,
											"end": 14943,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14933,
											"end": 14948,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14926,
											"end": 14964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14741,
											"end": 14971,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14741,
											"end": 14971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14977,
											"end": 15343,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 14977,
											"end": 15343,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15119,
											"end": 15122,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15140,
											"end": 15207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 15204,
											"end": 15206,
											"name": "PUSH",
											"source": 7,
											"value": "2B"
										},
										{
											"begin": 15199,
											"end": 15202,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15140,
											"end": 15207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 15140,
											"end": 15207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15140,
											"end": 15207,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 15140,
											"end": 15207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15133,
											"end": 15207,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15133,
											"end": 15207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15216,
											"end": 15309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 15305,
											"end": 15308,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15216,
											"end": 15309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "289"
										},
										{
											"begin": 15216,
											"end": 15309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15216,
											"end": 15309,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 15216,
											"end": 15309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15334,
											"end": 15336,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 15329,
											"end": 15332,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15325,
											"end": 15337,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15318,
											"end": 15337,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15318,
											"end": 15337,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14977,
											"end": 15343,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14977,
											"end": 15343,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14977,
											"end": 15343,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14977,
											"end": 15343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15349,
											"end": 15768,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 15349,
											"end": 15768,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15515,
											"end": 15519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15553,
											"end": 15555,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 15542,
											"end": 15551,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15538,
											"end": 15556,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15530,
											"end": 15556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15530,
											"end": 15556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15602,
											"end": 15611,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15596,
											"end": 15600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15592,
											"end": 15612,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 15588,
											"end": 15589,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15577,
											"end": 15586,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 15573,
											"end": 15590,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15566,
											"end": 15613,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15630,
											"end": 15761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 15756,
											"end": 15760,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 15630,
											"end": 15761,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 15630,
											"end": 15761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15630,
											"end": 15761,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 15630,
											"end": 15761,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15622,
											"end": 15761,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15622,
											"end": 15761,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15349,
											"end": 15768,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15349,
											"end": 15768,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15349,
											"end": 15768,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15349,
											"end": 15768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15774,
											"end": 15954,
											"name": "tag",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 15774,
											"end": 15954,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15914,
											"end": 15946,
											"name": "PUSH",
											"source": 7,
											"value": "49447320616E642076616C756573206C656E677468206D69736D617463680000"
										},
										{
											"begin": 15910,
											"end": 15911,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 15902,
											"end": 15908,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 15898,
											"end": 15912,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15891,
											"end": 15947,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15774,
											"end": 15954,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15774,
											"end": 15954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 15960,
											"end": 16326,
											"name": "tag",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 15960,
											"end": 16326,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16102,
											"end": 16105,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16123,
											"end": 16190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 16187,
											"end": 16189,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 16182,
											"end": 16185,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16123,
											"end": 16190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 16123,
											"end": 16190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16123,
											"end": 16190,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 16123,
											"end": 16190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16116,
											"end": 16190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16116,
											"end": 16190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16199,
											"end": 16292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 16288,
											"end": 16291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16199,
											"end": 16292,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "291"
										},
										{
											"begin": 16199,
											"end": 16292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16199,
											"end": 16292,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 16199,
											"end": 16292,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16317,
											"end": 16319,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16312,
											"end": 16315,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16308,
											"end": 16320,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16301,
											"end": 16320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16301,
											"end": 16320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15960,
											"end": 16326,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 15960,
											"end": 16326,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 15960,
											"end": 16326,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 15960,
											"end": 16326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16332,
											"end": 16751,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 16332,
											"end": 16751,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16498,
											"end": 16502,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16536,
											"end": 16538,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 16525,
											"end": 16534,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16521,
											"end": 16539,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16513,
											"end": 16539,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16513,
											"end": 16539,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16585,
											"end": 16594,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16579,
											"end": 16583,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16575,
											"end": 16595,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 16571,
											"end": 16572,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16560,
											"end": 16569,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 16556,
											"end": 16573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16549,
											"end": 16596,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16613,
											"end": 16744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 16739,
											"end": 16743,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 16613,
											"end": 16744,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "292"
										},
										{
											"begin": 16613,
											"end": 16744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16613,
											"end": 16744,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 16613,
											"end": 16744,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16605,
											"end": 16744,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16605,
											"end": 16744,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16332,
											"end": 16751,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16332,
											"end": 16751,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16332,
											"end": 16751,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16332,
											"end": 16751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16757,
											"end": 16926,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 16757,
											"end": 16926,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 16897,
											"end": 16918,
											"name": "PUSH",
											"source": 7,
											"value": "455243323020746F6B656E206E6F742073657400000000000000000000000000"
										},
										{
											"begin": 16893,
											"end": 16894,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 16885,
											"end": 16891,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 16881,
											"end": 16895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 16874,
											"end": 16919,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 16757,
											"end": 16926,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16757,
											"end": 16926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16932,
											"end": 17298,
											"name": "tag",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 16932,
											"end": 17298,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17074,
											"end": 17077,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17095,
											"end": 17162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 17159,
											"end": 17161,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 17154,
											"end": 17157,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17095,
											"end": 17162,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 17095,
											"end": 17162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17095,
											"end": 17162,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 17095,
											"end": 17162,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17088,
											"end": 17162,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17088,
											"end": 17162,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17171,
											"end": 17264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 17260,
											"end": 17263,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17171,
											"end": 17264,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 17171,
											"end": 17264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17171,
											"end": 17264,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 17171,
											"end": 17264,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17289,
											"end": 17291,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17284,
											"end": 17287,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17280,
											"end": 17292,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17273,
											"end": 17292,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17273,
											"end": 17292,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16932,
											"end": 17298,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 16932,
											"end": 17298,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 16932,
											"end": 17298,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 16932,
											"end": 17298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17304,
											"end": 17723,
											"name": "tag",
											"source": 7,
											"value": "142"
										},
										{
											"begin": 17304,
											"end": 17723,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17470,
											"end": 17474,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17508,
											"end": 17510,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 17497,
											"end": 17506,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 17493,
											"end": 17511,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17485,
											"end": 17511,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17485,
											"end": 17511,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17557,
											"end": 17566,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17551,
											"end": 17555,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17547,
											"end": 17567,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 17543,
											"end": 17544,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17532,
											"end": 17541,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 17528,
											"end": 17545,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 17521,
											"end": 17568,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17585,
											"end": 17716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 17711,
											"end": 17715,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 17585,
											"end": 17716,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "294"
										},
										{
											"begin": 17585,
											"end": 17716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17585,
											"end": 17716,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 17585,
											"end": 17716,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17577,
											"end": 17716,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17577,
											"end": 17716,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17304,
											"end": 17723,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 17304,
											"end": 17723,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 17304,
											"end": 17723,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17304,
											"end": 17723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 17729,
											"end": 17909,
											"name": "tag",
											"source": 7,
											"value": "148"
										},
										{
											"begin": 17729,
											"end": 17909,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 17777,
											"end": 17854,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17774,
											"end": 17775,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17767,
											"end": 17855,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17874,
											"end": 17878,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 17871,
											"end": 17872,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 17864,
											"end": 17879,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17898,
											"end": 17902,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 17895,
											"end": 17896,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 17888,
											"end": 17903,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 17915,
											"end": 18155,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 17915,
											"end": 18155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18055,
											"end": 18089,
											"name": "PUSH",
											"source": 7,
											"value": "4F6E65206F72206D6F7265204552433131353520746F6B656E73206E6F742061"
										},
										{
											"begin": 18051,
											"end": 18052,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18043,
											"end": 18049,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18039,
											"end": 18053,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18032,
											"end": 18090,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18124,
											"end": 18147,
											"name": "PUSH",
											"source": 7,
											"value": "6C6C6F77656420666F7220636F6E76657273696F6E0000000000000000000000"
										},
										{
											"begin": 18119,
											"end": 18121,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18111,
											"end": 18117,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18107,
											"end": 18122,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18100,
											"end": 18148,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 17915,
											"end": 18155,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 17915,
											"end": 18155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18161,
											"end": 18527,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 18161,
											"end": 18527,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18303,
											"end": 18306,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18324,
											"end": 18391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 18388,
											"end": 18390,
											"name": "PUSH",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 18383,
											"end": 18386,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18324,
											"end": 18391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 18324,
											"end": 18391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18324,
											"end": 18391,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 18324,
											"end": 18391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18317,
											"end": 18391,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18317,
											"end": 18391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18400,
											"end": 18493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 18489,
											"end": 18492,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18400,
											"end": 18493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 18400,
											"end": 18493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18400,
											"end": 18493,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 18400,
											"end": 18493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18518,
											"end": 18520,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 18513,
											"end": 18516,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18509,
											"end": 18521,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18502,
											"end": 18521,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18502,
											"end": 18521,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18161,
											"end": 18527,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18161,
											"end": 18527,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18161,
											"end": 18527,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18161,
											"end": 18527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18533,
											"end": 18952,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 18533,
											"end": 18952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18699,
											"end": 18703,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18737,
											"end": 18739,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 18726,
											"end": 18735,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 18722,
											"end": 18740,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18714,
											"end": 18740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18714,
											"end": 18740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18786,
											"end": 18795,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18780,
											"end": 18784,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18776,
											"end": 18796,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 18772,
											"end": 18773,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 18761,
											"end": 18770,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 18757,
											"end": 18774,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18750,
											"end": 18797,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18814,
											"end": 18945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 18940,
											"end": 18944,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 18814,
											"end": 18945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 18814,
											"end": 18945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18814,
											"end": 18945,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 18814,
											"end": 18945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18806,
											"end": 18945,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18806,
											"end": 18945,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18533,
											"end": 18952,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 18533,
											"end": 18952,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 18533,
											"end": 18952,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18533,
											"end": 18952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 18958,
											"end": 19290,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 18958,
											"end": 19290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19079,
											"end": 19083,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19117,
											"end": 19119,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19106,
											"end": 19115,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19102,
											"end": 19120,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19094,
											"end": 19120,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19094,
											"end": 19120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19130,
											"end": 19201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 19198,
											"end": 19199,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19187,
											"end": 19196,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19183,
											"end": 19200,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19174,
											"end": 19180,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19130,
											"end": 19201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 19130,
											"end": 19201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19130,
											"end": 19201,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 19130,
											"end": 19201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19211,
											"end": 19283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 19279,
											"end": 19281,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19268,
											"end": 19277,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19264,
											"end": 19282,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19255,
											"end": 19261,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19211,
											"end": 19283,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 19211,
											"end": 19283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19211,
											"end": 19283,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 19211,
											"end": 19283,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 18958,
											"end": 19290,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 18958,
											"end": 19290,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 18958,
											"end": 19290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18958,
											"end": 19290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18958,
											"end": 19290,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 18958,
											"end": 19290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19296,
											"end": 19628,
											"name": "tag",
											"source": 7,
											"value": "164"
										},
										{
											"begin": 19296,
											"end": 19628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19417,
											"end": 19421,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19455,
											"end": 19457,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 19444,
											"end": 19453,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19440,
											"end": 19458,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19432,
											"end": 19458,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19432,
											"end": 19458,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19468,
											"end": 19539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 19536,
											"end": 19537,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19525,
											"end": 19534,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19521,
											"end": 19538,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19512,
											"end": 19518,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 19468,
											"end": 19539,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 19468,
											"end": 19539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19468,
											"end": 19539,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 19468,
											"end": 19539,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19549,
											"end": 19621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 19617,
											"end": 19619,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 19606,
											"end": 19615,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19602,
											"end": 19620,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19593,
											"end": 19599,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 19549,
											"end": 19621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 19549,
											"end": 19621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19549,
											"end": 19621,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 19549,
											"end": 19621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19296,
											"end": 19628,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 19296,
											"end": 19628,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 19296,
											"end": 19628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19296,
											"end": 19628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19296,
											"end": 19628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19296,
											"end": 19628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19634,
											"end": 19811,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 19634,
											"end": 19811,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19774,
											"end": 19803,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C696420455243323020746F6B656E20616464726573730000000000"
										},
										{
											"begin": 19770,
											"end": 19771,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19762,
											"end": 19768,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 19758,
											"end": 19772,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19751,
											"end": 19804,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19634,
											"end": 19811,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19634,
											"end": 19811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19817,
											"end": 20183,
											"name": "tag",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 19817,
											"end": 20183,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19959,
											"end": 19962,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 19980,
											"end": 20047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 20044,
											"end": 20046,
											"name": "PUSH",
											"source": 7,
											"value": "1B"
										},
										{
											"begin": 20039,
											"end": 20042,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 19980,
											"end": 20047,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 19980,
											"end": 20047,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 19980,
											"end": 20047,
											"name": "tag",
											"source": 7,
											"value": "507"
										},
										{
											"begin": 19980,
											"end": 20047,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 19973,
											"end": 20047,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19973,
											"end": 20047,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20056,
											"end": 20149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 20145,
											"end": 20148,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20056,
											"end": 20149,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 20056,
											"end": 20149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20056,
											"end": 20149,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 20056,
											"end": 20149,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20174,
											"end": 20176,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20169,
											"end": 20172,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20165,
											"end": 20177,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20158,
											"end": 20177,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20158,
											"end": 20177,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19817,
											"end": 20183,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 19817,
											"end": 20183,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 19817,
											"end": 20183,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 19817,
											"end": 20183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20189,
											"end": 20608,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 20189,
											"end": 20608,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20355,
											"end": 20359,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20393,
											"end": 20395,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20382,
											"end": 20391,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20378,
											"end": 20396,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20370,
											"end": 20396,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20370,
											"end": 20396,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20442,
											"end": 20451,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20436,
											"end": 20440,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20432,
											"end": 20452,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 20428,
											"end": 20429,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20417,
											"end": 20426,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 20413,
											"end": 20430,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20406,
											"end": 20453,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20470,
											"end": 20601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 20596,
											"end": 20600,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 20470,
											"end": 20601,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "298"
										},
										{
											"begin": 20470,
											"end": 20601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20470,
											"end": 20601,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 20470,
											"end": 20601,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20462,
											"end": 20601,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20462,
											"end": 20601,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20189,
											"end": 20608,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20189,
											"end": 20608,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20189,
											"end": 20608,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20189,
											"end": 20608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20614,
											"end": 20846,
											"name": "tag",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 20614,
											"end": 20846,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20754,
											"end": 20788,
											"name": "PUSH",
											"source": 7,
											"value": "436F6E76657273696F6E206E6F7420616C6C6F77656420666F72207468697320"
										},
										{
											"begin": 20750,
											"end": 20751,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 20742,
											"end": 20748,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20738,
											"end": 20752,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20731,
											"end": 20789,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20823,
											"end": 20838,
											"name": "PUSH",
											"source": 7,
											"value": "4552433131353520746F6B656E00000000000000000000000000000000000000"
										},
										{
											"begin": 20818,
											"end": 20820,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 20810,
											"end": 20816,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 20806,
											"end": 20821,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20799,
											"end": 20839,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20614,
											"end": 20846,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20614,
											"end": 20846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 20852,
											"end": 21218,
											"name": "tag",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 20852,
											"end": 21218,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 20994,
											"end": 20997,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21015,
											"end": 21082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 21079,
											"end": 21081,
											"name": "PUSH",
											"source": 7,
											"value": "2D"
										},
										{
											"begin": 21074,
											"end": 21077,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21015,
											"end": 21082,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 21015,
											"end": 21082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21015,
											"end": 21082,
											"name": "tag",
											"source": 7,
											"value": "513"
										},
										{
											"begin": 21015,
											"end": 21082,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21008,
											"end": 21082,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21008,
											"end": 21082,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21091,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 21180,
											"end": 21183,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21091,
											"end": 21184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "299"
										},
										{
											"begin": 21091,
											"end": 21184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21091,
											"end": 21184,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 21091,
											"end": 21184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21209,
											"end": 21211,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 21204,
											"end": 21207,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21200,
											"end": 21212,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21193,
											"end": 21212,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21193,
											"end": 21212,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20852,
											"end": 21218,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 20852,
											"end": 21218,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 20852,
											"end": 21218,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 20852,
											"end": 21218,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21224,
											"end": 21643,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 21224,
											"end": 21643,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21390,
											"end": 21394,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21428,
											"end": 21430,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 21417,
											"end": 21426,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21413,
											"end": 21431,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21405,
											"end": 21431,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21405,
											"end": 21431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21477,
											"end": 21486,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21471,
											"end": 21475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21467,
											"end": 21487,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 21463,
											"end": 21464,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21452,
											"end": 21461,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 21448,
											"end": 21465,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21441,
											"end": 21488,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21505,
											"end": 21636,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 21631,
											"end": 21635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 21505,
											"end": 21636,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "300"
										},
										{
											"begin": 21505,
											"end": 21636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21505,
											"end": 21636,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 21505,
											"end": 21636,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21497,
											"end": 21636,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21497,
											"end": 21636,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21224,
											"end": 21643,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21224,
											"end": 21643,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21224,
											"end": 21643,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21224,
											"end": 21643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21649,
											"end": 21831,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 21649,
											"end": 21831,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21789,
											"end": 21823,
											"name": "PUSH",
											"source": 7,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 21785,
											"end": 21786,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 21777,
											"end": 21783,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 21773,
											"end": 21787,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21766,
											"end": 21824,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21649,
											"end": 21831,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21649,
											"end": 21831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 21837,
											"end": 22203,
											"name": "tag",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 21837,
											"end": 22203,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21979,
											"end": 21982,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22000,
											"end": 22067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 22064,
											"end": 22066,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22059,
											"end": 22062,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22000,
											"end": 22067,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 22000,
											"end": 22067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22000,
											"end": 22067,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 22000,
											"end": 22067,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 21993,
											"end": 22067,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21993,
											"end": 22067,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22076,
											"end": 22169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 22165,
											"end": 22168,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22076,
											"end": 22169,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 22076,
											"end": 22169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22076,
											"end": 22169,
											"name": "tag",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 22076,
											"end": 22169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22194,
											"end": 22196,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22189,
											"end": 22192,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22185,
											"end": 22197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22178,
											"end": 22197,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22178,
											"end": 22197,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21837,
											"end": 22203,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 21837,
											"end": 22203,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 21837,
											"end": 22203,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 21837,
											"end": 22203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22209,
											"end": 22628,
											"name": "tag",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 22209,
											"end": 22628,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22375,
											"end": 22379,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22413,
											"end": 22415,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22402,
											"end": 22411,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22398,
											"end": 22416,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22390,
											"end": 22416,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22390,
											"end": 22416,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22462,
											"end": 22471,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22456,
											"end": 22460,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22452,
											"end": 22472,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 22448,
											"end": 22449,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22437,
											"end": 22446,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22433,
											"end": 22450,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22426,
											"end": 22473,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22490,
											"end": 22621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 22616,
											"end": 22620,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 22490,
											"end": 22621,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "302"
										},
										{
											"begin": 22490,
											"end": 22621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22490,
											"end": 22621,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 22490,
											"end": 22621,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22482,
											"end": 22621,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22482,
											"end": 22621,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22209,
											"end": 22628,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 22209,
											"end": 22628,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22209,
											"end": 22628,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22209,
											"end": 22628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22634,
											"end": 23076,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 22634,
											"end": 23076,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22783,
											"end": 22787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22821,
											"end": 22823,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 22810,
											"end": 22819,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 22806,
											"end": 22824,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22798,
											"end": 22824,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 22798,
											"end": 22824,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22834,
											"end": 22905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 22902,
											"end": 22903,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 22891,
											"end": 22900,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22887,
											"end": 22904,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22878,
											"end": 22884,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 22834,
											"end": 22905,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 22834,
											"end": 22905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22834,
											"end": 22905,
											"name": "tag",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 22834,
											"end": 22905,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22915,
											"end": 22987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 22983,
											"end": 22985,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 22972,
											"end": 22981,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 22968,
											"end": 22986,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22959,
											"end": 22965,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 22915,
											"end": 22987,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 22915,
											"end": 22987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22915,
											"end": 22987,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 22915,
											"end": 22987,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22997,
											"end": 23069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 23065,
											"end": 23067,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 23054,
											"end": 23063,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 23050,
											"end": 23068,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23041,
											"end": 23047,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 22997,
											"end": 23069,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 22997,
											"end": 23069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 22997,
											"end": 23069,
											"name": "tag",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 22997,
											"end": 23069,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 22634,
											"end": 23076,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 22634,
											"end": 23076,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 22634,
											"end": 23076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22634,
											"end": 23076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22634,
											"end": 23076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22634,
											"end": 23076,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 22634,
											"end": 23076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23082,
											"end": 23198,
											"name": "tag",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 23082,
											"end": 23198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23152,
											"end": 23173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 23167,
											"end": 23172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23152,
											"end": 23173,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 23152,
											"end": 23173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23152,
											"end": 23173,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 23152,
											"end": 23173,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23145,
											"end": 23150,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23142,
											"end": 23174,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 23132,
											"end": 23192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 23132,
											"end": 23192,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 23188,
											"end": 23189,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23185,
											"end": 23186,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 23178,
											"end": 23190,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 23132,
											"end": 23192,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 23132,
											"end": 23192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23082,
											"end": 23198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23082,
											"end": 23198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23204,
											"end": 23341,
											"name": "tag",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 23204,
											"end": 23341,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23258,
											"end": 23263,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23289,
											"end": 23295,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23283,
											"end": 23296,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 23274,
											"end": 23296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23274,
											"end": 23296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23305,
											"end": 23335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 23329,
											"end": 23334,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 23305,
											"end": 23335,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "303"
										},
										{
											"begin": 23305,
											"end": 23335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23305,
											"end": 23335,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 23305,
											"end": 23335,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23204,
											"end": 23341,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 23204,
											"end": 23341,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23204,
											"end": 23341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23204,
											"end": 23341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23204,
											"end": 23341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23347,
											"end": 23692,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 23347,
											"end": 23692,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23414,
											"end": 23420,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23463,
											"end": 23465,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 23451,
											"end": 23460,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23442,
											"end": 23449,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 23438,
											"end": 23461,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 23434,
											"end": 23466,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 23431,
											"end": 23550,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 23431,
											"end": 23550,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 23431,
											"end": 23550,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 23469,
											"end": 23548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 23469,
											"end": 23548,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "250"
										},
										{
											"begin": 23469,
											"end": 23548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23469,
											"end": 23548,
											"name": "tag",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 23469,
											"end": 23548,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23431,
											"end": 23550,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 23431,
											"end": 23550,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23589,
											"end": 23590,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23614,
											"end": 23675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 23667,
											"end": 23674,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 23658,
											"end": 23664,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23647,
											"end": 23656,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 23643,
											"end": 23665,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23614,
											"end": 23675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "304"
										},
										{
											"begin": 23614,
											"end": 23675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23614,
											"end": 23675,
											"name": "tag",
											"source": 7,
											"value": "535"
										},
										{
											"begin": 23614,
											"end": 23675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23604,
											"end": 23675,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23604,
											"end": 23675,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23560,
											"end": 23685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23347,
											"end": 23692,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 23347,
											"end": 23692,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23347,
											"end": 23692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23347,
											"end": 23692,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23347,
											"end": 23692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23698,
											"end": 23869,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 23698,
											"end": 23869,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 23838,
											"end": 23861,
											"name": "PUSH",
											"source": 7,
											"value": "4552433230207472616E73666572206661696C65640000000000000000000000"
										},
										{
											"begin": 23834,
											"end": 23835,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 23826,
											"end": 23832,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 23822,
											"end": 23836,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23815,
											"end": 23862,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23698,
											"end": 23869,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23698,
											"end": 23869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 23875,
											"end": 24241,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 23875,
											"end": 24241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24017,
											"end": 24020,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24038,
											"end": 24105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 24102,
											"end": 24104,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 24097,
											"end": 24100,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24038,
											"end": 24105,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 24038,
											"end": 24105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24038,
											"end": 24105,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 24038,
											"end": 24105,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24031,
											"end": 24105,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24031,
											"end": 24105,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24114,
											"end": 24207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 24203,
											"end": 24206,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24114,
											"end": 24207,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 24114,
											"end": 24207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24114,
											"end": 24207,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 24114,
											"end": 24207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24232,
											"end": 24234,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 24227,
											"end": 24230,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24223,
											"end": 24235,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24216,
											"end": 24235,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24216,
											"end": 24235,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23875,
											"end": 24241,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 23875,
											"end": 24241,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 23875,
											"end": 24241,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 23875,
											"end": 24241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24247,
											"end": 24666,
											"name": "tag",
											"source": 7,
											"value": "192"
										},
										{
											"begin": 24247,
											"end": 24666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24413,
											"end": 24417,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24451,
											"end": 24453,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 24440,
											"end": 24449,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24436,
											"end": 24454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24428,
											"end": 24454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24428,
											"end": 24454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24500,
											"end": 24509,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24494,
											"end": 24498,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24490,
											"end": 24510,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 24486,
											"end": 24487,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24475,
											"end": 24484,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24471,
											"end": 24488,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24464,
											"end": 24511,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 24528,
											"end": 24659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 24654,
											"end": 24658,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 24528,
											"end": 24659,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 24528,
											"end": 24659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24528,
											"end": 24659,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 24528,
											"end": 24659,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24520,
											"end": 24659,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24520,
											"end": 24659,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24247,
											"end": 24666,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24247,
											"end": 24666,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24247,
											"end": 24666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24247,
											"end": 24666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24672,
											"end": 24894,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 24672,
											"end": 24894,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24765,
											"end": 24769,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24803,
											"end": 24805,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 24792,
											"end": 24801,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 24788,
											"end": 24806,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24780,
											"end": 24806,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 24780,
											"end": 24806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24816,
											"end": 24887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 24884,
											"end": 24885,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 24873,
											"end": 24882,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 24869,
											"end": 24886,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 24860,
											"end": 24866,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 24816,
											"end": 24887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 24816,
											"end": 24887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24816,
											"end": 24887,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 24816,
											"end": 24887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24672,
											"end": 24894,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 24672,
											"end": 24894,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24672,
											"end": 24894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24672,
											"end": 24894,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24672,
											"end": 24894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 24900,
											"end": 25068,
											"name": "tag",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 24900,
											"end": 25068,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 24983,
											"end": 24994,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25017,
											"end": 25023,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25012,
											"end": 25015,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25005,
											"end": 25024,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 25057,
											"end": 25061,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 25052,
											"end": 25055,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25048,
											"end": 25062,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25033,
											"end": 25062,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25033,
											"end": 25062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24900,
											"end": 25068,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 24900,
											"end": 25068,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 24900,
											"end": 25068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24900,
											"end": 25068,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 24900,
											"end": 25068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25074,
											"end": 25188,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 25074,
											"end": 25188,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25074,
											"end": 25188,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25074,
											"end": 25188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25194,
											"end": 25556,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 25194,
											"end": 25556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25335,
											"end": 25338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25356,
											"end": 25421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 25419,
											"end": 25420,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25414,
											"end": 25417,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25356,
											"end": 25421,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "307"
										},
										{
											"begin": 25356,
											"end": 25421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25356,
											"end": 25421,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 25356,
											"end": 25421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25349,
											"end": 25421,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 25349,
											"end": 25421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25430,
											"end": 25523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 25519,
											"end": 25522,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25430,
											"end": 25523,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 25430,
											"end": 25523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25430,
											"end": 25523,
											"name": "tag",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 25430,
											"end": 25523,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25548,
											"end": 25549,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25543,
											"end": 25546,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25539,
											"end": 25550,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25532,
											"end": 25550,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25532,
											"end": 25550,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25194,
											"end": 25556,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 25194,
											"end": 25556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25194,
											"end": 25556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25194,
											"end": 25556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25562,
											"end": 26310,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 25562,
											"end": 26310,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25811,
											"end": 25815,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25849,
											"end": 25852,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 25838,
											"end": 25847,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 25834,
											"end": 25853,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25826,
											"end": 25853,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 25826,
											"end": 25853,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25863,
											"end": 25934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 25931,
											"end": 25932,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 25920,
											"end": 25929,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25916,
											"end": 25933,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25907,
											"end": 25913,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 25863,
											"end": 25934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 25863,
											"end": 25934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25863,
											"end": 25934,
											"name": "tag",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 25863,
											"end": 25934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 25944,
											"end": 26016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 26012,
											"end": 26014,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 26001,
											"end": 26010,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 25997,
											"end": 26015,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 25988,
											"end": 25994,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 25944,
											"end": 26016,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 25944,
											"end": 26016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 25944,
											"end": 26016,
											"name": "tag",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 25944,
											"end": 26016,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26026,
											"end": 26098,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 26094,
											"end": 26096,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 26083,
											"end": 26092,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 26079,
											"end": 26097,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26070,
											"end": 26076,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 26026,
											"end": 26098,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 26026,
											"end": 26098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26026,
											"end": 26098,
											"name": "tag",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 26026,
											"end": 26098,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26145,
											"end": 26154,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26139,
											"end": 26143,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26135,
											"end": 26155,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 26130,
											"end": 26132,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 26119,
											"end": 26128,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 26115,
											"end": 26133,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26108,
											"end": 26156,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 26173,
											"end": 26303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 26298,
											"end": 26302,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 26173,
											"end": 26303,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 26173,
											"end": 26303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26173,
											"end": 26303,
											"name": "tag",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 26173,
											"end": 26303,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26165,
											"end": 26303,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26165,
											"end": 26303,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25562,
											"end": 26310,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 25562,
											"end": 26310,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 25562,
											"end": 26310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25562,
											"end": 26310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25562,
											"end": 26310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25562,
											"end": 26310,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 25562,
											"end": 26310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26316,
											"end": 26543,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 26316,
											"end": 26543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26456,
											"end": 26490,
											"name": "PUSH",
											"source": 7,
											"value": "4552433131353520746F6B656E206E6F7420616C6C6F77656420666F7220636F"
										},
										{
											"begin": 26452,
											"end": 26453,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 26444,
											"end": 26450,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 26440,
											"end": 26454,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26433,
											"end": 26491,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 26525,
											"end": 26535,
											"name": "PUSH",
											"source": 7,
											"value": "6E76657273696F6E000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26520,
											"end": 26522,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 26512,
											"end": 26518,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 26508,
											"end": 26523,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26501,
											"end": 26536,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 26316,
											"end": 26543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26316,
											"end": 26543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26549,
											"end": 26915,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 26549,
											"end": 26915,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26691,
											"end": 26694,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 26712,
											"end": 26779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 26776,
											"end": 26778,
											"name": "PUSH",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 26771,
											"end": 26774,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 26712,
											"end": 26779,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 26712,
											"end": 26779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26712,
											"end": 26779,
											"name": "tag",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 26712,
											"end": 26779,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26705,
											"end": 26779,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 26705,
											"end": 26779,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26788,
											"end": 26881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 26877,
											"end": 26880,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 26788,
											"end": 26881,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 26788,
											"end": 26881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26788,
											"end": 26881,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 26788,
											"end": 26881,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 26906,
											"end": 26908,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 26901,
											"end": 26904,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 26897,
											"end": 26909,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 26890,
											"end": 26909,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26890,
											"end": 26909,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26549,
											"end": 26915,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 26549,
											"end": 26915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26549,
											"end": 26915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26549,
											"end": 26915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 26921,
											"end": 27340,
											"name": "tag",
											"source": 7,
											"value": "214"
										},
										{
											"begin": 26921,
											"end": 27340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27087,
											"end": 27091,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 27125,
											"end": 27127,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 27114,
											"end": 27123,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27110,
											"end": 27128,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27102,
											"end": 27128,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27102,
											"end": 27128,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27174,
											"end": 27183,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27168,
											"end": 27172,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27164,
											"end": 27184,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 27160,
											"end": 27161,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 27149,
											"end": 27158,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 27145,
											"end": 27162,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27138,
											"end": 27185,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 27202,
											"end": 27333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 27328,
											"end": 27332,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 27202,
											"end": 27333,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 27202,
											"end": 27333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27202,
											"end": 27333,
											"name": "tag",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 27202,
											"end": 27333,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27194,
											"end": 27333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27194,
											"end": 27333,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26921,
											"end": 27340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 26921,
											"end": 27340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 26921,
											"end": 27340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 26921,
											"end": 27340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27346,
											"end": 27519,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 27346,
											"end": 27519,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27486,
											"end": 27511,
											"name": "PUSH",
											"source": 7,
											"value": "455243323020746F6B656E206E6F7420646566696E6564000000000000000000"
										},
										{
											"begin": 27482,
											"end": 27483,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 27474,
											"end": 27480,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27470,
											"end": 27484,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27463,
											"end": 27512,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 27346,
											"end": 27519,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27346,
											"end": 27519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27525,
											"end": 27891,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 27525,
											"end": 27891,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27667,
											"end": 27670,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 27688,
											"end": 27755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 27752,
											"end": 27754,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 27747,
											"end": 27750,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 27688,
											"end": 27755,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "286"
										},
										{
											"begin": 27688,
											"end": 27755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27688,
											"end": 27755,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 27688,
											"end": 27755,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27681,
											"end": 27755,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 27681,
											"end": 27755,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27764,
											"end": 27857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 27853,
											"end": 27856,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27764,
											"end": 27857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 27764,
											"end": 27857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27764,
											"end": 27857,
											"name": "tag",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 27764,
											"end": 27857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 27882,
											"end": 27884,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 27877,
											"end": 27880,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 27873,
											"end": 27885,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 27866,
											"end": 27885,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27866,
											"end": 27885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27525,
											"end": 27891,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 27525,
											"end": 27891,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27525,
											"end": 27891,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27525,
											"end": 27891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 27897,
											"end": 28316,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 27897,
											"end": 28316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28063,
											"end": 28067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28101,
											"end": 28103,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 28090,
											"end": 28099,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 28086,
											"end": 28104,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28078,
											"end": 28104,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 28078,
											"end": 28104,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28150,
											"end": 28159,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 28144,
											"end": 28148,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 28140,
											"end": 28160,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 28136,
											"end": 28137,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28125,
											"end": 28134,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 28121,
											"end": 28138,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28114,
											"end": 28161,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 28178,
											"end": 28309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 28304,
											"end": 28308,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 28178,
											"end": 28309,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 28178,
											"end": 28309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 28178,
											"end": 28309,
											"name": "tag",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 28178,
											"end": 28309,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28170,
											"end": 28309,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 28170,
											"end": 28309,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27897,
											"end": 28316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 27897,
											"end": 28316,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 27897,
											"end": 28316,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 27897,
											"end": 28316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 28322,
											"end": 28764,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 28322,
											"end": 28764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28471,
											"end": 28475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28509,
											"end": 28511,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 28498,
											"end": 28507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 28494,
											"end": 28512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28486,
											"end": 28512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 28486,
											"end": 28512,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28522,
											"end": 28593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 28590,
											"end": 28591,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 28579,
											"end": 28588,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 28575,
											"end": 28592,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28566,
											"end": 28572,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 28522,
											"end": 28593,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 28522,
											"end": 28593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 28522,
											"end": 28593,
											"name": "tag",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 28522,
											"end": 28593,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28603,
											"end": 28675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 28671,
											"end": 28673,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 28660,
											"end": 28669,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 28656,
											"end": 28674,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28647,
											"end": 28653,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 28603,
											"end": 28675,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 28603,
											"end": 28675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 28603,
											"end": 28675,
											"name": "tag",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 28603,
											"end": 28675,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28685,
											"end": 28757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 28753,
											"end": 28755,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 28742,
											"end": 28751,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 28738,
											"end": 28756,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 28729,
											"end": 28735,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 28685,
											"end": 28757,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 28685,
											"end": 28757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 28685,
											"end": 28757,
											"name": "tag",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 28685,
											"end": 28757,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 28322,
											"end": 28764,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 28322,
											"end": 28764,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 28322,
											"end": 28764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28322,
											"end": 28764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28322,
											"end": 28764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28322,
											"end": 28764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 28322,
											"end": 28764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
								"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"DualERC1155ERC20Converter.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addAllowedERC1155Forward(address,uint256)": "9c3c4345",
							"addAllowedERC1155Reverse(address,uint256)": "652ca87e",
							"allowedERC1155Forward(address,uint256)": "58be702f",
							"allowedERC1155Reverse(address,uint256)": "0fcd1e84",
							"conversionHistory(uint256)": "453a1e75",
							"conversionRecordsBySender(address,uint256)": "fce3fb2f",
							"conversionRecordsERC20ToERC1155ByUser(address,uint256)": "b1fd0a42",
							"convertToERC1155(address,uint256,uint256)": "df84aae9",
							"erc20ToErc1155History(uint256)": "15614d5d",
							"erc20Token()": "8a13eea7",
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"owner()": "8da5cb5b",
							"removeAllowedERC1155Forward(address,uint256)": "c953e56e",
							"removeAllowedERC1155Reverse(address,uint256)": "ea6a5b0e",
							"renounceOwnership()": "715018a6",
							"setERC20Token(address)": "de562487",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"erc1155Contract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AllowedERC1155ForwardAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"erc1155Contract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AllowedERC1155ForwardRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"erc1155Contract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AllowedERC1155ReverseAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"erc1155Contract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AllowedERC1155ReverseRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"erc1155TokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc1155Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"erc20Amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ConversionPerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"erc1155Contract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ERC1155ToERC20Conversion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"erc1155Contract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ERC20ToERC1155Conversion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousERC20\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newERC20\",\"type\":\"address\"}],\"name\":\"ERC20TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc1155Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"addAllowedERC1155Forward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc1155Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"addAllowedERC1155Reverse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowedERC1155Forward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowedERC1155Reverse\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"conversionHistory\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc1155TokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"erc1155Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"erc20Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"conversionRecordsBySender\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"erc1155TokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"erc1155Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"erc20Amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"conversionRecordsERC20ToERC1155ByUser\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc1155Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc1155Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"convertToERC1155\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"erc20ToErc1155History\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc1155Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"erc20Token\",\"outputs\":[{\"internalType\":\"contract IERC20MintableBurnable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc1155Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"removeAllowedERC1155Forward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc1155Contract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"removeAllowedERC1155Reverse\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_erc20Token\",\"type\":\"address\"}],\"name\":\"setERC20Token\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"addAllowedERC1155Forward(address,uint256)\":{\"params\":{\"erc1155Contract\":\"The ERC1155 contract address.\",\"tokenId\":\"The ERC1155 token id.\"}},\"addAllowedERC1155Reverse(address,uint256)\":{\"params\":{\"erc1155Contract\":\"The ERC1155 contract address.\",\"tokenId\":\"The ERC1155 token id.\"}},\"convertToERC1155(address,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of ERC20 tokens to convert (and thus ERC1155 tokens to mint).\",\"erc1155Contract\":\"The address of the ERC1155 contract on which to mint tokens.\",\"tokenId\":\"The ERC1155 token id to mint.\"}},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"returns\":{\"_0\":\"bytes4 indicating acceptance.\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"returns\":{\"_0\":\"bytes4 indicating acceptance.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeAllowedERC1155Forward(address,uint256)\":{\"params\":{\"erc1155Contract\":\"The ERC1155 contract address.\",\"tokenId\":\"The ERC1155 token id.\"}},\"removeAllowedERC1155Reverse(address,uint256)\":{\"params\":{\"erc1155Contract\":\"The ERC1155 contract address.\",\"tokenId\":\"The ERC1155 token id.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setERC20Token(address)\":{\"params\":{\"_erc20Token\":\"The address of the ERC20 token contract.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"DualERC1155ERC20Converter\",\"version\":1},\"userdoc\":{\"events\":{\"ConversionPerformed(address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted when a conversion is performed.\"}},\"kind\":\"user\",\"methods\":{\"addAllowedERC1155Forward(address,uint256)\":{\"notice\":\"Adds an allowed ERC1155 contract/token pair for forward conversion.\"},\"addAllowedERC1155Reverse(address,uint256)\":{\"notice\":\"Adds an allowed ERC1155 contract/token pair for reverse conversion.\"},\"allowedERC1155Forward(address,uint256)\":{\"notice\":\"Allowed ERC1155 contract/token pairs for forward conversion (ERC1155 -> ERC20). When an ERC1155 token is sent to this contract, the sender receives ERC20 tokens if allowedERC1155Forward[erc1155Contract][tokenId] is true.\"},\"allowedERC1155Reverse(address,uint256)\":{\"notice\":\"Allowed ERC1155 contract/token pairs for reverse conversion (ERC20 -> ERC1155). When converting ERC20 tokens, the specified ERC1155 contract/token pair must be allowed.\"},\"constructor\":{\"notice\":\"Constructor that passes msg.sender to Ownable.\"},\"conversionHistory(uint256)\":{\"notice\":\"Global array of all conversion records.\"},\"conversionRecordsBySender(address,uint256)\":{\"notice\":\"Mapping from a sender address to an array of conversion records.\"},\"conversionRecordsERC20ToERC1155ByUser(address,uint256)\":{\"notice\":\"Mapping from a user address to an array of their reverse conversion records.\"},\"convertToERC1155(address,uint256,uint256)\":{\"notice\":\"Converts ERC20 tokens into ERC1155 tokens. Transfers ERC20 tokens from the user, burns them, and then mints ERC1155 tokens on the specified contract.\"},\"erc20ToErc1155History(uint256)\":{\"notice\":\"Global array of reverse conversion records.\"},\"erc20Token()\":{\"notice\":\"The ERC20 token used in conversion.\"},\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"notice\":\"Called when multiple ERC1155 token types are transferred in a batch. Requirements: - The caller (operator) must equal the token owner (`from`). - Each ERC1155 contract (msg.sender) and token id must be allowed.\"},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"notice\":\"Called when a single ERC1155 token type is transferred to this contract. Requirements: - The caller (operator) must equal the token owner (`from`). - The ERC1155 contract (msg.sender) and token id must be allowed for forward conversion.\"},\"removeAllowedERC1155Forward(address,uint256)\":{\"notice\":\"Removes an allowed ERC1155 contract/token pair for forward conversion.\"},\"removeAllowedERC1155Reverse(address,uint256)\":{\"notice\":\"Removes an allowed ERC1155 contract/token pair for reverse conversion.\"},\"setERC20Token(address)\":{\"notice\":\"Sets (or updates) the ERC20 token contract address.\"}},\"notice\":\"This contract supports two conversion directions:         1. Forward conversion (ERC1155 -> ERC20): when the contract receives ERC1155 tokens,            it mints ERC20 tokens (1:1 ratio) to the sender if the pair is allowed.         2. Reverse conversion (ERC20 -> ERC1155): a user can convert ERC20 tokens into ERC1155 tokens            by calling a function. The contract transfers and burns the ERC20 tokens and then            calls mint on an allowed ERC1155 contract.         Allowed ERC1155 token pairs (contract address and token ID) are configured separately         for forward and reverse conversions. The ERC20 token is set via an admin function.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"DualERC1155ERC20Converter.sol\":\"DualERC1155ERC20Converter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xe103e95f854ef0cd1bba5f469175f67cd332f5c2561941f165e3dd65cee94d6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf8cc5d07cf8003255f9d766fe8188b9f6e33b6240e126a605f0d061566b23e\",\"dweb:/ipfs/Qmd7okDCSoUt1L4G9hmb5c4W8kWUnfpAa2jyBKUp4xKErd\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"DualERC1155ERC20Converter.sol\":{\"keccak256\":\"0x530758e97fe30006ef19d4f386884a58281f3e60db86e85689d3aef13514fe0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbe1d7dfb565d90ce5c0a25f3f580eef369beca6873d27f13ca061615a8fbd6c\",\"dweb:/ipfs/QmeBRE8fKuhTH3tGR4WfpJcyNsLLnor2qzuCarrgNWcXxa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 387,
								"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
								"label": "erc20Token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20MintableBurnable)365"
							},
							{
								"astId": 394,
								"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
								"label": "allowedERC1155Forward",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 401,
								"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
								"label": "allowedERC1155Reverse",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))"
							},
							{
								"astId": 418,
								"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
								"label": "conversionRecordsBySender",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_array(t_struct(ConversionRecord)411_storage)dyn_storage)"
							},
							{
								"astId": 423,
								"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
								"label": "conversionHistory",
								"offset": 0,
								"slot": "5",
								"type": "t_array(t_struct(ConversionRecord)411_storage)dyn_storage"
							},
							{
								"astId": 439,
								"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
								"label": "erc20ToErc1155History",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_struct(ConversionRecordERC20ToERC1155)434_storage)dyn_storage"
							},
							{
								"astId": 446,
								"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
								"label": "conversionRecordsERC20ToERC1155ByUser",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_array(t_struct(ConversionRecordERC20ToERC1155)434_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(ConversionRecord)411_storage)dyn_storage": {
								"base": "t_struct(ConversionRecord)411_storage",
								"encoding": "dynamic_array",
								"label": "struct DualERC1155ERC20Converter.ConversionRecord[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(ConversionRecordERC20ToERC1155)434_storage)dyn_storage": {
								"base": "t_struct(ConversionRecordERC20ToERC1155)434_storage",
								"encoding": "dynamic_array",
								"label": "struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20MintableBurnable)365": {
								"encoding": "inplace",
								"label": "contract IERC20MintableBurnable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(ConversionRecord)411_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DualERC1155ERC20Converter.ConversionRecord[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(ConversionRecord)411_storage)dyn_storage"
							},
							"t_mapping(t_address,t_array(t_struct(ConversionRecordERC20ToERC1155)434_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(ConversionRecordERC20ToERC1155)434_storage)dyn_storage"
							},
							"t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(uint256 => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_uint256,t_bool)"
							},
							"t_mapping(t_uint256,t_bool)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_struct(ConversionRecord)411_storage": {
								"encoding": "inplace",
								"label": "struct DualERC1155ERC20Converter.ConversionRecord",
								"members": [
									{
										"astId": 404,
										"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
										"label": "erc1155TokenId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 406,
										"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
										"label": "erc1155Amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 408,
										"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
										"label": "erc20Amount",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 410,
										"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
										"label": "timestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(ConversionRecordERC20ToERC1155)434_storage": {
								"encoding": "inplace",
								"label": "struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155",
								"members": [
									{
										"astId": 425,
										"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 427,
										"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
										"label": "erc1155Contract",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 429,
										"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
										"label": "tokenId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 431,
										"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
										"label": "amount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 433,
										"contract": "DualERC1155ERC20Converter.sol:DualERC1155ERC20Converter",
										"label": "timestamp",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"ConversionPerformed(address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted when a conversion is performed."
							}
						},
						"kind": "user",
						"methods": {
							"addAllowedERC1155Forward(address,uint256)": {
								"notice": "Adds an allowed ERC1155 contract/token pair for forward conversion."
							},
							"addAllowedERC1155Reverse(address,uint256)": {
								"notice": "Adds an allowed ERC1155 contract/token pair for reverse conversion."
							},
							"allowedERC1155Forward(address,uint256)": {
								"notice": "Allowed ERC1155 contract/token pairs for forward conversion (ERC1155 -> ERC20). When an ERC1155 token is sent to this contract, the sender receives ERC20 tokens if allowedERC1155Forward[erc1155Contract][tokenId] is true."
							},
							"allowedERC1155Reverse(address,uint256)": {
								"notice": "Allowed ERC1155 contract/token pairs for reverse conversion (ERC20 -> ERC1155). When converting ERC20 tokens, the specified ERC1155 contract/token pair must be allowed."
							},
							"constructor": {
								"notice": "Constructor that passes msg.sender to Ownable."
							},
							"conversionHistory(uint256)": {
								"notice": "Global array of all conversion records."
							},
							"conversionRecordsBySender(address,uint256)": {
								"notice": "Mapping from a sender address to an array of conversion records."
							},
							"conversionRecordsERC20ToERC1155ByUser(address,uint256)": {
								"notice": "Mapping from a user address to an array of their reverse conversion records."
							},
							"convertToERC1155(address,uint256,uint256)": {
								"notice": "Converts ERC20 tokens into ERC1155 tokens. Transfers ERC20 tokens from the user, burns them, and then mints ERC1155 tokens on the specified contract."
							},
							"erc20ToErc1155History(uint256)": {
								"notice": "Global array of reverse conversion records."
							},
							"erc20Token()": {
								"notice": "The ERC20 token used in conversion."
							},
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"notice": "Called when multiple ERC1155 token types are transferred in a batch. Requirements: - The caller (operator) must equal the token owner (`from`). - Each ERC1155 contract (msg.sender) and token id must be allowed."
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"notice": "Called when a single ERC1155 token type is transferred to this contract. Requirements: - The caller (operator) must equal the token owner (`from`). - The ERC1155 contract (msg.sender) and token id must be allowed for forward conversion."
							},
							"removeAllowedERC1155Forward(address,uint256)": {
								"notice": "Removes an allowed ERC1155 contract/token pair for forward conversion."
							},
							"removeAllowedERC1155Reverse(address,uint256)": {
								"notice": "Removes an allowed ERC1155 contract/token pair for reverse conversion."
							},
							"setERC20Token(address)": {
								"notice": "Sets (or updates) the ERC20 token contract address."
							}
						},
						"notice": "This contract supports two conversion directions:         1. Forward conversion (ERC1155 -> ERC20): when the contract receives ERC1155 tokens,            it mints ERC20 tokens (1:1 ratio) to the sender if the pair is allowed.         2. Reverse conversion (ERC20 -> ERC1155): a user can convert ERC20 tokens into ERC1155 tokens            by calling a function. The contract transfers and burns the ERC20 tokens and then            calls mint on an allowed ERC1155 contract.         Allowed ERC1155 token pairs (contract address and token ID) are configured separately         for forward and reverse conversions. The ERC20 token is set via an admin function.",
						"version": 1
					}
				},
				"IERC1155Minter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"mint(address,uint256,uint256,bytes)": "731133e9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Minimal interface for an ERC1155 token that supports minting.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"DualERC1155ERC20Converter.sol\":\"IERC1155Minter\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xe103e95f854ef0cd1bba5f469175f67cd332f5c2561941f165e3dd65cee94d6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf8cc5d07cf8003255f9d766fe8188b9f6e33b6240e126a605f0d061566b23e\",\"dweb:/ipfs/Qmd7okDCSoUt1L4G9hmb5c4W8kWUnfpAa2jyBKUp4xKErd\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"DualERC1155ERC20Converter.sol\":{\"keccak256\":\"0x530758e97fe30006ef19d4f386884a58281f3e60db86e85689d3aef13514fe0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbe1d7dfb565d90ce5c0a25f3f580eef369beca6873d27f13ca061615a8fbd6c\",\"dweb:/ipfs/QmeBRE8fKuhTH3tGR4WfpJcyNsLLnor2qzuCarrgNWcXxa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Minimal interface for an ERC1155 token that supports minting.",
						"version": 1
					}
				},
				"IERC20MintableBurnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(uint256)": "42966c68",
							"mint(address,uint256)": "40c10f19",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Minimal interface for an ERC20 token that supports minting, transferFrom, and burning.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"DualERC1155ERC20Converter.sol\":\"IERC20MintableBurnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\":{\"keccak256\":\"0xe103e95f854ef0cd1bba5f469175f67cd332f5c2561941f165e3dd65cee94d6d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cf8cc5d07cf8003255f9d766fe8188b9f6e33b6240e126a605f0d061566b23e\",\"dweb:/ipfs/Qmd7okDCSoUt1L4G9hmb5c4W8kWUnfpAa2jyBKUp4xKErd\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"DualERC1155ERC20Converter.sol\":{\"keccak256\":\"0x530758e97fe30006ef19d4f386884a58281f3e60db86e85689d3aef13514fe0d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbe1d7dfb565d90ce5c0a25f3f580eef369beca6873d27f13ca061615a8fbd6c\",\"dweb:/ipfs/QmeBRE8fKuhTH3tGR4WfpJcyNsLLnor2qzuCarrgNWcXxa\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Minimal interface for an ERC20 token that supports minting, transferFrom, and burning.",
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> DualERC1155ERC20Converter.sol:176:9:\n    |\n176 |         bytes memory data\n    |         ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 7959,
					"file": "DualERC1155ERC20Converter.sol",
					"start": 7942
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> DualERC1155ERC20Converter.sol:233:9:\n    |\n233 |         bytes memory data\n    |         ^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 10298,
					"file": "DualERC1155ERC20Converter.sol",
					"start": 10281
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							300
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 301,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 300,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 300,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								300
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 282,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 282,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
					"exportedSymbols": {
						"IERC1155Receiver": [
							189
						],
						"IERC165": [
							336
						]
					},
					"id": 190,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "118:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 190,
							"sourceUnit": 337,
							"src": "144:62:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 336,
										"src": "152:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 153,
										"name": "IERC165",
										"nameLocations": [
											"357:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 336,
										"src": "357:7:1"
									},
									"id": 154,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:1"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 152,
								"nodeType": "StructuredDocumentation",
								"src": "208:118:1",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 189,
							"linearizedBaseContracts": [
								189,
								336
							],
							"name": "IERC1155Receiver",
							"nameLocation": "337:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "371:827:1",
										"text": " @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "1212:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1247:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1239:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1239:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1273:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1265:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1265:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1295:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1287:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1315:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1307:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1307:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1345:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1330:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1330:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1229:126:1"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1374:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 167,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1374:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1373:8:1"
									},
									"scope": 189,
									"src": "1203:179:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 171,
										"nodeType": "StructuredDocumentation",
										"src": "1388:995:1",
										"text": " @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "2397:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2437:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2429:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2463:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2455:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2455:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2496:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2477:22:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 176,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2477:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 177,
													"nodeType": "ArrayTypeName",
													"src": "2477:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "2528:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2509:25:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 179,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2509:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 180,
													"nodeType": "ArrayTypeName",
													"src": "2509:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2559:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2544:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 182,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2544:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2419:150:1"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2588:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 185,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2588:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2587:8:1"
									},
									"scope": 189,
									"src": "2388:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 190,
							"src": "327:2271:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "118:2481:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
					"exportedSymbols": {
						"ERC1155Holder": [
							270
						],
						"ERC165": [
							324
						],
						"IERC1155Receiver": [
							189
						],
						"IERC165": [
							336
						]
					},
					"id": 271,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 191,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "121:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../../utils/introspection/ERC165.sol",
							"id": 194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 271,
							"sourceUnit": 325,
							"src": "147:72:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 192,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 336,
										"src": "155:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 193,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 324,
										"src": "164:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol",
							"file": "../IERC1155Receiver.sol",
							"id": 196,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 271,
							"sourceUnit": 190,
							"src": "220:57:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 195,
										"name": "IERC1155Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "228:16:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 198,
										"name": "ERC165",
										"nameLocations": [
											"558:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 324,
										"src": "558:6:2"
									},
									"id": 199,
									"nodeType": "InheritanceSpecifier",
									"src": "558:6:2"
								},
								{
									"baseName": {
										"id": 200,
										"name": "IERC1155Receiver",
										"nameLocations": [
											"566:16:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "566:16:2"
									},
									"id": 201,
									"nodeType": "InheritanceSpecifier",
									"src": "566:16:2"
								}
							],
							"canonicalName": "ERC1155Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "279:243:2",
								"text": " @dev Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC-1155 tokens.\n IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n stuck."
							},
							"fullyImplemented": true,
							"id": 270,
							"linearizedBaseContracts": [
								270,
								189,
								324,
								336
							],
							"name": "ERC1155Holder",
							"nameLocation": "541:13:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										323,
										335
									],
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "758:113:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 212,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "775:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 214,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 189,
																		"src": "795:16:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$189_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$189_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 213,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "790:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "790:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$189",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "813:11:2",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "790:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "775:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 220,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "852:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 218,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "828:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Holder_$270_$",
																	"typeString": "type(contract super ERC1155Holder)"
																}
															},
															"id": 219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "834:17:2",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 323,
															"src": "828:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "828:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "775:89:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 211,
												"id": 223,
												"nodeType": "Return",
												"src": "768:96:2"
											}
										]
									},
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "589:56:2",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "659:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 208,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 206,
												"name": "ERC165",
												"nameLocations": [
													"726:6:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 324,
												"src": "726:6:2"
											},
											{
												"id": 207,
												"name": "IERC165",
												"nameLocations": [
													"734:7:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 336,
												"src": "734:7:2"
											}
										],
										"src": "717:25:2"
									},
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "684:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "677:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 203,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "677:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:20:2"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "752:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "752:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "751:6:2"
									},
									"scope": 270,
									"src": "650:221:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										170
									],
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "1041:55:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 241,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1058:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$270",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1063:17:2",
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 246,
														"src": "1058:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1081:8:2",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "1058:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 240,
												"id": 244,
												"nodeType": "Return",
												"src": "1051:38:2"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "886:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 237,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1015:8:2"
									},
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "913:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "913:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "930:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "947:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "964:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "964:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "981:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "981:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "903:96:2"
									},
									"returnParameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1033:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 238,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1033:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1032:8:2"
									},
									"scope": 270,
									"src": "877:219:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										188
									],
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "1289:60:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 264,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1306:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$270",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1311:22:2",
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 269,
														"src": "1306:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "1334:8:2",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "1306:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 263,
												"id": 267,
												"nodeType": "Return",
												"src": "1299:43:2"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "1111:22:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 260,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1263:8:2"
									},
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1143:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1143:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1160:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1160:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1177:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 251,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1177:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 252,
													"nodeType": "ArrayTypeName",
													"src": "1177:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1203:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 254,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1203:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 255,
													"nodeType": "ArrayTypeName",
													"src": "1203:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1229:12:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 257,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1229:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:114:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1281:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 261,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1281:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1280:8:2"
									},
									"scope": 270,
									"src": "1102:247:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 271,
							"src": "523:828:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "121:1231:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							300
						]
					},
					"id": 301,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 272,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 273,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 300,
							"linearizedBaseContracts": [
								300
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 278,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 277,
												"id": 280,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 300,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 290,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 287,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 286,
												"id": 289,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 291,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 300,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 295,
												"id": 297,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 300,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 301,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							324
						],
						"IERC165": [
							336
						]
					},
					"id": 325,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 302,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 304,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 325,
							"sourceUnit": 337,
							"src": "140:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 303,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 336,
										"src": "148:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 306,
										"name": "IERC165",
										"nameLocations": [
											"688:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 336,
										"src": "688:7:4"
									},
									"id": 307,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:4"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:4",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 324,
							"linearizedBaseContracts": [
								324,
								336
							],
							"name": "ERC165",
							"nameLocation": "678:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										335
									],
									"body": {
										"id": 322,
										"nodeType": "Block",
										"src": "845:64:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 315,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "862:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 317,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "882:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$336_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$336_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 316,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "877:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$336",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "891:11:4",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "877:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "862:40:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 314,
												"id": 321,
												"nodeType": "Return",
												"src": "855:47:4"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "702:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "772:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "797:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "790:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 309,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "790:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:20:4"
									},
									"returnParameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "839:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 312,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "839:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "838:6:4"
									},
									"scope": 324,
									"src": "763:146:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 325,
							"src": "660:251:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:798:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							336
						]
					},
					"id": 337,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 326,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 327,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:5",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 336,
							"linearizedBaseContracts": [
								336
							],
							"name": "IERC165",
							"nameLocation": "432:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "818:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 329,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:5"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "861:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 332,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:5"
									},
									"scope": 336,
									"src": "791:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 337,
							"src": "422:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:5"
				},
				"id": 5
			},
			"DualERC1155ERC20Converter.sol": {
				"ast": {
					"absolutePath": "DualERC1155ERC20Converter.sol",
					"exportedSymbols": {
						"Context": [
							300
						],
						"DualERC1155ERC20Converter": [
							1033
						],
						"ERC1155Holder": [
							270
						],
						"ERC165": [
							324
						],
						"IERC1155Minter": [
							378
						],
						"IERC1155Receiver": [
							189
						],
						"IERC165": [
							336
						],
						"IERC20MintableBurnable": [
							365
						],
						"Ownable": [
							147
						]
					},
					"id": 1034,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 338,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".22"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 339,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1034,
							"sourceUnit": 148,
							"src": "58:52:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"file": "@openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol",
							"id": 340,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1034,
							"sourceUnit": 271,
							"src": "111:71:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20MintableBurnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 341,
								"nodeType": "StructuredDocumentation",
								"src": "184:99:6",
								"text": "@notice Minimal interface for an ERC20 token that supports minting, transferFrom, and burning."
							},
							"fullyImplemented": false,
							"id": 365,
							"linearizedBaseContracts": [
								365
							],
							"name": "IERC20MintableBurnable",
							"nameLocation": "293:22:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "331:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "344:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "336:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "356:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "348:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "335:28:6"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "372:0:6"
									},
									"scope": 365,
									"src": "322:51:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "387:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "408:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "400:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "400:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "422:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "414:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "434:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "426:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "399:42:6"
									},
									"returnParameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 359,
												"src": "460:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 356,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "460:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:6:6"
									},
									"scope": 365,
									"src": "378:88:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 364,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "480:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "493:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "485:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "484:16:6"
									},
									"returnParameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "509:0:6"
									},
									"scope": 365,
									"src": "471:39:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1034,
							"src": "283:229:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Minter",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 366,
								"nodeType": "StructuredDocumentation",
								"src": "514:74:6",
								"text": "@notice Minimal interface for an ERC1155 token that supports minting."
							},
							"fullyImplemented": false,
							"id": 378,
							"linearizedBaseContracts": [
								378
							],
							"name": "IERC1155Minter",
							"nameLocation": "598:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "731133e9",
									"id": 377,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "628:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "641:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "633:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "633:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "653:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "645:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "665:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "657:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "686:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "673:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 373,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "632:59:6"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "700:0:6"
									},
									"scope": 378,
									"src": "619:82:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1034,
							"src": "588:115:6",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 380,
										"name": "Ownable",
										"nameLocations": [
											"1480:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1480:7:6"
									},
									"id": 381,
									"nodeType": "InheritanceSpecifier",
									"src": "1480:7:6"
								},
								{
									"baseName": {
										"id": 382,
										"name": "ERC1155Holder",
										"nameLocations": [
											"1489:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 270,
										"src": "1489:13:6"
									},
									"id": 383,
									"nodeType": "InheritanceSpecifier",
									"src": "1489:13:6"
								}
							],
							"canonicalName": "DualERC1155ERC20Converter",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 379,
								"nodeType": "StructuredDocumentation",
								"src": "705:737:6",
								"text": "@title DualERC1155ERC20Converter\n @notice This contract supports two conversion directions:\n         1. Forward conversion (ERC1155 -> ERC20): when the contract receives ERC1155 tokens,\n            it mints ERC20 tokens (1:1 ratio) to the sender if the pair is allowed.\n         2. Reverse conversion (ERC20 -> ERC1155): a user can convert ERC20 tokens into ERC1155 tokens\n            by calling a function. The contract transfers and burns the ERC20 tokens and then\n            calls mint on an allowed ERC1155 contract.\n         Allowed ERC1155 token pairs (contract address and token ID) are configured separately\n         for forward and reverse conversions. The ERC20 token is set via an admin function."
							},
							"fullyImplemented": true,
							"id": 1033,
							"linearizedBaseContracts": [
								1033,
								270,
								189,
								324,
								336,
								147,
								300
							],
							"name": "DualERC1155ERC20Converter",
							"nameLocation": "1451:25:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "1509:47:6",
										"text": "@notice The ERC20 token used in conversion."
									},
									"functionSelector": "8a13eea7",
									"id": 387,
									"mutability": "mutable",
									"name": "erc20Token",
									"nameLocation": "1591:10:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "1561:40:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
										"typeString": "contract IERC20MintableBurnable"
									},
									"typeName": {
										"id": 386,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 385,
											"name": "IERC20MintableBurnable",
											"nameLocations": [
												"1561:22:6"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 365,
											"src": "1561:22:6"
										},
										"referencedDeclaration": 365,
										"src": "1561:22:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
											"typeString": "contract IERC20MintableBurnable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1640:248:6",
										"text": "@notice Allowed ERC1155 contract/token pairs for forward conversion (ERC1155 -> ERC20).\n When an ERC1155 token is sent to this contract, the sender receives ERC20 tokens if\n allowedERC1155Forward[erc1155Contract][tokenId] is true."
									},
									"functionSelector": "58be702f",
									"id": 394,
									"mutability": "mutable",
									"name": "allowedERC1155Forward",
									"nameLocation": "1945:21:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "1893:73:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 393,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 389,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1901:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1893:44:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 392,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 390,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1920:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "1912:24:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 391,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1931:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "1973:188:6",
										"text": "@notice Allowed ERC1155 contract/token pairs for reverse conversion (ERC20 -> ERC1155).\n When converting ERC20 tokens, the specified ERC1155 contract/token pair must be allowed."
									},
									"functionSelector": "0fcd1e84",
									"id": 401,
									"mutability": "mutable",
									"name": "allowedERC1155Reverse",
									"nameLocation": "2218:21:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "2166:73:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(uint256 => bool))"
									},
									"typeName": {
										"id": 400,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 396,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2174:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2166:44:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(uint256 => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 399,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 397,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2193:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"nodeType": "Mapping",
											"src": "2185:24:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
												"typeString": "mapping(uint256 => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 398,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2204:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "DualERC1155ERC20Converter.ConversionRecord",
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "2246:59:6",
										"text": "@notice Structure that records details of a conversion."
									},
									"id": 411,
									"members": [
										{
											"constant": false,
											"id": 404,
											"mutability": "mutable",
											"name": "erc1155TokenId",
											"nameLocation": "2352:14:6",
											"nodeType": "VariableDeclaration",
											"scope": 411,
											"src": "2344:22:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 403,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2344:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 406,
											"mutability": "mutable",
											"name": "erc1155Amount",
											"nameLocation": "2427:13:6",
											"nodeType": "VariableDeclaration",
											"scope": 411,
											"src": "2419:21:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 405,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2419:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 408,
											"mutability": "mutable",
											"name": "erc20Amount",
											"nameLocation": "2501:11:6",
											"nodeType": "VariableDeclaration",
											"scope": 411,
											"src": "2493:19:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 407,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2493:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 410,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "2571:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 411,
											"src": "2563:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 409,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2563:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ConversionRecord",
									"nameLocation": "2317:16:6",
									"nodeType": "StructDefinition",
									"scope": 1033,
									"src": "2310:319:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "2635:76:6",
										"text": "@notice Mapping from a sender address to an array of conversion records."
									},
									"functionSelector": "fce3fb2f",
									"id": 418,
									"mutability": "mutable",
									"name": "conversionRecordsBySender",
									"nameLocation": "2762:25:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "2716:71:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ConversionRecord_$411_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct DualERC1155ERC20Converter.ConversionRecord[])"
									},
									"typeName": {
										"id": 417,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 413,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2724:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2716:38:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ConversionRecord_$411_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct DualERC1155ERC20Converter.ConversionRecord[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 415,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 414,
													"name": "ConversionRecord",
													"nameLocations": [
														"2735:16:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 411,
													"src": "2735:16:6"
												},
												"referencedDeclaration": 411,
												"src": "2735:16:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ConversionRecord_$411_storage_ptr",
													"typeString": "struct DualERC1155ERC20Converter.ConversionRecord"
												}
											},
											"id": 416,
											"nodeType": "ArrayTypeName",
											"src": "2735:18:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_ConversionRecord_$411_storage_$dyn_storage_ptr",
												"typeString": "struct DualERC1155ERC20Converter.ConversionRecord[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 419,
										"nodeType": "StructuredDocumentation",
										"src": "2793:51:6",
										"text": "@notice Global array of all conversion records."
									},
									"functionSelector": "453a1e75",
									"id": 423,
									"mutability": "mutable",
									"name": "conversionHistory",
									"nameLocation": "2875:17:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "2849:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_ConversionRecord_$411_storage_$dyn_storage",
										"typeString": "struct DualERC1155ERC20Converter.ConversionRecord[]"
									},
									"typeName": {
										"baseType": {
											"id": 421,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 420,
												"name": "ConversionRecord",
												"nameLocations": [
													"2849:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 411,
												"src": "2849:16:6"
											},
											"referencedDeclaration": 411,
											"src": "2849:16:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ConversionRecord_$411_storage_ptr",
												"typeString": "struct DualERC1155ERC20Converter.ConversionRecord"
											}
										},
										"id": 422,
										"nodeType": "ArrayTypeName",
										"src": "2849:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_ConversionRecord_$411_storage_$dyn_storage_ptr",
											"typeString": "struct DualERC1155ERC20Converter.ConversionRecord[]"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155",
									"id": 434,
									"members": [
										{
											"constant": false,
											"id": 425,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "3012:4:6",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "3004:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 424,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3004:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 427,
											"mutability": "mutable",
											"name": "erc1155Contract",
											"nameLocation": "3034:15:6",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "3026:23:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 426,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3026:7:6",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 429,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "3067:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "3059:15:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 428,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3059:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 431,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3092:6:6",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "3084:14:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 430,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3084:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 433,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "3116:9:6",
											"nodeType": "VariableDeclaration",
											"scope": 434,
											"src": "3108:17:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 432,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "3108:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ConversionRecordERC20ToERC1155",
									"nameLocation": "2963:30:6",
									"nodeType": "StructDefinition",
									"scope": 1033,
									"src": "2956:176:6",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 435,
										"nodeType": "StructuredDocumentation",
										"src": "3142:55:6",
										"text": "@notice Global array of reverse conversion records."
									},
									"functionSelector": "15614d5d",
									"id": 439,
									"mutability": "mutable",
									"name": "erc20ToErc1155History",
									"nameLocation": "3242:21:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "3202:61:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_ConversionRecordERC20ToERC1155_$434_storage_$dyn_storage",
										"typeString": "struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155[]"
									},
									"typeName": {
										"baseType": {
											"id": 437,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 436,
												"name": "ConversionRecordERC20ToERC1155",
												"nameLocations": [
													"3202:30:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 434,
												"src": "3202:30:6"
											},
											"referencedDeclaration": 434,
											"src": "3202:30:6",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ConversionRecordERC20ToERC1155_$434_storage_ptr",
												"typeString": "struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155"
											}
										},
										"id": 438,
										"nodeType": "ArrayTypeName",
										"src": "3202:32:6",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_ConversionRecordERC20ToERC1155_$434_storage_$dyn_storage_ptr",
											"typeString": "struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "3274:88:6",
										"text": "@notice Mapping from a user address to an array of their reverse conversion records."
									},
									"functionSelector": "b1fd0a42",
									"id": 446,
									"mutability": "mutable",
									"name": "conversionRecordsERC20ToERC1155ByUser",
									"nameLocation": "3427:37:6",
									"nodeType": "VariableDeclaration",
									"scope": 1033,
									"src": "3367:97:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ConversionRecordERC20ToERC1155_$434_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155[])"
									},
									"typeName": {
										"id": 445,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 441,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "3375:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "3367:52:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ConversionRecordERC20ToERC1155_$434_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 443,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 442,
													"name": "ConversionRecordERC20ToERC1155",
													"nameLocations": [
														"3386:30:6"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 434,
													"src": "3386:30:6"
												},
												"referencedDeclaration": 434,
												"src": "3386:30:6",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ConversionRecordERC20ToERC1155_$434_storage_ptr",
													"typeString": "struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155"
												}
											},
											"id": 444,
											"nodeType": "ArrayTypeName",
											"src": "3386:32:6",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_ConversionRecordERC20ToERC1155_$434_storage_$dyn_storage_ptr",
												"typeString": "struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "3476:51:6",
										"text": "@notice Emitted when a conversion is performed."
									},
									"eventSelector": "8207f4cc66476fc751f9fa47f50e7bdf31b03fad34f997e73ef4a8c554992647",
									"id": 459,
									"name": "ConversionPerformed",
									"nameLocation": "3538:19:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3583:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3567:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"indexed": true,
												"mutability": "mutable",
												"name": "erc1155TokenId",
												"nameLocation": "3615:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3599:30:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3599:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": false,
												"mutability": "mutable",
												"name": "erc1155Amount",
												"nameLocation": "3647:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3639:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3639:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"indexed": false,
												"mutability": "mutable",
												"name": "erc20Amount",
												"nameLocation": "3678:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3670:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3670:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "3707:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "3699:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3699:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3557:165:6"
									},
									"src": "3532:191:6"
								},
								{
									"anonymous": false,
									"eventSelector": "3225966cbaae2904ba12a4821319a2efec8fe5313e9e3376037823b52ab32cf1",
									"id": 465,
									"name": "ERC20TokenUpdated",
									"nameLocation": "3756:17:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousERC20",
												"nameLocation": "3790:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "3774:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"indexed": true,
												"mutability": "mutable",
												"name": "newERC20",
												"nameLocation": "3821:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "3805:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:57:6"
									},
									"src": "3750:81:6"
								},
								{
									"anonymous": false,
									"eventSelector": "25a602cd77d0dcd2d9a9271c81530ca6b2befdc1b20ff547cdb34bd1093804b3",
									"id": 471,
									"name": "AllowedERC1155ForwardAdded",
									"nameLocation": "3842:26:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"indexed": true,
												"mutability": "mutable",
												"name": "erc1155Contract",
												"nameLocation": "3885:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3869:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3869:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3918:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3902:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3868:58:6"
									},
									"src": "3836:91:6"
								},
								{
									"anonymous": false,
									"eventSelector": "7cdf80461ab5065b7b1c6ae92ce85d5d3fd752930ff8c76a2c5f0288648e5b23",
									"id": 477,
									"name": "AllowedERC1155ForwardRemoved",
									"nameLocation": "3938:28:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"indexed": true,
												"mutability": "mutable",
												"name": "erc1155Contract",
												"nameLocation": "3983:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3967:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3967:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4016:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "4000:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4000:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3966:58:6"
									},
									"src": "3932:93:6"
								},
								{
									"anonymous": false,
									"eventSelector": "7a7a4e4c606c134c123ed1f1b82ad01ac98f1262f47e4768a5f0f588da717e8f",
									"id": 483,
									"name": "AllowedERC1155ReverseAdded",
									"nameLocation": "4036:26:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"indexed": true,
												"mutability": "mutable",
												"name": "erc1155Contract",
												"nameLocation": "4079:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "4063:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4063:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4112:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "4096:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4096:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4062:58:6"
									},
									"src": "4030:91:6"
								},
								{
									"anonymous": false,
									"eventSelector": "df3a4de361f566c7b82e2670c9f25deb777b8a9c5c03e949b07f8932f7cbed3e",
									"id": 489,
									"name": "AllowedERC1155ReverseRemoved",
									"nameLocation": "4132:28:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"indexed": true,
												"mutability": "mutable",
												"name": "erc1155Contract",
												"nameLocation": "4177:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4161:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4161:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4210:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4194:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4194:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4160:58:6"
									},
									"src": "4126:93:6"
								},
								{
									"anonymous": false,
									"eventSelector": "40ba10935627ab450dd36afe32f52afa35f94d71a0c577e5b5b655d05ff6d0ef",
									"id": 501,
									"name": "ERC1155ToERC20Conversion",
									"nameLocation": "4230:24:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4280:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4264:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4264:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"indexed": true,
												"mutability": "mutable",
												"name": "erc1155Contract",
												"nameLocation": "4312:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4296:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4353:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4337:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4337:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4378:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4370:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4370:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4402:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "4394:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4394:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4254:163:6"
									},
									"src": "4224:194:6"
								},
								{
									"anonymous": false,
									"eventSelector": "1ca57d76d7b91ecc6a90677f1b8eb7d995f934eda6364134e6021dbba757241e",
									"id": 513,
									"name": "ERC20ToERC1155Conversion",
									"nameLocation": "4429:24:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4479:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "4463:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4463:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"indexed": true,
												"mutability": "mutable",
												"name": "erc1155Contract",
												"nameLocation": "4509:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "4493:31:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4493:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4550:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "4534:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4534:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4575:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "4567:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4567:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "4599:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "4591:17:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4591:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4453:161:6"
									},
									"src": "4423:192:6"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "4733:2:6",
										"statements": []
									},
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "4621:73:6",
										"text": " @notice Constructor that passes msg.sender to Ownable."
									},
									"id": 522,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 517,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4721:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4725:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4721:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 519,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 516,
												"name": "Ownable",
												"nameLocations": [
													"4713:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "4713:7:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4713:19:6"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4710:2:6"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4733:0:6"
									},
									"scope": 1033,
									"src": "4699:36:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 564,
										"nodeType": "Block",
										"src": "4986:274:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 542,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 536,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 531,
																	"name": "_erc20Token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 525,
																	"src": "5004:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 534,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5027:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5019:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 532,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5019:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 535,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5019:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5004:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 537,
																			"name": "_erc20Token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 525,
																			"src": "5033:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5045:4:6",
																		"memberName": "code",
																		"nodeType": "MemberAccess",
																		"src": "5033:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5050:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5033:23:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5059:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5033:27:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5004:56:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420455243323020746f6b656e2061646472657373",
															"id": 543,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5062:29:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ff8d7d3c8e5d5b3e00927ee71ae0a0948bfd5868c97a0626d24744807cda4270",
																"typeString": "literal_string \"Invalid ERC20 token address\""
															},
															"value": "Invalid ERC20 token address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ff8d7d3c8e5d5b3e00927ee71ae0a0948bfd5868c97a0626d24744807cda4270",
																"typeString": "literal_string \"Invalid ERC20 token address\""
															}
														],
														"id": 530,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4996:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4996:96:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 545,
												"nodeType": "ExpressionStatement",
												"src": "4996:96:6"
											},
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "previous",
														"nameLocation": "5110:8:6",
														"nodeType": "VariableDeclaration",
														"scope": 564,
														"src": "5102:16:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 546,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5102:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 552,
												"initialValue": {
													"arguments": [
														{
															"id": 550,
															"name": "erc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "5129:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
																"typeString": "contract IERC20MintableBurnable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
																"typeString": "contract IERC20MintableBurnable"
															}
														],
														"id": 549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5121:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 548,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5121:7:6",
															"typeDescriptions": {}
														}
													},
													"id": 551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5121:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5102:38:6"
											},
											{
												"expression": {
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 553,
														"name": "erc20Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "5150:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
															"typeString": "contract IERC20MintableBurnable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 555,
																"name": "_erc20Token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 525,
																"src": "5186:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 554,
															"name": "IERC20MintableBurnable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 365,
															"src": "5163:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20MintableBurnable_$365_$",
																"typeString": "type(contract IERC20MintableBurnable)"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5163:35:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
															"typeString": "contract IERC20MintableBurnable"
														}
													},
													"src": "5150:48:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
														"typeString": "contract IERC20MintableBurnable"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "5150:48:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 560,
															"name": "previous",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "5231:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "_erc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "5241:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 559,
														"name": "ERC20TokenUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "5213:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5213:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 563,
												"nodeType": "EmitStatement",
												"src": "5208:45:6"
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "4773:145:6",
										"text": " @notice Sets (or updates) the ERC20 token contract address.\n @param _erc20Token The address of the ERC20 token contract."
									},
									"functionSelector": "de562487",
									"id": 565,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 528,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 527,
												"name": "onlyOwner",
												"nameLocations": [
													"4976:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4976:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "4976:9:6"
										}
									],
									"name": "setERC20Token",
									"nameLocation": "4932:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "_erc20Token",
												"nameLocation": "4954:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 565,
												"src": "4946:19:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4946:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4945:21:6"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4986:0:6"
									},
									"scope": 1033,
									"src": "4923:337:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "5564:248:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 576,
																	"name": "erc1155Contract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "5582:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 579,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5609:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5601:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 577,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5601:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5601:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "5582:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 582,
																			"name": "erc1155Contract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 568,
																			"src": "5615:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5631:4:6",
																		"memberName": "code",
																		"nodeType": "MemberAccess",
																		"src": "5615:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5636:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5615:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5645:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5615:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5582:64:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420455243313135352061646472657373",
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5648:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f",
																"typeString": "literal_string \"Invalid ERC1155 address\""
															},
															"value": "Invalid ERC1155 address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f",
																"typeString": "literal_string \"Invalid ERC1155 address\""
															}
														],
														"id": 575,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5574:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5574:100:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 590,
												"nodeType": "ExpressionStatement",
												"src": "5574:100:6"
											},
											{
												"expression": {
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 591,
																"name": "allowedERC1155Forward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "5684:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 594,
															"indexExpression": {
																"id": 592,
																"name": "erc1155Contract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 568,
																"src": "5706:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5684:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 595,
														"indexExpression": {
															"id": 593,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "5723:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5684:47:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 596,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5734:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5684:54:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 598,
												"nodeType": "ExpressionStatement",
												"src": "5684:54:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "erc1155Contract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "5780:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 570,
															"src": "5797:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "AllowedERC1155ForwardAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "5753:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5753:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 603,
												"nodeType": "EmitStatement",
												"src": "5748:57:6"
											}
										]
									},
									"documentation": {
										"id": 566,
										"nodeType": "StructuredDocumentation",
										"src": "5266:198:6",
										"text": " @notice Adds an allowed ERC1155 contract/token pair for forward conversion.\n @param erc1155Contract The ERC1155 contract address.\n @param tokenId The ERC1155 token id."
									},
									"functionSelector": "9c3c4345",
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 573,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 572,
												"name": "onlyOwner",
												"nameLocations": [
													"5554:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5554:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "5554:9:6"
										}
									],
									"name": "addAllowedERC1155Forward",
									"nameLocation": "5478:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "erc1155Contract",
												"nameLocation": "5511:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5503:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5503:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5536:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "5528:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 569,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5528:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5502:42:6"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5564:0:6"
									},
									"scope": 1033,
									"src": "5469:343:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 628,
										"nodeType": "Block",
										"src": "6122:141:6",
										"statements": [
											{
												"expression": {
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 615,
																"name": "allowedERC1155Forward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 394,
																"src": "6132:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 618,
															"indexExpression": {
																"id": 616,
																"name": "erc1155Contract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 608,
																"src": "6154:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6132:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 619,
														"indexExpression": {
															"id": 617,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "6171:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6132:47:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6182:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6132:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "6132:55:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 624,
															"name": "erc1155Contract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 608,
															"src": "6231:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 625,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "6248:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 623,
														"name": "AllowedERC1155ForwardRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "6202:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6202:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "EmitStatement",
												"src": "6197:59:6"
											}
										]
									},
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "5818:201:6",
										"text": " @notice Removes an allowed ERC1155 contract/token pair for forward conversion.\n @param erc1155Contract The ERC1155 contract address.\n @param tokenId The ERC1155 token id."
									},
									"functionSelector": "c953e56e",
									"id": 629,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 613,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 612,
												"name": "onlyOwner",
												"nameLocations": [
													"6112:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6112:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6112:9:6"
										}
									],
									"name": "removeAllowedERC1155Forward",
									"nameLocation": "6033:27:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "erc1155Contract",
												"nameLocation": "6069:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6061:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6061:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6094:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "6086:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6060:42:6"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6122:0:6"
									},
									"scope": 1033,
									"src": "6024:239:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 668,
										"nodeType": "Block",
										"src": "6567:248:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 640,
																	"name": "erc1155Contract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "6585:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 643,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6612:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6604:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 641,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6604:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6604:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6585:29:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 646,
																			"name": "erc1155Contract",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 632,
																			"src": "6618:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6634:4:6",
																		"memberName": "code",
																		"nodeType": "MemberAccess",
																		"src": "6618:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6639:6:6",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6618:27:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6648:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6618:31:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6585:64:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420455243313135352061646472657373",
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6651:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f",
																"typeString": "literal_string \"Invalid ERC1155 address\""
															},
															"value": "Invalid ERC1155 address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_417be966982b9fa7a0f92e37ec8eef32f2442159c0d5bfad7defd304d23cc64f",
																"typeString": "literal_string \"Invalid ERC1155 address\""
															}
														],
														"id": 639,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6577:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6577:100:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 654,
												"nodeType": "ExpressionStatement",
												"src": "6577:100:6"
											},
											{
												"expression": {
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 655,
																"name": "allowedERC1155Reverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "6687:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 658,
															"indexExpression": {
																"id": 656,
																"name": "erc1155Contract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "6709:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6687:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 659,
														"indexExpression": {
															"id": 657,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "6726:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6687:47:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6737:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6687:54:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "6687:54:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 664,
															"name": "erc1155Contract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 632,
															"src": "6783:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 665,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 634,
															"src": "6800:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 663,
														"name": "AllowedERC1155ReverseAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "6756:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6756:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 667,
												"nodeType": "EmitStatement",
												"src": "6751:57:6"
											}
										]
									},
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "6269:198:6",
										"text": " @notice Adds an allowed ERC1155 contract/token pair for reverse conversion.\n @param erc1155Contract The ERC1155 contract address.\n @param tokenId The ERC1155 token id."
									},
									"functionSelector": "652ca87e",
									"id": 669,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 637,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 636,
												"name": "onlyOwner",
												"nameLocations": [
													"6557:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6557:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "6557:9:6"
										}
									],
									"name": "addAllowedERC1155Reverse",
									"nameLocation": "6481:24:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "erc1155Contract",
												"nameLocation": "6514:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "6506:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6506:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6539:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 669,
												"src": "6531:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6531:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6505:42:6"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6567:0:6"
									},
									"scope": 1033,
									"src": "6472:343:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 692,
										"nodeType": "Block",
										"src": "7125:141:6",
										"statements": [
											{
												"expression": {
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 679,
																"name": "allowedERC1155Reverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "7135:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(uint256 => bool))"
																}
															},
															"id": 682,
															"indexExpression": {
																"id": 680,
																"name": "erc1155Contract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "7157:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7135:38:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																"typeString": "mapping(uint256 => bool)"
															}
														},
														"id": 683,
														"indexExpression": {
															"id": 681,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7174:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7135:47:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7185:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "7135:55:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "7135:55:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 688,
															"name": "erc1155Contract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "7234:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 689,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 674,
															"src": "7251:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 687,
														"name": "AllowedERC1155ReverseRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "7205:28:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7205:54:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 691,
												"nodeType": "EmitStatement",
												"src": "7200:59:6"
											}
										]
									},
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "6821:201:6",
										"text": " @notice Removes an allowed ERC1155 contract/token pair for reverse conversion.\n @param erc1155Contract The ERC1155 contract address.\n @param tokenId The ERC1155 token id."
									},
									"functionSelector": "ea6a5b0e",
									"id": 693,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 677,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 676,
												"name": "onlyOwner",
												"nameLocations": [
													"7115:9:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "7115:9:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "7115:9:6"
										}
									],
									"name": "removeAllowedERC1155Reverse",
									"nameLocation": "7036:27:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "erc1155Contract",
												"nameLocation": "7072:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "7064:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7064:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7097:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 693,
												"src": "7089:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7063:42:6"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7125:0:6"
									},
									"scope": 1033,
									"src": "7027:239:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										246
									],
									"body": {
										"id": 750,
										"nodeType": "Block",
										"src": "7999:362:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 711,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 696,
																"src": "8017:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 712,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 698,
																"src": "8029:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8017:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792074686520746f6b656e206f776e65722063616e207472696767657220636f6e76657273696f6e",
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8035:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46",
																"typeString": "literal_string \"Only the token owner can trigger conversion\""
															},
															"value": "Only the token owner can trigger conversion"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46",
																"typeString": "literal_string \"Only the token owner can trigger conversion\""
															}
														],
														"id": 710,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8009:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 715,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8009:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 716,
												"nodeType": "ExpressionStatement",
												"src": "8009:72:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 718,
																	"name": "allowedERC1155Forward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "8099:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																		"typeString": "mapping(address => mapping(uint256 => bool))"
																	}
																},
																"id": 721,
																"indexExpression": {
																	"expression": {
																		"id": 719,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8121:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8125:6:6",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8121:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8099:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																	"typeString": "mapping(uint256 => bool)"
																}
															},
															"id": 723,
															"indexExpression": {
																"id": 722,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 700,
																"src": "8133:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8099:37:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433131353520746f6b656e206e6f7420616c6c6f77656420666f7220636f6e76657273696f6e",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8138:42:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_949e1d5c123b43c1e53a5b0a92a3be85e872ff6095aceb39ae946a881017b2a1",
																"typeString": "literal_string \"ERC1155 token not allowed for conversion\""
															},
															"value": "ERC1155 token not allowed for conversion"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_949e1d5c123b43c1e53a5b0a92a3be85e872ff6095aceb39ae946a881017b2a1",
																"typeString": "literal_string \"ERC1155 token not allowed for conversion\""
															}
														],
														"id": 717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8091:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8091:90:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "8091:90:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 730,
																		"name": "erc20Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "8207:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
																			"typeString": "contract IERC20MintableBurnable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
																			"typeString": "contract IERC20MintableBurnable"
																		}
																	],
																	"id": 729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8199:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 728,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8199:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8199:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8230:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8222:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 732,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8222:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 735,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8222:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8199:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243323020746f6b656e206e6f7420736574",
															"id": 737,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8234:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864",
																"typeString": "literal_string \"ERC20 token not set\""
															},
															"value": "ERC20 token not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864",
																"typeString": "literal_string \"ERC20 token not set\""
															}
														],
														"id": 727,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8191:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8191:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "8191:65:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 741,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 698,
															"src": "8290:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 742,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "8296:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 743,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "8300:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 740,
														"name": "_convertERC1155ToERC20",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 819,
														"src": "8267:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8267:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 745,
												"nodeType": "ExpressionStatement",
												"src": "8267:39:6"
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 746,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "8323:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_DualERC1155ERC20Converter_$1033",
																"typeString": "contract DualERC1155ERC20Converter"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8328:17:6",
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 751,
														"src": "8323:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 748,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "8346:8:6",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "8323:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 709,
												"id": 749,
												"nodeType": "Return",
												"src": "8316:38:6"
											}
										]
									},
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "7481:329:6",
										"text": " @notice Called when a single ERC1155 token type is transferred to this contract.\n Requirements:\n - The caller (operator) must equal the token owner (`from`).\n - The ERC1155 contract (msg.sender) and token id must be allowed for forward conversion.\n @return bytes4 indicating acceptance."
									},
									"functionSelector": "f23a6e61",
									"id": 751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "7824:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 706,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7973:8:6"
									},
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "7859:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "7851:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7851:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7885:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "7877:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7877:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "7907:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "7899:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7899:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7927:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "7919:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7919:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7955:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "7942:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 703,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7942:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7841:124:6"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "7991:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 707,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "7991:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7990:8:6"
									},
									"scope": 1033,
									"src": "7815:546:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "9060:755:6",
										"statements": [
											{
												"assignments": [
													762
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "erc20Amount",
														"nameLocation": "9137:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 818,
														"src": "9129:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 761,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9129:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 764,
												"initialValue": {
													"id": 763,
													"name": "erc1155Amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 758,
													"src": "9151:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9129:35:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 768,
																		"name": "erc20Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "9190:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
																			"typeString": "contract IERC20MintableBurnable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
																			"typeString": "contract IERC20MintableBurnable"
																		}
																	],
																	"id": 767,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9182:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 766,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9182:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9182:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 772,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9213:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9205:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 770,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9205:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9205:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9182:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243323020746f6b656e206e6f7420646566696e6564",
															"id": 775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9217:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_35d771638d1a130f886af59ec9ada5517bbcdb9238977046eee8481b852e0427",
																"typeString": "literal_string \"ERC20 token not defined\""
															},
															"value": "ERC20 token not defined"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_35d771638d1a130f886af59ec9ada5517bbcdb9238977046eee8481b852e0427",
																"typeString": "literal_string \"ERC20 token not defined\""
															}
														],
														"id": 765,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9174:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9174:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "ExpressionStatement",
												"src": "9174:69:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 781,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "9318:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "erc20Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "9326:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 778,
															"name": "erc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "9302:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
																"typeString": "contract IERC20MintableBurnable"
															}
														},
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9313:4:6",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 348,
														"src": "9302:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9302:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "9302:36:6"
											},
											{
												"assignments": [
													787
												],
												"declarations": [
													{
														"constant": false,
														"id": 787,
														"mutability": "mutable",
														"name": "record",
														"nameLocation": "9407:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 818,
														"src": "9383:30:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ConversionRecord_$411_memory_ptr",
															"typeString": "struct DualERC1155ERC20Converter.ConversionRecord"
														},
														"typeName": {
															"id": 786,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 785,
																"name": "ConversionRecord",
																"nameLocations": [
																	"9383:16:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 411,
																"src": "9383:16:6"
															},
															"referencedDeclaration": 411,
															"src": "9383:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConversionRecord_$411_storage_ptr",
																"typeString": "struct DualERC1155ERC20Converter.ConversionRecord"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 795,
												"initialValue": {
													"arguments": [
														{
															"id": 789,
															"name": "erc1155TokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "9463:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 790,
															"name": "erc1155Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "9506:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 791,
															"name": "erc20Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "9546:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 792,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9582:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9588:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9582:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 788,
														"name": "ConversionRecord",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "9416:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ConversionRecord_$411_storage_ptr_$",
															"typeString": "type(struct DualERC1155ERC20Converter.ConversionRecord storage pointer)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"9447:14:6",
														"9491:13:6",
														"9533:11:6",
														"9571:9:6"
													],
													"names": [
														"erc1155TokenId",
														"erc1155Amount",
														"erc20Amount",
														"timestamp"
													],
													"nodeType": "FunctionCall",
													"src": "9416:192:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ConversionRecord_$411_memory_ptr",
														"typeString": "struct DualERC1155ERC20Converter.ConversionRecord memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9383:225:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 799,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "9641:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConversionRecord_$411_memory_ptr",
																"typeString": "struct DualERC1155ERC20Converter.ConversionRecord memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ConversionRecord_$411_memory_ptr",
																"typeString": "struct DualERC1155ERC20Converter.ConversionRecord memory"
															}
														],
														"expression": {
															"id": 796,
															"name": "conversionHistory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "9618:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ConversionRecord_$411_storage_$dyn_storage",
																"typeString": "struct DualERC1155ERC20Converter.ConversionRecord storage ref[] storage ref"
															}
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9636:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "9618:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_ConversionRecord_$411_storage_$dyn_storage_ptr_$_t_struct$_ConversionRecord_$411_storage_$returns$__$attached_to$_t_array$_t_struct$_ConversionRecord_$411_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DualERC1155ERC20Converter.ConversionRecord storage ref[] storage pointer,struct DualERC1155ERC20Converter.ConversionRecord storage ref)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9618:30:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 801,
												"nodeType": "ExpressionStatement",
												"src": "9618:30:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 806,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "9697:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConversionRecord_$411_memory_ptr",
																"typeString": "struct DualERC1155ERC20Converter.ConversionRecord memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ConversionRecord_$411_memory_ptr",
																"typeString": "struct DualERC1155ERC20Converter.ConversionRecord memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 802,
																"name": "conversionRecordsBySender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 418,
																"src": "9658:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ConversionRecord_$411_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct DualERC1155ERC20Converter.ConversionRecord storage ref[] storage ref)"
																}
															},
															"id": 804,
															"indexExpression": {
																"id": 803,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 754,
																"src": "9684:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9658:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ConversionRecord_$411_storage_$dyn_storage",
																"typeString": "struct DualERC1155ERC20Converter.ConversionRecord storage ref[] storage ref"
															}
														},
														"id": 805,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9692:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "9658:38:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_ConversionRecord_$411_storage_$dyn_storage_ptr_$_t_struct$_ConversionRecord_$411_storage_$returns$__$attached_to$_t_array$_t_struct$_ConversionRecord_$411_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DualERC1155ERC20Converter.ConversionRecord storage ref[] storage pointer,struct DualERC1155ERC20Converter.ConversionRecord storage ref)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9658:46:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "9658:46:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 810,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "9740:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 811,
															"name": "erc1155TokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 756,
															"src": "9748:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 812,
															"name": "erc1155Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 758,
															"src": "9764:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 813,
															"name": "erc20Amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 762,
															"src": "9779:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 814,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "9792:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9798:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "9792:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 809,
														"name": "ConversionPerformed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "9720:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256,uint256)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9720:88:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "EmitStatement",
												"src": "9715:93:6"
											}
										]
									},
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "8371:550:6",
										"text": " @notice Internal function that performs the conversion.\n It verifies that the total converted by the sender (for this token ID) does not exceed\n the sender's original balance. The sender's original balance is derived as the current balance\n in the ERC1155 token contract plus the transferred amount.\n @param sender The address of the original ERC1155 token holder.\n @param erc1155TokenId The ERC1155 token ID that was received.\n @param erc1155Amount The amount of ERC1155 tokens received."
									},
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_convertERC1155ToERC20",
									"nameLocation": "8935:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "8975:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "8967:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8967:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "erc1155TokenId",
												"nameLocation": "8999:14:6",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "8991:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8991:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "erc1155Amount",
												"nameLocation": "9031:13:6",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "9023:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9023:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8957:93:6"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9060:0:6"
									},
									"scope": 1033,
									"src": "8926:889:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										269
									],
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "10338:623:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 839,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "10356:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 840,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "10368:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10356:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c792074686520746f6b656e206f776e65722063616e207472696767657220636f6e76657273696f6e",
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10374:45:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46",
																"typeString": "literal_string \"Only the token owner can trigger conversion\""
															},
															"value": "Only the token owner can trigger conversion"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_507d99da79b7c32db63d94c83ca9d6f9171df6ad09064355f3000850704a6a46",
																"typeString": "literal_string \"Only the token owner can trigger conversion\""
															}
														],
														"id": 838,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10348:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10348:72:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 844,
												"nodeType": "ExpressionStatement",
												"src": "10348:72:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 846,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "10438:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 847,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10442:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10438:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 848,
																	"name": "values",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "10452:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10459:6:6",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10452:13:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10438:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "49447320616e642076616c756573206c656e677468206d69736d61746368",
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10467:32:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_84631b1411dfd30314397a1487d6a580e00f82562cae361125f25c598b227a6d",
																"typeString": "literal_string \"IDs and values length mismatch\""
															},
															"value": "IDs and values length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_84631b1411dfd30314397a1487d6a580e00f82562cae361125f25c598b227a6d",
																"typeString": "literal_string \"IDs and values length mismatch\""
															}
														],
														"id": 845,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10430:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10430:70:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "10430:70:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 857,
																		"name": "erc20Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "10526:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
																			"typeString": "contract IERC20MintableBurnable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
																			"typeString": "contract IERC20MintableBurnable"
																		}
																	],
																	"id": 856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10518:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 855,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10518:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10518:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10549:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10541:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 859,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10541:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 862,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10541:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10518:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243323020746f6b656e206e6f7420736574",
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10553:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864",
																"typeString": "literal_string \"ERC20 token not set\""
															},
															"value": "ERC20 token not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864",
																"typeString": "literal_string \"ERC20 token not set\""
															}
														],
														"id": 854,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10510:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10510:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "10510:65:6"
											},
											{
												"body": {
													"id": 913,
													"nodeType": "Block",
													"src": "10627:275:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"baseExpression": {
																				"id": 879,
																				"name": "allowedERC1155Forward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 394,
																				"src": "10649:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																					"typeString": "mapping(address => mapping(uint256 => bool))"
																				}
																			},
																			"id": 882,
																			"indexExpression": {
																				"expression": {
																					"id": 880,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "10671:3:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 881,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10675:6:6",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "10671:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10649:33:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																				"typeString": "mapping(uint256 => bool)"
																			}
																		},
																		"id": 886,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 883,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 827,
																				"src": "10683:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 885,
																			"indexExpression": {
																				"id": 884,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 868,
																				"src": "10687:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "10683:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10649:41:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4f6e65206f72206d6f7265204552433131353520746f6b656e73206e6f7420616c6c6f77656420666f7220636f6e76657273696f6e",
																		"id": 887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10692:55:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c0d4a5a669671359d552798a9c7b93fa91d0a30f0daac20e66258a9b728d0684",
																			"typeString": "literal_string \"One or more ERC1155 tokens not allowed for conversion\""
																		},
																		"value": "One or more ERC1155 tokens not allowed for conversion"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_c0d4a5a669671359d552798a9c7b93fa91d0a30f0daac20e66258a9b728d0684",
																			"typeString": "literal_string \"One or more ERC1155 tokens not allowed for conversion\""
																		}
																	],
																	"id": 878,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "10641:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10641:107:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 889,
															"nodeType": "ExpressionStatement",
															"src": "10641:107:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 893,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 824,
																		"src": "10778:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 894,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 830,
																			"src": "10784:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 896,
																		"indexExpression": {
																			"id": 895,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 868,
																			"src": "10791:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10784:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 890,
																		"name": "erc20Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "10762:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
																			"typeString": "contract IERC20MintableBurnable"
																		}
																	},
																	"id": 892,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "10773:4:6",
																	"memberName": "mint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 348,
																	"src": "10762:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10762:32:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 898,
															"nodeType": "ExpressionStatement",
															"src": "10762:32:6"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 900,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 824,
																		"src": "10838:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 901,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10844:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10848:6:6",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10844:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 903,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 827,
																			"src": "10856:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 905,
																		"indexExpression": {
																			"id": 904,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 868,
																			"src": "10860:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10856:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 906,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 830,
																			"src": "10864:6:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 908,
																		"indexExpression": {
																			"id": 907,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 868,
																			"src": "10871:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "10864:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 909,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "10875:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 910,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10881:9:6",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "10875:15:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 899,
																	"name": "ERC1155ToERC20Conversion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 501,
																	"src": "10813:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256,uint256,uint256)"
																	}
																},
																"id": 911,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10813:78:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 912,
															"nodeType": "EmitStatement",
															"src": "10808:83:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 871,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "10606:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 872,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "10610:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10614:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "10610:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10606:14:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 914,
												"initializationExpression": {
													"assignments": [
														868
													],
													"declarations": [
														{
															"constant": false,
															"id": 868,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "10599:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 914,
															"src": "10591:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 867,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "10591:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 870,
													"initialValue": {
														"hexValue": "30",
														"id": 869,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10603:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "10591:13:6"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "10622:3:6",
														"subExpression": {
															"id": 875,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "10622:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 877,
													"nodeType": "ExpressionStatement",
													"src": "10622:3:6"
												},
												"nodeType": "ForStatement",
												"src": "10586:316:6"
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 915,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "10918:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_DualERC1155ERC20Converter_$1033",
																"typeString": "contract DualERC1155ERC20Converter"
															}
														},
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10923:22:6",
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 920,
														"src": "10918:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "10946:8:6",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "10918:36:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 837,
												"id": 918,
												"nodeType": "Return",
												"src": "10911:43:6"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "9821:303:6",
										"text": " @notice Called when multiple ERC1155 token types are transferred in a batch.\n Requirements:\n - The caller (operator) must equal the token owner (`from`).\n - Each ERC1155 contract (msg.sender) and token id must be allowed.\n @return bytes4 indicating acceptance."
									},
									"functionSelector": "bc197c81",
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "10138:22:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 834,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10312:8:6"
									},
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10178:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "10170:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10170:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "10204:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "10196:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 823,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10196:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "10235:3:6",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "10218:20:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 825,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10218:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 826,
													"nodeType": "ArrayTypeName",
													"src": "10218:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "10265:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "10248:23:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 828,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "10248:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 829,
													"nodeType": "ArrayTypeName",
													"src": "10248:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10294:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "10281:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 831,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10281:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10160:144:6"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 920,
												"src": "10330:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 835,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "10330:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10329:8:6"
									},
									"scope": 1033,
									"src": "10129:832:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "11723:1198:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 931,
																	"name": "allowedERC1155Reverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "11741:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_bool_$_$",
																		"typeString": "mapping(address => mapping(uint256 => bool))"
																	}
																},
																"id": 933,
																"indexExpression": {
																	"id": 932,
																	"name": "erc1155Contract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "11763:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "11741:38:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
																	"typeString": "mapping(uint256 => bool)"
																}
															},
															"id": 935,
															"indexExpression": {
																"id": 934,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "11780:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11741:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e76657273696f6e206e6f7420616c6c6f77656420666f722074686973204552433131353520746f6b656e",
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11790:47:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5238d4aee652249c28c9c7bb32e69a1db5c4a1216b30e22cedb7385260ff4d6a",
																"typeString": "literal_string \"Conversion not allowed for this ERC1155 token\""
															},
															"value": "Conversion not allowed for this ERC1155 token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5238d4aee652249c28c9c7bb32e69a1db5c4a1216b30e22cedb7385260ff4d6a",
																"typeString": "literal_string \"Conversion not allowed for this ERC1155 token\""
															}
														],
														"id": 930,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11733:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11733:105:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "11733:105:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 940,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 927,
																"src": "11856:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11865:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11856:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 943,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11868:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 939,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11848:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11848:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "11848:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 949,
																		"name": "erc20Token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "11929:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
																			"typeString": "contract IERC20MintableBurnable"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
																			"typeString": "contract IERC20MintableBurnable"
																		}
																	],
																	"id": 948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11921:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 947,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11921:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11921:19:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11952:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11944:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 951,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11944:7:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11944:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11921:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243323020746f6b656e206e6f7420736574",
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11956:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864",
																"typeString": "literal_string \"ERC20 token not set\""
															},
															"value": "ERC20 token not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bf9fd9110cafc553dbc66f3cac2f0d01036c4e7b6d78b3aa05386d7f1f0ec864",
																"typeString": "literal_string \"ERC20 token not set\""
															}
														],
														"id": 946,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11913:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11913:65:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "11913:65:6"
											},
											{
												"assignments": [
													960
												],
												"declarations": [
													{
														"constant": false,
														"id": 960,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12059:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1031,
														"src": "12054:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 959,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12054:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 971,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 963,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12093:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12097:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12093:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 967,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12113:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DualERC1155ERC20Converter_$1033",
																		"typeString": "contract DualERC1155ERC20Converter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DualERC1155ERC20Converter_$1033",
																		"typeString": "contract DualERC1155ERC20Converter"
																	}
																],
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12105:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 965,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12105:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 968,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12105:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 969,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "12120:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 961,
															"name": "erc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "12069:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
																"typeString": "contract IERC20MintableBurnable"
															}
														},
														"id": 962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12080:12:6",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 359,
														"src": "12069:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 970,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12069:58:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12054:73:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 973,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 960,
															"src": "12145:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433230207472616e73666572206661696c6564",
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12154:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
																"typeString": "literal_string \"ERC20 transfer failed\""
															},
															"value": "ERC20 transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149f6edbc245165298a5933e2b8185447f0287d5f0366944583def754930bcff",
																"typeString": "literal_string \"ERC20 transfer failed\""
															}
														],
														"id": 972,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12137:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 975,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12137:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 976,
												"nodeType": "ExpressionStatement",
												"src": "12137:41:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 980,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "12239:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 977,
															"name": "erc20Token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "12223:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20MintableBurnable_$365",
																"typeString": "contract IERC20MintableBurnable"
															}
														},
														"id": 979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12234:4:6",
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 364,
														"src": "12223:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12223:23:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 982,
												"nodeType": "ExpressionStatement",
												"src": "12223:23:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 987,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12342:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12346:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12342:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 989,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "12354:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 990,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "12363:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12371:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 984,
																	"name": "erc1155Contract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 923,
																	"src": "12320:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 983,
																"name": "IERC1155Minter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "12305:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1155Minter_$378_$",
																	"typeString": "type(contract IERC1155Minter)"
																}
															},
															"id": 985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12305:31:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1155Minter_$378",
																"typeString": "contract IERC1155Minter"
															}
														},
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12337:4:6",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 377,
														"src": "12305:36:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12305:69:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "ExpressionStatement",
												"src": "12305:69:6"
											},
											{
												"assignments": [
													996
												],
												"declarations": [
													{
														"constant": false,
														"id": 996,
														"mutability": "mutable",
														"name": "record",
														"nameLocation": "12466:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1031,
														"src": "12428:44:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ConversionRecordERC20ToERC1155_$434_memory_ptr",
															"typeString": "struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155"
														},
														"typeName": {
															"id": 995,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 994,
																"name": "ConversionRecordERC20ToERC1155",
																"nameLocations": [
																	"12428:30:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 434,
																"src": "12428:30:6"
															},
															"referencedDeclaration": 434,
															"src": "12428:30:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConversionRecordERC20ToERC1155_$434_storage_ptr",
																"typeString": "struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1006,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 998,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12526:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 999,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12530:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12526:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1000,
															"name": "erc1155Contract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "12567:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1001,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "12605:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1002,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "12634:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1003,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "12665:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1004,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12671:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "12665:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 997,
														"name": "ConversionRecordERC20ToERC1155",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "12475:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_ConversionRecordERC20ToERC1155_$434_storage_ptr_$",
															"typeString": "type(struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155 storage pointer)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"12520:4:6",
														"12550:15:6",
														"12596:7:6",
														"12626:6:6",
														"12654:9:6"
													],
													"names": [
														"user",
														"erc1155Contract",
														"tokenId",
														"amount",
														"timestamp"
													],
													"nodeType": "FunctionCall",
													"src": "12475:216:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ConversionRecordERC20ToERC1155_$434_memory_ptr",
														"typeString": "struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155 memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12428:263:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1010,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "12728:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConversionRecordERC20ToERC1155_$434_memory_ptr",
																"typeString": "struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155 memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ConversionRecordERC20ToERC1155_$434_memory_ptr",
																"typeString": "struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155 memory"
															}
														],
														"expression": {
															"id": 1007,
															"name": "erc20ToErc1155History",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 439,
															"src": "12701:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ConversionRecordERC20ToERC1155_$434_storage_$dyn_storage",
																"typeString": "struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155 storage ref[] storage ref"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12723:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "12701:26:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_ConversionRecordERC20ToERC1155_$434_storage_$dyn_storage_ptr_$_t_struct$_ConversionRecordERC20ToERC1155_$434_storage_$returns$__$attached_to$_t_array$_t_struct$_ConversionRecordERC20ToERC1155_$434_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155 storage ref[] storage pointer,struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155 storage ref)"
														}
													},
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12701:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "12701:34:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1018,
															"name": "record",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 996,
															"src": "12800:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ConversionRecordERC20ToERC1155_$434_memory_ptr",
																"typeString": "struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155 memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ConversionRecordERC20ToERC1155_$434_memory_ptr",
																"typeString": "struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155 memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1013,
																"name": "conversionRecordsERC20ToERC1155ByUser",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "12745:37:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_ConversionRecordERC20ToERC1155_$434_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155 storage ref[] storage ref)"
																}
															},
															"id": 1016,
															"indexExpression": {
																"expression": {
																	"id": 1014,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "12783:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1015,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "12787:6:6",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "12783:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "12745:49:6",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_ConversionRecordERC20ToERC1155_$434_storage_$dyn_storage",
																"typeString": "struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155 storage ref[] storage ref"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12795:4:6",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "12745:54:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_ConversionRecordERC20ToERC1155_$434_storage_$dyn_storage_ptr_$_t_struct$_ConversionRecordERC20ToERC1155_$434_storage_$returns$__$attached_to$_t_array$_t_struct$_ConversionRecordERC20ToERC1155_$434_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155 storage ref[] storage pointer,struct DualERC1155ERC20Converter.ConversionRecordERC20ToERC1155 storage ref)"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12745:62:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "12745:62:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1022,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12852:3:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12856:6:6",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12852:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1024,
															"name": "erc1155Contract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "12864:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1025,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "12881:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1026,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "12890:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1027,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "12898:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12904:9:6",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "12898:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1021,
														"name": "ERC20ToERC1155Conversion",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "12827:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12827:87:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1030,
												"nodeType": "EmitStatement",
												"src": "12822:92:6"
											}
										]
									},
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "11205:420:6",
										"text": " @notice Converts ERC20 tokens into ERC1155 tokens.\n Transfers ERC20 tokens from the user, burns them, and then mints ERC1155 tokens on the specified contract.\n @param erc1155Contract The address of the ERC1155 contract on which to mint tokens.\n @param tokenId The ERC1155 token id to mint.\n @param amount The amount of ERC20 tokens to convert (and thus ERC1155 tokens to mint)."
									},
									"functionSelector": "df84aae9",
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertToERC1155",
									"nameLocation": "11639:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "erc1155Contract",
												"nameLocation": "11664:15:6",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "11656:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11656:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11689:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "11681:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11681:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11706:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "11698:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11698:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11655:58:6"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11723:0:6"
									},
									"scope": 1033,
									"src": "11630:1291:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1034,
							"src": "1442:11481:6",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								459,
								465,
								471,
								477,
								483,
								489,
								501,
								513
							]
						}
					],
					"src": "32:12892:6"
				},
				"id": 6
			}
		}
	}
}